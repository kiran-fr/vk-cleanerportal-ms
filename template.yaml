Resources:
  UserRegistrationServiceRoleBCB3F31D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/UserRegistration/ServiceRole/Resource
  UserRegistration1E985772:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 113d9b2952cf8e0c5eaccf614615a8ec77658e1ec0044534426f8bf08f5fe3f5.zip
      Role:
        Fn::GetAtt:
          - UserRegistrationServiceRoleBCB3F31D
          - Arn
      FunctionName: UserRegistration
      Handler: index.UserRegistrationHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserRegistrationServiceRoleBCB3F31D
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/UserRegistration/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManTermsAndConditionServiceRole06AE84AC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksManTermsAndCondition/ServiceRole/Resource
  WorksManTermsAndCondition66F1F295:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c0b7d580097b982d0000812a7694cbcaf1fa0c1974e142d2728e5b2db1a2a02a.zip
      Role:
        Fn::GetAtt:
          - WorksManTermsAndConditionServiceRole06AE84AC
          - Arn
      FunctionName: WorksManTermsAndCondition
      Handler: index.WorksManTermsAndConditionHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManTermsAndConditionServiceRole06AE84AC
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksManTermsAndCondition/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManExperienceServiceRoleE9A759F2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksManExperience/ServiceRole/Resource
  WorksManExperienceAB1A1501:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: b93ce4abba9084b83474a8b6be5e8a108c0961a8ec0ac1f183ebafe0c16c799a.zip
      Role:
        Fn::GetAtt:
          - WorksManExperienceServiceRoleE9A759F2
          - Arn
      FunctionName: WorksManExperience
      Handler: index.WorksManExperienceHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManExperienceServiceRoleE9A759F2
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksManExperience/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetWorksmanAccountRegistartionStatus/ServiceRole/Resource
  GetWorksmanAccountRegistartionStatusA28FB6DA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e54ec9f2cd4dff27b1b4eef2951812c89d6885bc3ab0de74463a2610aa889ab1.zip
      Role:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2
          - Arn
      FunctionName: GetWorksmanAccountRegistartionStatus
      Handler: index.GetWorksmanAccountRegistartionStatusHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetWorksmanAccountRegistartionStatus/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanAccountRegistartionStatus
      aws:asset:is-bundled: false
      aws:asset:property: Code
  getAllMobileNumberServiceRoleD38739BC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/getAllMobileNumber/ServiceRole/Resource
  getAllMobileNumberCEE5681C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: a7960ad56c8b041965d08884b00c5922944b29996fcecb7ee6e05641743f188c.zip
      Role:
        Fn::GetAtt:
          - getAllMobileNumberServiceRoleD38739BC
          - Arn
      FunctionName: getAllMobileNumbers
      Handler: index.getAllMobileNumbersHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - getAllMobileNumberServiceRoleD38739BC
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/getAllMobileNumber/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\userEmailError
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetWorkmanDetailsServiceRole7D7C7A93:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetWorkmanDetails/ServiceRole/Resource
  GetWorkmanDetails839D982B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d0e1ceb4da11738be01b57a4bdba45fa5719d8dbf442d3ad1ce126f0b81f111e.zip
      Role:
        Fn::GetAtt:
          - GetWorkmanDetailsServiceRole7D7C7A93
          - Arn
      FunctionName: GetWorkmanDetailsFun
      Handler: index.GetWorksmanDetailsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetWorkmanDetailsServiceRole7D7C7A93
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetWorkmanDetails/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanDetails
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UpdateWorksmanDetailServiceRole84747935:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/UpdateWorksmanDetail/ServiceRole/Resource
  UpdateWorksmanDetail764C9F8C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 454acb2c2c4e5e2f7931f9198cf7f9a8a8a6b70adb77b3f5fb6cd55a7af742a6.zip
      Role:
        Fn::GetAtt:
          - UpdateWorksmanDetailServiceRole84747935
          - Arn
      FunctionName: UpdateWorksmanDetailsFun
      Handler: index.UpdateWorksmanDetailsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - UpdateWorksmanDetailServiceRole84747935
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/UpdateWorksmanDetail/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UpdateWorksmanDetails
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UserPostCodesServiceRoleCB809F91:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/UserPostCodes/ServiceRole/Resource
  UserPostCodesEC5B0AD7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c60ebe7063b4bb5b10519c19e555ac4f64fc719f480fc1d055f3f4caa1e4fe52.zip
      Role:
        Fn::GetAtt:
          - UserPostCodesServiceRoleCB809F91
          - Arn
      FunctionName: UserPostCodesFun
      Handler: index.UserPostCodesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - UserPostCodesServiceRoleCB809F91
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/UserPostCodes/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserPostCodes
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetAllPostcodesServiceRoleBD916F10:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetAllPostcodes/ServiceRole/Resource
  GetAllPostcodes029D20CC:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: a0dcfd45286e0f61ae48d6bc8f2a6c656d2de530437994ef697a37d46449b810.zip
      Role:
        Fn::GetAtt:
          - GetAllPostcodesServiceRoleBD916F10
          - Arn
      FunctionName: GetAllPostcodesFun
      Handler: index.GetAllPostcodesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetAllPostcodesServiceRoleBD916F10
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetAllPostcodes/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetAllPostcodes
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DeletePostcodesServiceRole4286E553:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/DeletePostcodes/ServiceRole/Resource
  DeletePostcodes16F8A0A6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: cdb3b825af3630ae35587068359c7c64fffd5051fcdcc5302eebad50fee5710a.zip
      Role:
        Fn::GetAtt:
          - DeletePostcodesServiceRole4286E553
          - Arn
      FunctionName: DeletePostcodesFun
      Handler: index.DeletePostcodesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - DeletePostcodesServiceRole4286E553
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/DeletePostcodes/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\DeletePostcodes
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CreateWorksmanScheduleServiceRole1230E12A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreateWorksmanSchedule/ServiceRole/Resource
  CreateWorksmanSchedule15C9D17D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 2ca17396a4adce8d794854366ff7b121ac9e206dca7e968eaabb536076dd3871.zip
      Role:
        Fn::GetAtt:
          - CreateWorksmanScheduleServiceRole1230E12A
          - Arn
      FunctionName: CreateWorksmanScheduleFun
      Handler: index.CreateWorksmanScheduleHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - CreateWorksmanScheduleServiceRole1230E12A
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreateWorksmanSchedule/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\CreateWorksmanSchedule
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DeleteWorkmanScheduleServiceRoleDE63A6DE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/DeleteWorkmanSchedule/ServiceRole/Resource
  DeleteWorkmanSchedule22944F3C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 381cb2bb877a2dd21822bc0ea1efc7105841d967255ac6678b38b74fd265323b.zip
      Role:
        Fn::GetAtt:
          - DeleteWorkmanScheduleServiceRoleDE63A6DE
          - Arn
      FunctionName: DeleteWorkmanScheduleFun
      Handler: index.DeleteWorkmanScheduleHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - DeleteWorkmanScheduleServiceRoleDE63A6DE
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/DeleteWorkmanSchedule/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\DeleteWorkmanSchedule
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetWorksmanScheduleServiceRoleE4B9B5D3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetWorksmanSchedule/ServiceRole/Resource
  GetWorksmanScheduleC62DDBF7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1f4048f7c502ebdbec661905f19f8501a5e1ef8febf6e4dd1b2502f76b9bfae6.zip
      Role:
        Fn::GetAtt:
          - GetWorksmanScheduleServiceRoleE4B9B5D3
          - Arn
      FunctionName: GetWorksmanSchedulesFun
      Handler: index.GetWorksmanSchedulesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetWorksmanScheduleServiceRoleE4B9B5D3
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetWorksmanSchedule/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanSchedules
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetWorksmanjobsServiceRoleD07827B2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetWorksmanjobs/ServiceRole/Resource
  GetWorksmanjobsC1DF3F8D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 229dd06f81240fa399d29c6f8b9ae54e73a0958d410b18dbe8a8fe791e8b7747.zip
      Role:
        Fn::GetAtt:
          - GetWorksmanjobsServiceRoleD07827B2
          - Arn
      FunctionName: GetWorksmanjobsFun
      Handler: index.GetWorksmanjobsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetWorksmanjobsServiceRoleD07827B2
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetWorksmanjobs/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanjobs
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksmanjobsCreateServiceRole9BB86293:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanjobsCreate/ServiceRole/Resource
  WorksmanjobsCreate9C217260:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d58b1302e3fe9ed2133887cc52526740aeed77c3f52dfdb5ddcd33a438e11506.zip
      Role:
        Fn::GetAtt:
          - WorksmanjobsCreateServiceRole9BB86293
          - Arn
      FunctionName: WorksmanjobsCreateFun
      Handler: index.WorksmanjobsCreateHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - WorksmanjobsCreateServiceRole9BB86293
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanjobsCreate/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksmanjobsCreate
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CreateBankDetailsServiceRole0EDAB387:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreateBankDetails/ServiceRole/Resource
  CreateBankDetailsEF6B9549:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 9f0636da98bb6e34332a73c955d911df6eaeadf2e524123b2ca8cd6c81ab4dd7.zip
      Role:
        Fn::GetAtt:
          - CreateBankDetailsServiceRole0EDAB387
          - Arn
      FunctionName: CreateBankDetailsFun
      Handler: index.CreateBankDetailsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - CreateBankDetailsServiceRole0EDAB387
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreateBankDetails/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\CreateBankDetails
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetBankDetailsServiceRoleEC4658D9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetBankDetails/ServiceRole/Resource
  GetBankDetails125327D9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e5036dcf8d7859dc87fb61421910ab6221bf371ed57424923fd875c7902e99f7.zip
      Role:
        Fn::GetAtt:
          - GetBankDetailsServiceRoleEC4658D9
          - Arn
      FunctionName: GetBankDetailsFun
      Handler: index.GetBankDetailsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetBankDetailsServiceRoleEC4658D9
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetBankDetails/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetBankDetails
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CreateMessagesServiceRole51834501:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreateMessages/ServiceRole/Resource
  CreateMessages23E7B181:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: a2756cf7c8d1f85e4a0e8ef0118515c9629bfdd1b00666882e8cc5704694faa0.zip
      Role:
        Fn::GetAtt:
          - CreateMessagesServiceRole51834501
          - Arn
      FunctionName: CreateMessagesFun
      Handler: index.CreateMessagesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - CreateMessagesServiceRole51834501
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreateMessages/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\CreateMessages
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetMessagesServiceRole900FF734:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetMessages/ServiceRole/Resource
  GetMessagesEBEDDDD2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f1c98af167772b8a79b5e1e9319e42cc5d5a03e1f7ba18b82624bc60b639dbbc.zip
      Role:
        Fn::GetAtt:
          - GetMessagesServiceRole900FF734
          - Arn
      FunctionName: GetMessagesFun
      Handler: index.GetMessagesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetMessagesServiceRole900FF734
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetMessages/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetMessages
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CreateCustomerTableServiceRole779AF5B7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreateCustomerTable/ServiceRole/Resource
  CreateCustomerTable11E80E27:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 14362d3532f681f92bfd04e7354bef4954fe1c6443912cd9a7e0a283224aa815.zip
      Role:
        Fn::GetAtt:
          - CreateCustomerTableServiceRole779AF5B7
          - Arn
      FunctionName: CreateCustomerTableFun
      Handler: index.CreateCustomerTableHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - CreateCustomerTableServiceRole779AF5B7
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreateCustomerTable/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\CreateCustomerTable
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CreateCustomerAddressServiceRole2AF5E252:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreateCustomerAddress/ServiceRole/Resource
  CreateCustomerAddressC1EA6BF7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 4a7b365c3f99bb4214db261d7b357925ad49aff68a3b8ad285469fb530241a3c.zip
      Role:
        Fn::GetAtt:
          - CreateCustomerAddressServiceRole2AF5E252
          - Arn
      FunctionName: CreateCustomerAddressFun
      Handler: index.CreateCustomerAddressHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - CreateCustomerAddressServiceRole2AF5E252
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreateCustomerAddress/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\CreateCustomerAddress
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetJobsServiceRole096CB5A5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetJobs/ServiceRole/Resource
  GetJobsE878805E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f72793a1bef30a642eafb4640b40718b24bbea6fc469f9c3eae3405a16ba07bf.zip
      Role:
        Fn::GetAtt:
          - GetJobsServiceRole096CB5A5
          - Arn
      FunctionName: GetJobsFun
      Handler: index.GetJobsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetJobsServiceRole096CB5A5
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetJobs/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetJobsTable
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetPaymentDetailsServiceRole04045F23:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetPaymentDetails/ServiceRole/Resource
  GetPaymentDetailsE3A0032F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 98b4022d2260c41c8dcff542335bcd479856d03468e56d8c712648d5fcefa1c6.zip
      Role:
        Fn::GetAtt:
          - GetPaymentDetailsServiceRole04045F23
          - Arn
      FunctionName: GetPaymentDetailsFun
      Handler: index.GetPaymentDetailsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetPaymentDetailsServiceRole04045F23
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetPaymentDetails/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetPaymentDetails
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CreatePaymentHistoryDetailsServiceRoleB88C1A96:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreatePaymentHistoryDetails/ServiceRole/Resource
  CreatePaymentHistoryDetails29607F15:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 211e2246765e3c6368369ab4a0f9cd4f9e13bb41bc3750f9c9d8c0dbe8fdbb3a.zip
      Role:
        Fn::GetAtt:
          - CreatePaymentHistoryDetailsServiceRoleB88C1A96
          - Arn
      FunctionName: CreatePaymentHistoryDetailsFun
      Handler: index.CreatePaymentHistoryDetailsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - CreatePaymentHistoryDetailsServiceRoleB88C1A96
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CreatePaymentHistoryDetails/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\CreatePaymentHistoryDetails
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetPaymentHistoryDetailsServiceRoleE90AB70B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetPaymentHistoryDetails/ServiceRole/Resource
  GetPaymentHistoryDetails96306007:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: beb5d4038efc0e30218ecc54f27c0fa9d0406163c0e40673ba93d8b501afa5e9.zip
      Role:
        Fn::GetAtt:
          - GetPaymentHistoryDetailsServiceRoleE90AB70B
          - Arn
      FunctionName: GetPaymentHistoryDetailsFun
      Handler: index.GetPaymentHistoryDetailsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetPaymentHistoryDetailsServiceRoleE90AB70B
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetPaymentHistoryDetails/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetPaymentHistoryDetails
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetDistrictWisePostCodesServiceRoleAF0CEA3D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetDistrictWisePostCodes/ServiceRole/Resource
  GetDistrictWisePostCodesD035913F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 2ba24367ac674e87342fb3185360d20ea7ef9542ff6ce1071f6922860e6e2da6.zip
      Role:
        Fn::GetAtt:
          - GetDistrictWisePostCodesServiceRoleAF0CEA3D
          - Arn
      FunctionName: GetDistrictWisePostCodesFun
      Handler: index.GetDistrictWisePostCodesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetDistrictWisePostCodesServiceRoleAF0CEA3D
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/GetDistrictWisePostCodes/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetDistrictWisePostCodes
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UpdateBankDetailsServiceRole4E770C60:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/UpdateBankDetails/ServiceRole/Resource
  UpdateBankDetailsA9E25F06:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 300c5900a26dfe657de5a089b3a2639a71774758b3f5728cf55c71322b48202f.zip
      Role:
        Fn::GetAtt:
          - UpdateBankDetailsServiceRole4E770C60
          - Arn
      FunctionName: UpdateBankDetailsFun
      Handler: index.UpdateBankDetailsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - UpdateBankDetailsServiceRole4E770C60
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/UpdateBankDetails/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UpdateBankDetails
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksmanApiData98FA1C09:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: User Registration api gateway
      Name: WorksmanApiData
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Resource
  WorksmanApiDataCloudWatchRoleE4C67A1A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/CloudWatchRole/Resource
  WorksmanApiDataAccountF04FE1A8:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - WorksmanApiDataCloudWatchRoleE4C67A1A
          - Arn
    DependsOn:
      - WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Account
  WorksmanApiDataDeploymentA92EDC935b8a95d9aadca88ac08ab2b8faef6334:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      Description: Automatically created by the RestApi construct
    DependsOn:
      - WorksmanApiDataCreateBankDetailsErrorDA7E8D61
      - WorksmanApiDataCreateBankDetailsModelBBDC6EEC
      - WorksmanApiDataCreateBankDetailsResponseB914BB7C
      - WorksmanApiDataCreateMessagesErrorAE99D59F
      - WorksmanApiDataCreateMessagesModelD28B06E4
      - WorksmanApiDataCreateMessagesResponse64B94F74
      - WorksmanApiDataCreateWorksmanScheduleError805CDD18
      - WorksmanApiDataCreateWorksmanScheduleModelC8707AA9
      - WorksmanApiDataCreateWorksmanScheduleRes41814DDA
      - WorksmanApiDataCreateBankDetailsApiOPTIONSCA942F10
      - WorksmanApiDataCreateBankDetailsApiPOST9C83D3F5
      - WorksmanApiDataCreateBankDetailsApiB0CA4428
      - WorksmanApiDataCreateMessagesApiOPTIONSBA535DCF
      - WorksmanApiDataCreateMessagesApiPOST8CAD24CE
      - WorksmanApiDataCreateMessagesApi75B781CF
      - WorksmanApiDatacreatePostcodeApiOPTIONSBB01F822
      - WorksmanApiDatacreatePostcodeApiPOST98D72FD0
      - WorksmanApiDatacreatePostcodeApi7C746D47
      - WorksmanApiDataCreateWorksmanScheduleApiOPTIONSA49E247B
      - WorksmanApiDataCreateWorksmanScheduleApiPOST0622EBBE
      - WorksmanApiDataCreateWorksmanScheduleApi6539FB7F
      - WorksmanApiDataDeletePostcodesApiDELETEDFDF54BC
      - WorksmanApiDataDeletePostcodesApiOPTIONS523E652F
      - WorksmanApiDataDeletePostcodesApi443BD593
      - WorksmanApiDataDeleteWorkmanScheduleApiDELETEC5C770F7
      - WorksmanApiDataDeleteWorkmanScheduleApiOPTIONSA3B69A8E
      - WorksmanApiDataDeleteWorkmanScheduleApi1D03C02B
      - WorksmanApiDatagetAllMobileNumbereApiGatewayGET975267F9
      - WorksmanApiDatagetAllMobileNumbereApiGatewayOPTIONS2C8B4502
      - WorksmanApiDatagetAllMobileNumbereApiGatewayD8016FCE
      - WorksmanApiDataGetAllPostcodesApiGET29AD6CA8
      - WorksmanApiDataGetAllPostcodesApiOPTIONSFC82FBC1
      - WorksmanApiDataGetAllPostcodesApi0978F3E0
      - WorksmanApiDataGetBankDetailsApiGET08E01681
      - WorksmanApiDataGetBankDetailsApiOPTIONS234F2577
      - WorksmanApiDataGetBankDetailsApiE78B853A
      - WorksmanApiDataGetDistrictWisePostCodesApiGET0F05CCFC
      - WorksmanApiDataGetDistrictWisePostCodesApiOPTIONSCC59ED6D
      - WorksmanApiDataGetDistrictWisePostCodesApi096FEEB8
      - WorksmanApiDataGetJobsApiGETD45992F7
      - WorksmanApiDataGetJobsApiOPTIONS28532535
      - WorksmanApiDataGetJobsApi910EFB62
      - WorksmanApiDataGetMessagesApiGETBC72D9B3
      - WorksmanApiDataGetMessagesApiOPTIONSF9CDBFAD
      - WorksmanApiDataGetMessagesApi19FCE89C
      - WorksmanApiDataGetPaymentDetailsApiGETEB5B4839
      - WorksmanApiDataGetPaymentDetailsApiOPTIONS98A44A74
      - WorksmanApiDataGetPaymentDetailsApiD9FEFBDA
      - WorksmanApiDataGetPaymentHistoryDetailsApiGETE877EA7C
      - WorksmanApiDataGetPaymentHistoryDetailsApiOPTIONS244B8578
      - WorksmanApiDataGetPaymentHistoryDetailsApiAF38AF15
      - WorksmanApiDataGetWorkmanDetailsApiGET9EABF6F9
      - WorksmanApiDataGetWorkmanDetailsApiOPTIONS27DC75BD
      - WorksmanApiDataGetWorkmanDetailsApiCEEEF4BE
      - WorksmanApiDataGetWorksmanAccountRegistartionStatusApiGET94A1D29E
      - WorksmanApiDataGetWorksmanAccountRegistartionStatusApiOPTIONS1EC0ED4F
      - WorksmanApiDataGetWorksmanAccountRegistartionStatusApi351CEF32
      - WorksmanApiDataGetWorksmanjobsApiGET64403440
      - WorksmanApiDataGetWorksmanjobsApiOPTIONS4E84E903
      - WorksmanApiDataGetWorksmanjobsApi1DA29B58
      - WorksmanApiDataGetWorksmanScheduleApiGETD0845394
      - WorksmanApiDataGetWorksmanScheduleApiOPTIONS550D7315
      - WorksmanApiDataGetWorksmanScheduleApiDAB1C151
      - WorksmanApiDataOPTIONS0171B204
      - WorksmanApiDataUpdateBankDetailsApiOPTIONSDFF568DC
      - WorksmanApiDataUpdateBankDetailsApiPUT3274AE15
      - WorksmanApiDataUpdateBankDetailsApi5B5A7292
      - WorksmanApiDataworksmanExperienceapiOPTIONS1C299098
      - WorksmanApiDataworksmanExperienceapiPOST9DC9EBC1
      - WorksmanApiDataworksmanExperienceapiEF23C411
      - WorksmanApiDataWorksmanjobsCreateApiOPTIONS4D8689AC
      - WorksmanApiDataWorksmanjobsCreateApiPOST09CEFED2
      - WorksmanApiDataWorksmanjobsCreateApi0CF878A7
      - WorksmanApiDataWorksmanTermsAndConditionsApiOPTIONS3E34F916
      - WorksmanApiDataWorksmanTermsAndConditionsApiPOST657CB009
      - WorksmanApiDataWorksmanTermsAndConditionsApi82F6E01E
      - WorksmanApiDataDeletePostcodesError328F9A5F
      - WorksmanApiDataDeletePostcodesRespC2463B23
      - WorksmanApiDataDeleteWorkmanScheduleError092163F9
      - WorksmanApiDataDeleteWorkmanScheduleResp1F253DFD
      - WorksmanApiDataErrorpworksmanExperienceMethods69CF4BBE
      - WorksmanApiDataErrorWorksmanTermsAndConditions43C6C101
      - WorksmanApiDatagetAllMobileNumber33E2181D
      - WorksmanApiDatagetAllMobileNumberErrorD1997434
      - WorksmanApiDataGetAllPostcodesError41120C52
      - WorksmanApiDataGetAllPostcodesResp85A0F4E8
      - WorksmanApiDataGetBankDetailsError06A6C9C1
      - WorksmanApiDataGetBankDetailsRespD309C268
      - WorksmanApiDataGetDistrictWisePostCodesErr0B79BBE3
      - WorksmanApiDataGetDistrictWisePostCodesRes6EC45338
      - WorksmanApiDataGetJobsError85B350D2
      - WorksmanApiDataGetJobsResp03739CA8
      - WorksmanApiDataGetMessagesErrorB209CEEC
      - WorksmanApiDataGetMessagesResp3946AD34
      - WorksmanApiDataGetPaymentDetailsErrC5567887
      - WorksmanApiDataGetPaymentDetailsRes5D34FD6D
      - WorksmanApiDataGetPaymentHistoryDetailsErr86F39656
      - WorksmanApiDataGetPaymentHistoryDetailsRes23BA890C
      - WorksmanApiDataGetWorkmanDetailsError372F4110
      - WorksmanApiDataGetWorkmanDetailsuceesEF33092E
      - WorksmanApiDataGetWorksmanjobsErrorB0D87E6D
      - WorksmanApiDataGetWorksmanjobsRespEBE6FFDA
      - WorksmanApiDataGetWorksmanScheduleErrorA2F10B24
      - WorksmanApiDataGetWorksmanScheduleResp3D7B3B8A
      - WorksmanApiDataRespworksmanExperienceMethods25D4C962
      - WorksmanApiDataResWorksmanTermsAndConditionsFB1DB1C1
      - WorksmanApiDataUpdateBankDetailsErrorE3AAF572
      - WorksmanApiDataUpdateBankDetailsModel87571A12
      - WorksmanApiDataUpdateBankDetailsRes27FAC034
      - WorksmanApiDataUserPostCodesErrorE2AC47EB
      - WorksmanApiDataUserPostCodesModel6052E87D
      - WorksmanApiDataUserPostCodesResponse9DDA18BA
      - WorksmanApiDataWorkmanStatusError36A4FD0F
      - WorksmanApiDataWorkmanStatusSuccessC1487EC0
      - WorksmanApiDataworksmanExperienceModelEB3EABAC
      - WorksmanApiDataWorksmanjobsCreateError1FA1CF74
      - WorksmanApiDataWorksmanjobsCreateModel94C50EB8
      - WorksmanApiDataWorksmanjobsCreateResponse8982697B
      - WorksmanApiDataWorksmanTermsAndConditionsModel668ED74F
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Deployment/Resource
  WorksmanApiDataDeploymentStagedev6C7183E5:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      DeploymentId:
        Ref: WorksmanApiDataDeploymentA92EDC935b8a95d9aadca88ac08ab2b8faef6334
      StageName: dev
    DependsOn:
      - WorksmanApiDataAccountF04FE1A8
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/DeploymentStage.dev/Resource
  WorksmanApiDataOPTIONS0171B204:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/OPTIONS/Resource
  WorksmanApiDataWorksmanTermsAndConditionsApi82F6E01E:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: WorksmanTermsAndConditionsApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/WorksmanTermsAndConditionsApi/Resource
  WorksmanApiDataWorksmanTermsAndConditionsApiOPTIONS3E34F916:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataWorksmanTermsAndConditionsApi82F6E01E
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/WorksmanTermsAndConditionsApi/OPTIONS/Resource
  WorksmanApiDataWorksmanTermsAndConditionsApiPOSTApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTWorksmanTermsAndConditionsApi86BC5EB5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /POST/WorksmanTermsAndConditionsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/WorksmanTermsAndConditionsApi/POST/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..WorksmanTermsAndConditionsApi
  WorksmanApiDataWorksmanTermsAndConditionsApiPOSTApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTWorksmanTermsAndConditionsApi1E52E20F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/POST/WorksmanTermsAndConditionsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/WorksmanTermsAndConditionsApi/POST/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..WorksmanTermsAndConditionsApi
  WorksmanApiDataWorksmanTermsAndConditionsApiPOST657CB009:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksmanApiDataWorksmanTermsAndConditionsApi82F6E01E
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters: {}
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManTermsAndCondition66F1F295
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataResWorksmanTermsAndConditionsFB1DB1C1
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataErrorWorksmanTermsAndConditions43C6C101
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksmanApiDataWorksmanTermsAndConditionsModel668ED74F
      RequestParameters: {}
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/WorksmanTermsAndConditionsApi/POST/Resource
  WorksmanApiDataworksmanExperienceapiEF23C411:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: worksmanExperienceapi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/worksmanExperienceapi/Resource
  WorksmanApiDataworksmanExperienceapiOPTIONS1C299098:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataworksmanExperienceapiEF23C411
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/worksmanExperienceapi/OPTIONS/Resource
  WorksmanApiDataworksmanExperienceapiPOSTApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTworksmanExperienceapi6F4E9480:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /POST/worksmanExperienceapi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/worksmanExperienceapi/POST/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..worksmanExperienceapi
  WorksmanApiDataworksmanExperienceapiPOSTApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTworksmanExperienceapi7EBE36D3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/POST/worksmanExperienceapi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/worksmanExperienceapi/POST/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..worksmanExperienceapi
  WorksmanApiDataworksmanExperienceapiPOST9DC9EBC1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksmanApiDataworksmanExperienceapiEF23C411
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters: {}
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManExperienceAB1A1501
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataRespworksmanExperienceMethods25D4C962
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataErrorpworksmanExperienceMethods69CF4BBE
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksmanApiDataworksmanExperienceModelEB3EABAC
      RequestParameters: {}
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/worksmanExperienceapi/POST/Resource
  WorksmanApiDatacreatePostcodeApi7C746D47:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: createPostcodeApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/createPostcodeApi/Resource
  WorksmanApiDatacreatePostcodeApiOPTIONSBB01F822:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDatacreatePostcodeApi7C746D47
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/createPostcodeApi/OPTIONS/Resource
  WorksmanApiDatacreatePostcodeApiPOSTApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTcreatePostcodeApiD32E3BCB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserPostCodesEC5B0AD7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /POST/createPostcodeApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/createPostcodeApi/POST/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..createPostcodeApi
  WorksmanApiDatacreatePostcodeApiPOSTApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTcreatePostcodeApi7920B874:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserPostCodesEC5B0AD7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/POST/createPostcodeApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/createPostcodeApi/POST/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..createPostcodeApi
  WorksmanApiDatacreatePostcodeApiPOST98D72FD0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksmanApiDatacreatePostcodeApi7C746D47
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters: {}
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UserPostCodesEC5B0AD7
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataUserPostCodesResponse9DDA18BA
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataUserPostCodesErrorE2AC47EB
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksmanApiDataUserPostCodesModel6052E87D
      RequestParameters: {}
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/createPostcodeApi/POST/Resource
  WorksmanApiDataCreateWorksmanScheduleApi6539FB7F:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: CreateWorksmanScheduleApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateWorksmanScheduleApi/Resource
  WorksmanApiDataCreateWorksmanScheduleApiOPTIONSA49E247B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataCreateWorksmanScheduleApi6539FB7F
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateWorksmanScheduleApi/OPTIONS/Resource
  WorksmanApiDataCreateWorksmanScheduleApiPOSTApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTCreateWorksmanScheduleApiA08B8FA9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateWorksmanSchedule15C9D17D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /POST/CreateWorksmanScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateWorksmanScheduleApi/POST/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..CreateWorksmanScheduleApi
  WorksmanApiDataCreateWorksmanScheduleApiPOSTApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTCreateWorksmanScheduleApi88A48CC9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateWorksmanSchedule15C9D17D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/POST/CreateWorksmanScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateWorksmanScheduleApi/POST/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..CreateWorksmanScheduleApi
  WorksmanApiDataCreateWorksmanScheduleApiPOST0622EBBE:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksmanApiDataCreateWorksmanScheduleApi6539FB7F
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters: {}
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CreateWorksmanSchedule15C9D17D
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataCreateWorksmanScheduleRes41814DDA
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataCreateWorksmanScheduleError805CDD18
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksmanApiDataCreateWorksmanScheduleModelC8707AA9
      RequestParameters: {}
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateWorksmanScheduleApi/POST/Resource
  WorksmanApiDataWorksmanjobsCreateApi0CF878A7:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: WorksmanjobsCreateApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/WorksmanjobsCreateApi/Resource
  WorksmanApiDataWorksmanjobsCreateApiOPTIONS4D8689AC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataWorksmanjobsCreateApi0CF878A7
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/WorksmanjobsCreateApi/OPTIONS/Resource
  WorksmanApiDataWorksmanjobsCreateApiPOSTApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTWorksmanjobsCreateApiE790AF73:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksmanjobsCreate9C217260
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /POST/WorksmanjobsCreateApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/WorksmanjobsCreateApi/POST/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..WorksmanjobsCreateApi
  WorksmanApiDataWorksmanjobsCreateApiPOSTApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTWorksmanjobsCreateApiBC885B98:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksmanjobsCreate9C217260
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/POST/WorksmanjobsCreateApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/WorksmanjobsCreateApi/POST/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..WorksmanjobsCreateApi
  WorksmanApiDataWorksmanjobsCreateApiPOST09CEFED2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksmanApiDataWorksmanjobsCreateApi0CF878A7
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters: {}
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksmanjobsCreate9C217260
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataWorksmanjobsCreateResponse8982697B
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataWorksmanjobsCreateError1FA1CF74
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksmanApiDataWorksmanjobsCreateModel94C50EB8
      RequestParameters: {}
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/WorksmanjobsCreateApi/POST/Resource
  WorksmanApiDataCreateBankDetailsApiB0CA4428:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: CreateBankDetailsApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateBankDetailsApi/Resource
  WorksmanApiDataCreateBankDetailsApiOPTIONSCA942F10:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataCreateBankDetailsApiB0CA4428
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateBankDetailsApi/OPTIONS/Resource
  WorksmanApiDataCreateBankDetailsApiPOSTApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTCreateBankDetailsApi8EEA71A9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateBankDetailsEF6B9549
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /POST/CreateBankDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateBankDetailsApi/POST/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..CreateBankDetailsApi
  WorksmanApiDataCreateBankDetailsApiPOSTApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTCreateBankDetailsApi7B51DF4D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateBankDetailsEF6B9549
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/POST/CreateBankDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateBankDetailsApi/POST/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..CreateBankDetailsApi
  WorksmanApiDataCreateBankDetailsApiPOST9C83D3F5:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksmanApiDataCreateBankDetailsApiB0CA4428
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters: {}
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CreateBankDetailsEF6B9549
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataCreateBankDetailsResponseB914BB7C
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataCreateBankDetailsErrorDA7E8D61
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksmanApiDataCreateBankDetailsModelBBDC6EEC
      RequestParameters: {}
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateBankDetailsApi/POST/Resource
  WorksmanApiDataCreateMessagesApi75B781CF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: CreateMessagesApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateMessagesApi/Resource
  WorksmanApiDataCreateMessagesApiOPTIONSBA535DCF:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataCreateMessagesApi75B781CF
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateMessagesApi/OPTIONS/Resource
  WorksmanApiDataCreateMessagesApiPOSTApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTCreateMessagesApi5FCCEE6C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateMessages23E7B181
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /POST/CreateMessagesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateMessagesApi/POST/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..CreateMessagesApi
  WorksmanApiDataCreateMessagesApiPOSTApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5POSTCreateMessagesApiB1FF9599:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateMessages23E7B181
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/POST/CreateMessagesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateMessagesApi/POST/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.POST..CreateMessagesApi
  WorksmanApiDataCreateMessagesApiPOST8CAD24CE:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksmanApiDataCreateMessagesApi75B781CF
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters: {}
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CreateMessages23E7B181
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataCreateMessagesResponse64B94F74
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataCreateMessagesErrorAE99D59F
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksmanApiDataCreateMessagesModelD28B06E4
      RequestParameters: {}
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/CreateMessagesApi/POST/Resource
  WorksmanApiDataGetWorksmanAccountRegistartionStatusApi351CEF32:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetWorksmanAccountRegistartionStatusApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanAccountRegistartionStatusApi/Resource
  WorksmanApiDataGetWorksmanAccountRegistartionStatusApiOPTIONS1EC0ED4F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetWorksmanAccountRegistartionStatusApi351CEF32
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanAccountRegistartionStatusApi/OPTIONS/Resource
  WorksmanApiDataGetWorksmanAccountRegistartionStatusApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetWorksmanAccountRegistartionStatusApiF864DC4D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusA28FB6DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetWorksmanAccountRegistartionStatusApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanAccountRegistartionStatusApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetWorksmanAccountRegistartionStatusApi
  WorksmanApiDataGetWorksmanAccountRegistartionStatusApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetWorksmanAccountRegistartionStatusApi7363ECD6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusA28FB6DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetWorksmanAccountRegistartionStatusApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanAccountRegistartionStatusApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetWorksmanAccountRegistartionStatusApi
  WorksmanApiDataGetWorksmanAccountRegistartionStatusApiGET94A1D29E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetWorksmanAccountRegistartionStatusApi351CEF32
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksmanIdHeader: method.request.header.worksmanIdHeader
          integration.request.header.email: method.request.header.email
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksmanIdHeader\":\"$util.escapeJavaScript($input.params('worksmanIdHeader'))\",\"email\":\"$util.escapeJavaScript($input.params('email'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetWorksmanAccountRegistartionStatusA28FB6DA
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataWorkmanStatusSuccessC1487EC0
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataWorkmanStatusError36A4FD0F
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksmanIdHeader: true
        method.request.header.email: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanAccountRegistartionStatusApi/GET/Resource
  WorksmanApiDatagetAllMobileNumbereApiGatewayD8016FCE:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: getAllMobileNumbereApiGateway
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/getAllMobileNumbereApiGateway/Resource
  WorksmanApiDatagetAllMobileNumbereApiGatewayOPTIONS2C8B4502:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDatagetAllMobileNumbereApiGatewayD8016FCE
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/getAllMobileNumbereApiGateway/OPTIONS/Resource
  WorksmanApiDatagetAllMobileNumbereApiGatewayGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETgetAllMobileNumbereApiGateway1D3866BB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllMobileNumberCEE5681C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/getAllMobileNumbereApiGateway
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/getAllMobileNumbereApiGateway/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..getAllMobileNumbereApiGateway
  WorksmanApiDatagetAllMobileNumbereApiGatewayGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETgetAllMobileNumbereApiGateway506C27CC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllMobileNumberCEE5681C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/getAllMobileNumbereApiGateway
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/getAllMobileNumbereApiGateway/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..getAllMobileNumbereApiGateway
  WorksmanApiDatagetAllMobileNumbereApiGatewayGET975267F9:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDatagetAllMobileNumbereApiGatewayD8016FCE
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getAllMobileNumberCEE5681C
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDatagetAllMobileNumber33E2181D
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDatagetAllMobileNumberErrorD1997434
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/getAllMobileNumbereApiGateway/GET/Resource
  WorksmanApiDataGetWorkmanDetailsApiCEEEF4BE:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetWorkmanDetailsApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorkmanDetailsApi/Resource
  WorksmanApiDataGetWorkmanDetailsApiOPTIONS27DC75BD:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetWorkmanDetailsApiCEEEF4BE
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorkmanDetailsApi/OPTIONS/Resource
  WorksmanApiDataGetWorkmanDetailsApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetWorkmanDetailsApi1666F9CE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorkmanDetails839D982B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetWorkmanDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorkmanDetailsApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetWorkmanDetailsApi
  WorksmanApiDataGetWorkmanDetailsApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetWorkmanDetailsApiE5C53B6B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorkmanDetails839D982B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetWorkmanDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorkmanDetailsApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetWorkmanDetailsApi
  WorksmanApiDataGetWorkmanDetailsApiGET9EABF6F9:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetWorkmanDetailsApiCEEEF4BE
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksmanIdHeader: method.request.header.worksmanIdHeader
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetWorkmanDetails839D982B
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetWorkmanDetailsuceesEF33092E
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetWorkmanDetailsError372F4110
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksmanIdHeader: true
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorkmanDetailsApi/GET/Resource
  WorksmanApiDataGetAllPostcodesApi0978F3E0:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetAllPostcodesApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetAllPostcodesApi/Resource
  WorksmanApiDataGetAllPostcodesApiOPTIONSFC82FBC1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetAllPostcodesApi0978F3E0
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetAllPostcodesApi/OPTIONS/Resource
  WorksmanApiDataGetAllPostcodesApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetAllPostcodesApi92D3ADE1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllPostcodes029D20CC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetAllPostcodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetAllPostcodesApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetAllPostcodesApi
  WorksmanApiDataGetAllPostcodesApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetAllPostcodesApiF560F439:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllPostcodes029D20CC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetAllPostcodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetAllPostcodesApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetAllPostcodesApi
  WorksmanApiDataGetAllPostcodesApiGET29AD6CA8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetAllPostcodesApi0978F3E0
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetAllPostcodes029D20CC
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetAllPostcodesResp85A0F4E8
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetAllPostcodesError41120C52
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetAllPostcodesApi/GET/Resource
  WorksmanApiDataGetWorksmanScheduleApiDAB1C151:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetWorksmanScheduleApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanScheduleApi/Resource
  WorksmanApiDataGetWorksmanScheduleApiOPTIONS550D7315:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetWorksmanScheduleApiDAB1C151
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanScheduleApi/OPTIONS/Resource
  WorksmanApiDataGetWorksmanScheduleApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetWorksmanScheduleApi64C11E0A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanScheduleC62DDBF7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetWorksmanScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanScheduleApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetWorksmanScheduleApi
  WorksmanApiDataGetWorksmanScheduleApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetWorksmanScheduleApi54AA66B9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanScheduleC62DDBF7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetWorksmanScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanScheduleApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetWorksmanScheduleApi
  WorksmanApiDataGetWorksmanScheduleApiGETD0845394:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetWorksmanScheduleApiDAB1C151
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetWorksmanScheduleC62DDBF7
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetWorksmanScheduleResp3D7B3B8A
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetWorksmanScheduleErrorA2F10B24
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanScheduleApi/GET/Resource
  WorksmanApiDataGetWorksmanjobsApi1DA29B58:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetWorksmanjobsApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanjobsApi/Resource
  WorksmanApiDataGetWorksmanjobsApiOPTIONS4E84E903:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetWorksmanjobsApi1DA29B58
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanjobsApi/OPTIONS/Resource
  WorksmanApiDataGetWorksmanjobsApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetWorksmanjobsApi51388FB0:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanjobsC1DF3F8D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetWorksmanjobsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanjobsApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetWorksmanjobsApi
  WorksmanApiDataGetWorksmanjobsApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetWorksmanjobsApi9A22F387:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanjobsC1DF3F8D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetWorksmanjobsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanjobsApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetWorksmanjobsApi
  WorksmanApiDataGetWorksmanjobsApiGET64403440:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetWorksmanjobsApi1DA29B58
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetWorksmanjobsC1DF3F8D
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetWorksmanjobsRespEBE6FFDA
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetWorksmanjobsErrorB0D87E6D
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetWorksmanjobsApi/GET/Resource
  WorksmanApiDataGetBankDetailsApiE78B853A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetBankDetailsApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetBankDetailsApi/Resource
  WorksmanApiDataGetBankDetailsApiOPTIONS234F2577:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetBankDetailsApiE78B853A
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetBankDetailsApi/OPTIONS/Resource
  WorksmanApiDataGetBankDetailsApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetBankDetailsApiF7225782:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetBankDetails125327D9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetBankDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetBankDetailsApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetBankDetailsApi
  WorksmanApiDataGetBankDetailsApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetBankDetailsApiA21F8C8B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetBankDetails125327D9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetBankDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetBankDetailsApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetBankDetailsApi
  WorksmanApiDataGetBankDetailsApiGET08E01681:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetBankDetailsApiE78B853A
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetBankDetails125327D9
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetBankDetailsRespD309C268
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetBankDetailsError06A6C9C1
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetBankDetailsApi/GET/Resource
  WorksmanApiDataGetMessagesApi19FCE89C:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetMessagesApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetMessagesApi/Resource
  WorksmanApiDataGetMessagesApiOPTIONSF9CDBFAD:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetMessagesApi19FCE89C
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetMessagesApi/OPTIONS/Resource
  WorksmanApiDataGetMessagesApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetMessagesApiF25DBBB4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetMessagesEBEDDDD2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetMessagesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetMessagesApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetMessagesApi
  WorksmanApiDataGetMessagesApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetMessagesApi816FAAC6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetMessagesEBEDDDD2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetMessagesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetMessagesApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetMessagesApi
  WorksmanApiDataGetMessagesApiGETBC72D9B3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetMessagesApi19FCE89C
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
          integration.request.header.user_id: method.request.header.user_id
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\",\"user_id\":\"$util.escapeJavaScript($input.params('user_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetMessagesEBEDDDD2
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetMessagesResp3946AD34
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetMessagesErrorB209CEEC
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.header.worksman_id: true
        method.request.header.user_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetMessagesApi/GET/Resource
  WorksmanApiDataGetJobsApi910EFB62:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetJobsApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetJobsApi/Resource
  WorksmanApiDataGetJobsApiOPTIONS28532535:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetJobsApi910EFB62
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetJobsApi/OPTIONS/Resource
  WorksmanApiDataGetJobsApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetJobsApiB218FFE6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetJobsE878805E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetJobsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetJobsApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetJobsApi
  WorksmanApiDataGetJobsApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetJobsApiF583AD8C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetJobsE878805E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetJobsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetJobsApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetJobsApi
  WorksmanApiDataGetJobsApiGETD45992F7:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetJobsApi910EFB62
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetJobsE878805E
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetJobsResp03739CA8
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetJobsError85B350D2
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetJobsApi/GET/Resource
  WorksmanApiDataGetPaymentDetailsApiD9FEFBDA:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetPaymentDetailsApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetPaymentDetailsApi/Resource
  WorksmanApiDataGetPaymentDetailsApiOPTIONS98A44A74:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetPaymentDetailsApiD9FEFBDA
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetPaymentDetailsApi/OPTIONS/Resource
  WorksmanApiDataGetPaymentDetailsApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetPaymentDetailsApi100D6F7C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetPaymentDetailsE3A0032F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetPaymentDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetPaymentDetailsApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetPaymentDetailsApi
  WorksmanApiDataGetPaymentDetailsApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetPaymentDetailsApi2B6A6049:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetPaymentDetailsE3A0032F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetPaymentDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetPaymentDetailsApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetPaymentDetailsApi
  WorksmanApiDataGetPaymentDetailsApiGETEB5B4839:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetPaymentDetailsApiD9FEFBDA
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetPaymentDetailsE3A0032F
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetPaymentDetailsRes5D34FD6D
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetPaymentDetailsErrC5567887
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetPaymentDetailsApi/GET/Resource
  WorksmanApiDataGetPaymentHistoryDetailsApiAF38AF15:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetPaymentHistoryDetailsApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetPaymentHistoryDetailsApi/Resource
  WorksmanApiDataGetPaymentHistoryDetailsApiOPTIONS244B8578:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetPaymentHistoryDetailsApiAF38AF15
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetPaymentHistoryDetailsApi/OPTIONS/Resource
  WorksmanApiDataGetPaymentHistoryDetailsApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetPaymentHistoryDetailsApi68A50E1D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetPaymentHistoryDetails96306007
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetPaymentHistoryDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetPaymentHistoryDetailsApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetPaymentHistoryDetailsApi
  WorksmanApiDataGetPaymentHistoryDetailsApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetPaymentHistoryDetailsApi73746E5E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetPaymentHistoryDetails96306007
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetPaymentHistoryDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetPaymentHistoryDetailsApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetPaymentHistoryDetailsApi
  WorksmanApiDataGetPaymentHistoryDetailsApiGETE877EA7C:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetPaymentHistoryDetailsApiAF38AF15
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetPaymentHistoryDetails96306007
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetPaymentHistoryDetailsRes23BA890C
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetPaymentHistoryDetailsErr86F39656
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetPaymentHistoryDetailsApi/GET/Resource
  WorksmanApiDataGetDistrictWisePostCodesApi096FEEB8:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: GetDistrictWisePostCodesApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetDistrictWisePostCodesApi/Resource
  WorksmanApiDataGetDistrictWisePostCodesApiOPTIONSCC59ED6D:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataGetDistrictWisePostCodesApi096FEEB8
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetDistrictWisePostCodesApi/OPTIONS/Resource
  WorksmanApiDataGetDistrictWisePostCodesApiGETApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetDistrictWisePostCodesApi4F365620:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetDistrictWisePostCodesD035913F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /GET/GetDistrictWisePostCodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetDistrictWisePostCodesApi/GET/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetDistrictWisePostCodesApi
  WorksmanApiDataGetDistrictWisePostCodesApiGETApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5GETGetDistrictWisePostCodesApi3C899986:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetDistrictWisePostCodesD035913F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/GET/GetDistrictWisePostCodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetDistrictWisePostCodesApi/GET/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.GET..GetDistrictWisePostCodesApi
  WorksmanApiDataGetDistrictWisePostCodesApiGET0F05CCFC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksmanApiDataGetDistrictWisePostCodesApi096FEEB8
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetDistrictWisePostCodesD035913F
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetDistrictWisePostCodesRes6EC45338
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataGetDistrictWisePostCodesErr0B79BBE3
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/GetDistrictWisePostCodesApi/GET/Resource
  WorksmanApiDataDeletePostcodesApi443BD593:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: DeletePostcodesApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/DeletePostcodesApi/Resource
  WorksmanApiDataDeletePostcodesApiOPTIONS523E652F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataDeletePostcodesApi443BD593
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/DeletePostcodesApi/OPTIONS/Resource
  WorksmanApiDataDeletePostcodesApiDELETEApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5DELETEDeletePostcodesApi5DA22902:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeletePostcodes16F8A0A6
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /DELETE/DeletePostcodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/DeletePostcodesApi/DELETE/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.DELETE..DeletePostcodesApi
  WorksmanApiDataDeletePostcodesApiDELETEApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5DELETEDeletePostcodesApi6A1431C0:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeletePostcodes16F8A0A6
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/DELETE/DeletePostcodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/DeletePostcodesApi/DELETE/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.DELETE..DeletePostcodesApi
  WorksmanApiDataDeletePostcodesApiDELETEDFDF54BC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: WorksmanApiDataDeletePostcodesApi443BD593
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
          integration.request.header.postcodes: method.request.header.postcodes
          integration.request.header.district: method.request.header.district
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\",\"postcodes\":\"$util.escapeJavaScript($input.params('postcodes'))\",\"district\":\"$util.escapeJavaScript($input.params('district'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DeletePostcodes16F8A0A6
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataDeletePostcodesRespC2463B23
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataDeletePostcodesError328F9A5F
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksman_id: true
        method.request.querystring.postcodes: true
        method.request.querystring.district: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/DeletePostcodesApi/DELETE/Resource
  WorksmanApiDataDeleteWorkmanScheduleApi1D03C02B:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: DeleteWorkmanScheduleApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/DeleteWorkmanScheduleApi/Resource
  WorksmanApiDataDeleteWorkmanScheduleApiOPTIONSA3B69A8E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataDeleteWorkmanScheduleApi1D03C02B
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/DeleteWorkmanScheduleApi/OPTIONS/Resource
  WorksmanApiDataDeleteWorkmanScheduleApiDELETEApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5DELETEDeleteWorkmanScheduleApiC7A640EB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteWorkmanSchedule22944F3C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /DELETE/DeleteWorkmanScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/DeleteWorkmanScheduleApi/DELETE/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.DELETE..DeleteWorkmanScheduleApi
  WorksmanApiDataDeleteWorkmanScheduleApiDELETEApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5DELETEDeleteWorkmanScheduleApi21C78D95:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteWorkmanSchedule22944F3C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/DELETE/DeleteWorkmanScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/DeleteWorkmanScheduleApi/DELETE/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.DELETE..DeleteWorkmanScheduleApi
  WorksmanApiDataDeleteWorkmanScheduleApiDELETEC5C770F7:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: WorksmanApiDataDeleteWorkmanScheduleApi1D03C02B
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
          integration.request.header.worksman_schedule_date: method.request.header.worksman_schedule_date
          integration.request.header.worksman_schedule_time: method.request.header.worksman_schedule_time
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\",\"worksman_schedule_date\":\"$util.escapeJavaScript($input.params('worksman_schedule_date'))\",\"worksman_schedule_time\":\"$util.escapeJavaScript($input.params('worksman_schedule_time'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DeleteWorkmanSchedule22944F3C
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataDeleteWorkmanScheduleResp1F253DFD
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataDeleteWorkmanScheduleError092163F9
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksman_id: true
        method.request.querystring.worksman_schedule_date: true
        method.request.querystring.worksman_schedule_time: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/DeleteWorkmanScheduleApi/DELETE/Resource
  WorksmanApiDataUpdateBankDetailsApi5B5A7292:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksmanApiData98FA1C09
          - RootResourceId
      PathPart: UpdateBankDetailsApi
      RestApiId:
        Ref: WorksmanApiData98FA1C09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/UpdateBankDetailsApi/Resource
  WorksmanApiDataUpdateBankDetailsApiOPTIONSDFF568DC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksmanApiDataUpdateBankDetailsApi5B5A7292
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,worksman_schedule_id,user_id,worksman_schedule_date,worksman_schedule_time,postcodes,district'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/UpdateBankDetailsApi/OPTIONS/Resource
  WorksmanApiDataUpdateBankDetailsApiPUTApiPermissionVrishkarServicesDevStacksWorksmanApiData5AF985C5PUTUpdateBankDetailsApi90D34083:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UpdateBankDetailsA9E25F06
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /
            - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
            - /PUT/UpdateBankDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/UpdateBankDetailsApi/PUT/ApiPermission.VrishkarServicesDevStacksWorksmanApiData5AF985C5.PUT..UpdateBankDetailsApi
  WorksmanApiDataUpdateBankDetailsApiPUTApiPermissionTestVrishkarServicesDevStacksWorksmanApiData5AF985C5PUTUpdateBankDetailsApiE283E243:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UpdateBankDetailsA9E25F06
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksmanApiData98FA1C09
            - /test-invoke-stage/PUT/UpdateBankDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/UpdateBankDetailsApi/PUT/ApiPermission.Test.VrishkarServicesDevStacksWorksmanApiData5AF985C5.PUT..UpdateBankDetailsApi
  WorksmanApiDataUpdateBankDetailsApiPUT3274AE15:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: WorksmanApiDataUpdateBankDetailsApi5B5A7292
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizerBD825682
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters: {}
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UpdateBankDetailsA9E25F06
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataUpdateBankDetailsRes27FAC034
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksmanApiDataUpdateBankDetailsErrorE3AAF572
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksmanApiDataUpdateBankDetailsModel87571A12
      RequestParameters: {}
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/Default/UpdateBankDetailsApi/PUT/Resource
  WorksmanApiDataWorksmanTermsAndConditionsModel668ED74F:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          isWatched_howVrishkar_Works:
            type: string
          isUnderstand_Worksman_Will_SelfEmployeed:
            type: string
          isUnderstand_Vrishkar_isnot_responsible:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/WorksmanTermsAndConditionsModel/Resource
  WorksmanApiDataResWorksmanTermsAndConditionsFB1DB1C1:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: ResWorksmanTermsAndConditions
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: ResWorksmanTermsAndConditions
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/ResWorksmanTermsAndConditions/Resource
  WorksmanApiDataErrorWorksmanTermsAndConditions43C6C101:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: ErrorWorksmanTermsAndConditions
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: ErrorWorksmanTermsAndConditions
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/ErrorWorksmanTermsAndConditions/Resource
  WorksmanApiDataworksmanExperienceModelEB3EABAC:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          years_of_cleaning_exp:
            type: string
          Have_end_of_tendency:
            type: string
          Have_hotel_cleaning:
            type: string
          Have_house_cleaning:
            type: string
          Have_hospital_cleaning:
            type: string
          Have_office_cleaning:
            type: string
          Have_other_cleaning:
            type: string
          Have_Right_to_Work:
            type: string
          Have_UK_BankAccount:
            type: string
          Have_Criminal_Records:
            type: string
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/worksmanExperienceModel/Resource
  WorksmanApiDataRespworksmanExperienceMethods25D4C962:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: RespworksmanExperienceMethods
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: RespworksmanExperienceMethods
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/RespworksmanExperienceMethods/Resource
  WorksmanApiDataErrorpworksmanExperienceMethods69CF4BBE:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: ErrorpworksmanExperienceMethods
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: ErrorpworksmanExperienceMethods
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/ErrorpworksmanExperienceMethods/Resource
  WorksmanApiDataUserPostCodesModel6052E87D:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          postcodes:
            type: string
          district:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/UserPostCodesModel/Resource
  WorksmanApiDataUserPostCodesResponse9DDA18BA:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: UserPostCodesResponse
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: UserPostCodesResponse
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/UserPostCodesResponse/Resource
  WorksmanApiDataUserPostCodesErrorE2AC47EB:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: UserPostCodesError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: UserPostCodesError
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/UserPostCodesError/Resource
  WorksmanApiDataCreateWorksmanScheduleModelC8707AA9:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          worksman_schedule_date:
            type: string
          worksman_schedule_time:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/CreateWorksmanScheduleModel/Resource
  WorksmanApiDataCreateWorksmanScheduleRes41814DDA:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: CreateWorksmanScheduleRes
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: CreateWorksmanScheduleRes
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/CreateWorksmanScheduleRes/Resource
  WorksmanApiDataCreateWorksmanScheduleError805CDD18:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: CreateWorksmanScheduleError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: CreateWorksmanScheduleError
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/CreateWorksmanScheduleError/Resource
  WorksmanApiDataWorksmanjobsCreateModel94C50EB8:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          user_id:
            type: string
          customer_name:
            type: string
          job_title:
            type: string
          job_hours:
            type: string
          job_time:
            type: string
          address:
            type: string
          service:
            type: string
          sub_services:
            type: string
          job_status:
            type: string
          payment_status:
            type: string
          customer_reviews:
            type: string
          customer_ratings:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/WorksmanjobsCreateModel/Resource
  WorksmanApiDataWorksmanjobsCreateResponse8982697B:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: WorksmanjobsCreateResponse
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: WorksmanjobsCreateResponse
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/WorksmanjobsCreateResponse/Resource
  WorksmanApiDataWorksmanjobsCreateError1FA1CF74:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: WorksmanjobsCreateError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: WorksmanjobsCreateError
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/WorksmanjobsCreateError/Resource
  WorksmanApiDataCreateBankDetailsModelBBDC6EEC:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          account_name:
            type: string
          sort_code:
            type: string
          account_number:
            type: string
          bank_name:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/CreateBankDetailsModel/Resource
  WorksmanApiDataCreateBankDetailsResponseB914BB7C:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: CreateBankDetailsResponse
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: CreateBankDetailsResponse
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/CreateBankDetailsResponse/Resource
  WorksmanApiDataCreateBankDetailsErrorDA7E8D61:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: CreateBankDetailsError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: CreateBankDetailsError
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/CreateBankDetailsError/Resource
  WorksmanApiDataCreateMessagesModelD28B06E4:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          user_id:
            type: string
          chatting_person:
            type: string
          chatting_person_name:
            type: string
          chat_message:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/CreateMessagesModel/Resource
  WorksmanApiDataCreateMessagesResponse64B94F74:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: CreateMessagesResponse
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: CreateMessagesResponse
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/CreateMessagesResponse/Resource
  WorksmanApiDataCreateMessagesErrorAE99D59F:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: CreateMessagesError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: CreateMessagesError
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/CreateMessagesError/Resource
  WorksmanApiDataWorkmanStatusSuccessC1487EC0:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: WorkmanStatusSuccess
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/WorkmanStatusSuccess/Resource
  WorksmanApiDataWorkmanStatusError36A4FD0F:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: WorkmanStatusError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/WorkmanStatusError/Resource
  WorksmanApiDatagetAllMobileNumber33E2181D:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: getAllMobileNumber
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/getAllMobileNumber/Resource
  WorksmanApiDatagetAllMobileNumberErrorD1997434:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: getAllMobileNumberError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/getAllMobileNumberError/Resource
  WorksmanApiDataGetWorkmanDetailsuceesEF33092E:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetWorkmanDetailsucees
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetWorkmanDetailsucees/Resource
  WorksmanApiDataGetWorkmanDetailsError372F4110:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetWorkmanDetailsError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetWorkmanDetailsError/Resource
  WorksmanApiDataGetAllPostcodesResp85A0F4E8:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetAllPostcodesResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetAllPostcodesResp/Resource
  WorksmanApiDataGetAllPostcodesError41120C52:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetAllPostcodesError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetAllPostcodesError/Resource
  WorksmanApiDataGetWorksmanScheduleResp3D7B3B8A:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetWorksmanScheduleResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetWorksmanScheduleResp/Resource
  WorksmanApiDataGetWorksmanScheduleErrorA2F10B24:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetWorksmanScheduleError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetWorksmanScheduleError/Resource
  WorksmanApiDataGetWorksmanjobsRespEBE6FFDA:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetWorksmanjobsResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetWorksmanjobsResp/Resource
  WorksmanApiDataGetWorksmanjobsErrorB0D87E6D:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetWorksmanjobsError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetWorksmanjobsError/Resource
  WorksmanApiDataGetBankDetailsRespD309C268:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetBankDetailsResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetBankDetailsResp/Resource
  WorksmanApiDataGetBankDetailsError06A6C9C1:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetBankDetailsError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetBankDetailsError/Resource
  WorksmanApiDataGetMessagesResp3946AD34:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetMessagesResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetMessagesResp/Resource
  WorksmanApiDataGetMessagesErrorB209CEEC:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetMessagesError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetMessagesError/Resource
  WorksmanApiDataGetJobsResp03739CA8:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetJobsResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetJobsResp/Resource
  WorksmanApiDataGetJobsError85B350D2:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetJobsError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetJobsError/Resource
  WorksmanApiDataGetPaymentDetailsRes5D34FD6D:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetPaymentDetailsRes
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetPaymentDetailsRes/Resource
  WorksmanApiDataGetPaymentDetailsErrC5567887:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetPaymentDetailsErr
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetPaymentDetailsErr/Resource
  WorksmanApiDataGetPaymentHistoryDetailsRes23BA890C:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetPaymentHistoryDetailsRes
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetPaymentHistoryDetailsRes/Resource
  WorksmanApiDataGetPaymentHistoryDetailsErr86F39656:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetPaymentHistoryDetailsErr
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetPaymentHistoryDetailsErr/Resource
  WorksmanApiDataGetDistrictWisePostCodesRes6EC45338:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetDistrictWisePostCodesRes
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetDistrictWisePostCodesRes/Resource
  WorksmanApiDataGetDistrictWisePostCodesErr0B79BBE3:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: GetDistrictWisePostCodesErr
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/GetDistrictWisePostCodesErr/Resource
  WorksmanApiDataDeletePostcodesRespC2463B23:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: DeletePostcodesResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/DeletePostcodesResp/Resource
  WorksmanApiDataDeletePostcodesError328F9A5F:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: DeletePostcodesError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/DeletePostcodesError/Resource
  WorksmanApiDataDeleteWorkmanScheduleResp1F253DFD:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: DeleteWorkmanScheduleResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/DeleteWorkmanScheduleResp/Resource
  WorksmanApiDataDeleteWorkmanScheduleError092163F9:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: DeleteWorkmanScheduleError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/DeleteWorkmanScheduleError/Resource
  WorksmanApiDataUpdateBankDetailsModel87571A12:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          account_name:
            type: string
          sort_code:
            type: string
          account_number:
            type: string
          bank_name:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/UpdateBankDetailsModel/Resource
  WorksmanApiDataUpdateBankDetailsRes27FAC034:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: UpdateBankDetailsRes
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: UpdateBankDetailsRes
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/UpdateBankDetailsRes/Resource
  WorksmanApiDataUpdateBankDetailsErrorE3AAF572:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      ContentType: application/json
      Name: UpdateBankDetailsError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: UpdateBankDetailsError
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/WorksmanApiData/UpdateBankDetailsError/Resource
  userpoolsmsRole9F6DAAF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: VrishkarServicesDevStacksuserpool0CC0C901
            Effect: Allow
            Principal:
              Service: cognito-idp.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: sns:Publish
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
          PolicyName: sns-publish
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/userpool/smsRole/Resource
  userpool0AC4AA96:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - Mutable: true
          Name: given_name
          Required: true
        - Mutable: true
          Name: family_name
          Required: true
        - Mutable: true
          Name: email
          Required: true
        - Mutable: true
          Name: address
          Required: true
        - Mutable: true
          Name: birthdate
          Required: true
        - Mutable: true
          Name: gender
          Required: true
        - Mutable: true
          Name: locale
          Required: true
        - Mutable: true
          Name: phone_number
          Required: true
      SmsConfiguration:
        ExternalId: VrishkarServicesDevStacksuserpool0CC0C901
        SnsCallerArn:
          Fn::GetAtt:
            - userpoolsmsRole9F6DAAF2
            - Arn
      SmsVerificationMessage: The verification code to your new account is {####}
      UsernameAttributes:
        - email
        - phone_number
      UserPoolName: vk-clean-portal
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/userpool/Resource
  userpoolclientDA356A8E:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: userpool0AC4AA96
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      ReadAttributes:
        - address
        - birthdate
        - email
        - family_name
        - gender
        - given_name
        - locale
        - phone_number
      SupportedIdentityProviders:
        - COGNITO
      WriteAttributes:
        - address
        - birthdate
        - email
        - family_name
        - gender
        - given_name
        - locale
        - phone_number
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/userpool-client/Resource
  AuthorizerBD825682:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: VrishkarServicesDevStacksAuthorizer39151B44
      RestApiId:
        Ref: WorksmanApiData98FA1C09
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      ProviderARNs:
        - Fn::GetAtt:
            - userpool0AC4AA96
            - Arn
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/Authorizer/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WPwW7CMAyGn4V7CKtAO68wcUNDTHuALPU60zauYmeIVX33JSlF7OTP9m/7d6GLzUY/LV7MhZe2alaDJQ96eBdjG1Uyg0Ss0dVq9+XegvRB1I4ciw9WUu0ETMFbSBwbFQqSG1XaN7Sm+6yMHvbB2VROmkc+gu+QOQ+g6fRwojYvSnFUvF6a5IB1NhJzvQ22AdkaBmV6rI3AxVzjHLCUPd78zFhaS8GJeoW+pWsHLht+yNJr+d4E8yt5/QHkm6rUvNHjo3c+UAVtFk1AtUOhDwZ/JGq5DHHU4y/47OeejcpOSj3M2iS48wy7Fm+u/1fGcVQuXtRnXv0Uz7pY62JxZsSljw9jB/o0xT/Ts6sJ4AEAAA==
    Metadata:
      aws:cdk:path: VrishkarServicesDevStacks/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  WorksmanApiDataEndpoint897D3D33:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksmanApiData98FA1C09
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
          - /
  region:
    Value:
      Ref: AWS::Region
  userPoolId:
    Value:
      Ref: userpool0AC4AA96
  userPoolClientId:
    Value:
      Ref: userpoolclientDA356A8E
  apiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksmanApiData98FA1C09
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksmanApiDataDeploymentStagedev6C7183E5
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

