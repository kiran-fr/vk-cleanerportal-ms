Resources:
  UserRegistrationServiceRoleBCB3F31D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UserRegistration/ServiceRole/Resource
  UserRegistration1E985772:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterse3c7648613a21a2675349e6c459ba2c5db0f7b3a1c424494039d5ffd8f2c8875S3Bucket81DFAD9F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse3c7648613a21a2675349e6c459ba2c5db0f7b3a1c424494039d5ffd8f2c8875S3VersionKey8A7B787E
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse3c7648613a21a2675349e6c459ba2c5db0f7b3a1c424494039d5ffd8f2c8875S3VersionKey8A7B787E
      Role:
        Fn::GetAtt:
          - UserRegistrationServiceRoleBCB3F31D
          - Arn
      FunctionName: UserRegistration
      Handler: index.UserRegistrationHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserRegistrationServiceRoleBCB3F31D
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UserRegistration/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManTermsAndConditionServiceRole06AE84AC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManTermsAndCondition/ServiceRole/Resource
  WorksManTermsAndCondition66F1F295:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efS3Bucket6B6E3E01
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efS3VersionKeyCA650CCD
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efS3VersionKeyCA650CCD
      Role:
        Fn::GetAtt:
          - WorksManTermsAndConditionServiceRole06AE84AC
          - Arn
      FunctionName: WorksManTermsAndCondition
      Handler: index.WorksManTermsAndConditionHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManTermsAndConditionServiceRole06AE84AC
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManTermsAndCondition/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManExperienceServiceRoleE9A759F2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManExperience/ServiceRole/Resource
  WorksManExperienceAB1A1501:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eS3Bucket5084FBCF
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eS3VersionKeyBD0D6315
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eS3VersionKeyBD0D6315
      Role:
        Fn::GetAtt:
          - WorksManExperienceServiceRoleE9A759F2
          - Arn
      FunctionName: WorksManExperience
      Handler: index.WorksManExperienceHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManExperienceServiceRoleE9A759F2
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManExperience/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetWorksmanAccountRegistartionStatus/ServiceRole/Resource
  GetWorksmanAccountRegistartionStatusA28FB6DA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters3d10d72ea15766a6a9f120d8f12cf47876c8599c699b775a5d8ff45dcece2e8bS3Bucket28095C9C
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3d10d72ea15766a6a9f120d8f12cf47876c8599c699b775a5d8ff45dcece2e8bS3VersionKey539D6D86
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3d10d72ea15766a6a9f120d8f12cf47876c8599c699b775a5d8ff45dcece2e8bS3VersionKey539D6D86
      Role:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2
          - Arn
      FunctionName: GetWorksmanAccountRegistartionStatus
      Handler: index.GetWorksmanAccountRegistartionStatusHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetWorksmanAccountRegistartionStatus/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanAccountRegistartionStatus
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanAccountRegistartionStatus
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetTestUserServiceRole01730EC6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetTestUser/ServiceRole/Resource
  GetTestUser4654379B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0S3BucketFA52C3C7
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0S3VersionKey796ED790
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0S3VersionKey796ED790
      Role:
        Fn::GetAtt:
          - GetTestUserServiceRole01730EC6
          - Arn
      FunctionName: GetTestUser
      Handler: index.handler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetTestUserServiceRole01730EC6
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetTestUser/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetTestUser
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetTestUser
      aws:asset:is-bundled: false
      aws:asset:property: Code
  PostTestUserServiceRoleC6DDD923:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/PostTestUser/ServiceRole/Resource
  PostTestUser4E6E6D03:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8S3BucketA5D4ABCD
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8S3VersionKey71AC1508
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8S3VersionKey71AC1508
      Role:
        Fn::GetAtt:
          - PostTestUserServiceRoleC6DDD923
          - Arn
      FunctionName: PostTestUser
      Handler: index.handler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - PostTestUserServiceRoleC6DDD923
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/PostTestUser/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetPostTestUser
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetPostTestUser
      aws:asset:is-bundled: false
      aws:asset:property: Code
  getAllMobileNumberServiceRoleD38739BC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/getAllMobileNumber/ServiceRole/Resource
  getAllMobileNumberCEE5681C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersa7960ad56c8b041965d08884b00c5922944b29996fcecb7ee6e05641743f188cS3BucketA0968CBA
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa7960ad56c8b041965d08884b00c5922944b29996fcecb7ee6e05641743f188cS3VersionKey3A15AA59
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa7960ad56c8b041965d08884b00c5922944b29996fcecb7ee6e05641743f188cS3VersionKey3A15AA59
      Role:
        Fn::GetAtt:
          - getAllMobileNumberServiceRoleD38739BC
          - Arn
      FunctionName: getAllMobileNumbers
      Handler: index.getAllMobileNumbersHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - getAllMobileNumberServiceRoleD38739BC
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/getAllMobileNumber/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\userEmailError
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\userEmailError
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetWorkmanDetailsServiceRole7D7C7A93:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetWorkmanDetails/ServiceRole/Resource
  GetWorkmanDetails839D982B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters95f733485a56d8f94fce2a77baf2f9f649e0005c9d9dd1d9d8d9b1d8e610ab9fS3BucketDC5D7806
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters95f733485a56d8f94fce2a77baf2f9f649e0005c9d9dd1d9d8d9b1d8e610ab9fS3VersionKey8A633071
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters95f733485a56d8f94fce2a77baf2f9f649e0005c9d9dd1d9d8d9b1d8e610ab9fS3VersionKey8A633071
      Role:
        Fn::GetAtt:
          - GetWorkmanDetailsServiceRole7D7C7A93
          - Arn
      FunctionName: GetWorkmanDetailsFun
      Handler: index.GetWorksmanDetailsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetWorkmanDetailsServiceRole7D7C7A93
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetWorkmanDetails/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanDetails
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanDetails
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UpdateWorksmanDetailServiceRole84747935:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UpdateWorksmanDetail/ServiceRole/Resource
  UpdateWorksmanDetail764C9F8C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters454acb2c2c4e5e2f7931f9198cf7f9a8a8a6b70adb77b3f5fb6cd55a7af742a6S3BucketAAFB0949
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters454acb2c2c4e5e2f7931f9198cf7f9a8a8a6b70adb77b3f5fb6cd55a7af742a6S3VersionKeyFAC4B3F5
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters454acb2c2c4e5e2f7931f9198cf7f9a8a8a6b70adb77b3f5fb6cd55a7af742a6S3VersionKeyFAC4B3F5
      Role:
        Fn::GetAtt:
          - UpdateWorksmanDetailServiceRole84747935
          - Arn
      FunctionName: UpdateWorksmanDetailsFun
      Handler: index.UpdateWorksmanDetailsHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - UpdateWorksmanDetailServiceRole84747935
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UpdateWorksmanDetail/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UpdateWorksmanDetails
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UpdateWorksmanDetails
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UserPostCodesServiceRoleCB809F91:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UserPostCodes/ServiceRole/Resource
  UserPostCodesEC5B0AD7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersc0bb14776931887c948225196a70b9db1a68b53676ce76d75244652a3b6894abS3Bucket7B39277B
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc0bb14776931887c948225196a70b9db1a68b53676ce76d75244652a3b6894abS3VersionKeyF25C2A50
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc0bb14776931887c948225196a70b9db1a68b53676ce76d75244652a3b6894abS3VersionKeyF25C2A50
      Role:
        Fn::GetAtt:
          - UserPostCodesServiceRoleCB809F91
          - Arn
      FunctionName: UserPostCodesFun
      Handler: index.UserPostCodesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - UserPostCodesServiceRoleCB809F91
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UserPostCodes/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserPostCodes
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserPostCodes
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetAllPostcodesServiceRoleBD916F10:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetAllPostcodes/ServiceRole/Resource
  GetAllPostcodes029D20CC:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters3e042ddc236430a0a4482f8387d7d911a65c50df8de2ac44d7e166e47cc66a3bS3Bucket878E03D5
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3e042ddc236430a0a4482f8387d7d911a65c50df8de2ac44d7e166e47cc66a3bS3VersionKeyAB2E6A27
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3e042ddc236430a0a4482f8387d7d911a65c50df8de2ac44d7e166e47cc66a3bS3VersionKeyAB2E6A27
      Role:
        Fn::GetAtt:
          - GetAllPostcodesServiceRoleBD916F10
          - Arn
      FunctionName: GetAllPostcodesFun
      Handler: index.GetAllPostcodesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetAllPostcodesServiceRoleBD916F10
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetAllPostcodes/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetAllPostcodes
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetAllPostcodes
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DeletePostcodesServiceRole4286E553:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/DeletePostcodes/ServiceRole/Resource
  DeletePostcodes16F8A0A6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters1b07510780d2525dc2d91b302d26520257d7e238bd930841d328dc194c408ae2S3Bucket2F3C6E08
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1b07510780d2525dc2d91b302d26520257d7e238bd930841d328dc194c408ae2S3VersionKey2D4C545D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1b07510780d2525dc2d91b302d26520257d7e238bd930841d328dc194c408ae2S3VersionKey2D4C545D
      Role:
        Fn::GetAtt:
          - DeletePostcodesServiceRole4286E553
          - Arn
      FunctionName: DeletePostcodesFun
      Handler: index.DeletePostcodesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - DeletePostcodesServiceRole4286E553
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/DeletePostcodes/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\DeletePostcodes
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\DeletePostcodes
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksmnaScheduletcodesServiceRole419B1F25:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksmnaScheduletcodes/ServiceRole/Resource
  WorksmnaScheduletcodes517FF821:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters431f69b42068d5627e0c99f8756694ad39ae4404e1c0b82a699be810539caac8S3Bucket89B57013
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters431f69b42068d5627e0c99f8756694ad39ae4404e1c0b82a699be810539caac8S3VersionKey5666C1E7
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters431f69b42068d5627e0c99f8756694ad39ae4404e1c0b82a699be810539caac8S3VersionKey5666C1E7
      Role:
        Fn::GetAtt:
          - WorksmnaScheduletcodesServiceRole419B1F25
          - Arn
      FunctionName: WorksmnaScheduleFun
      Handler: index.WorksmnaScheduleHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - WorksmnaScheduletcodesServiceRole419B1F25
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksmnaScheduletcodes/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksmnaSchedule
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksmnaSchedule
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DeleteWorkmanScheduleServiceRoleDE63A6DE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/DeleteWorkmanSchedule/ServiceRole/Resource
  DeleteWorkmanSchedule22944F3C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersacab4b8e882ff3ac0dd1a3c526fe55732a01b7195772e53fc92d460ba6041343S3Bucket7402D1B7
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersacab4b8e882ff3ac0dd1a3c526fe55732a01b7195772e53fc92d460ba6041343S3VersionKey392E3635
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersacab4b8e882ff3ac0dd1a3c526fe55732a01b7195772e53fc92d460ba6041343S3VersionKey392E3635
      Role:
        Fn::GetAtt:
          - DeleteWorkmanScheduleServiceRoleDE63A6DE
          - Arn
      FunctionName: DeleteWorkmanScheduleFun
      Handler: index.DeleteWorkmanScheduleHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - DeleteWorkmanScheduleServiceRoleDE63A6DE
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/DeleteWorkmanSchedule/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\DeleteWorkmanSchedule
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\DeleteWorkmanSchedule
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetWorksmanScheduleServiceRoleE4B9B5D3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetWorksmanSchedule/ServiceRole/Resource
  GetWorksmanScheduleC62DDBF7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters7eb5972c6602d3e38053c1222bd13e900c133c94dc624a6a7ce5bc6e85666fa0S3Bucket09261212
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7eb5972c6602d3e38053c1222bd13e900c133c94dc624a6a7ce5bc6e85666fa0S3VersionKeyE41819F8
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7eb5972c6602d3e38053c1222bd13e900c133c94dc624a6a7ce5bc6e85666fa0S3VersionKeyE41819F8
      Role:
        Fn::GetAtt:
          - GetWorksmanScheduleServiceRoleE4B9B5D3
          - Arn
      FunctionName: GetWorksmanSchedulesFun
      Handler: index.GetWorksmanSchedulesHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetWorksmanScheduleServiceRoleE4B9B5D3
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetWorksmanSchedule/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanSchedules
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanSchedules
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManApiData3DE65042:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: User Registration api gateway
      Name: WorksManApiData
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Resource
  WorksManApiDataCloudWatchRole842A71F5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/CloudWatchRole/Resource
  WorksManApiDataAccount802B8139:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - WorksManApiDataCloudWatchRole842A71F5
          - Arn
    DependsOn:
      - WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Account
  WorksManApiDataDeploymentAC486F79857f9103d2a022ff15f8a93e072ba5f6:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      Description: Automatically created by the RestApi construct
    DependsOn:
      - WorksManApiDataDeletePostcodesApiDELETEC315F909
      - WorksManApiDataDeletePostcodesApiOPTIONSF394B1EC
      - WorksManApiDataDeletePostcodesApi20B78D18
      - WorksManApiDataDeleteWorkmanScheduleApiDELETEAC0CEE55
      - WorksManApiDataDeleteWorkmanScheduleApiOPTIONS262E9DBC
      - WorksManApiDataDeleteWorkmanScheduleApiA4ADFB3E
      - WorksManApiDatagetAllMobileNumbereApiGatewayGET6B652584
      - WorksManApiDatagetAllMobileNumbereApiGatewayOPTIONSE1947EE2
      - WorksManApiDatagetAllMobileNumbereApiGateway169D5891
      - WorksManApiDataGetAllPostcodesApiGET37E89989
      - WorksManApiDataGetAllPostcodesApiOPTIONS622131C0
      - WorksManApiDataGetAllPostcodesApiA94EB29D
      - WorksManApiDataGetTestUserGETCFAA42AE
      - WorksManApiDataGetTestUserOPTIONSFB6E6F9D
      - WorksManApiDataGetTestUserE064854A
      - WorksManApiDataGetWorkmanDetailsApiGETBAF02A03
      - WorksManApiDataGetWorkmanDetailsApiOPTIONS5E2ACFE3
      - WorksManApiDataGetWorkmanDetailsApi365DB7CE
      - WorksManApiDataGetWorksmanAccountRegistartionStatusApiGET068136E6
      - WorksManApiDataGetWorksmanAccountRegistartionStatusApiOPTIONSD75A27B7
      - WorksManApiDataGetWorksmanAccountRegistartionStatusApiFB368639
      - WorksManApiDataGetWorksmanScheduleApiGET1B6A1C3D
      - WorksManApiDataGetWorksmanScheduleApiOPTIONSB25DC545
      - WorksManApiDataGetWorksmanScheduleApi59465E9D
      - WorksManApiDataOPTIONSD9BA1800
      - WorksManApiDataPostTestUserOPTIONS194AA231
      - WorksManApiDataPostTestUserPOST9A3F8A70
      - WorksManApiDataPostTestUser420DFB68
      - WorksManApiDataPostWorksmnaScheduleApiOPTIONS90C05C3F
      - WorksManApiDataPostWorksmnaScheduleApiPOST720CDB3B
      - WorksManApiDataPostWorksmnaScheduleApi68BED663
      - WorksManApiDataUpdateWorksmanDetailsApiOPTIONSB427D4F6
      - WorksManApiDataUpdateWorksmanDetailsApiPUTE41D81A3
      - WorksManApiDataUpdateWorksmanDetailsApi2C5D99F8
      - WorksManApiDataUserPostCodesApiOPTIONS8880C4BF
      - WorksManApiDataUserPostCodesApiPOST8A3776D7
      - WorksManApiDataUserPostCodesApiDB2EF3C9
      - WorksManApiDataworksmanExperienceapiOPTIONSE8412389
      - WorksManApiDataworksmanExperienceapiPOSTB8A7E69A
      - WorksManApiDataworksmanExperienceapiF4CDC532
      - WorksManApiDataWorksmanTermsAndConditionsOPTIONSA93E49B0
      - WorksManApiDataWorksmanTermsAndConditionsPOST94491773
      - WorksManApiDataWorksmanTermsAndConditionsB5C92BD0
      - WorksManApiDataDeletePostcodesError5FA3A976
      - WorksManApiDataDeletePostcodesRespF5DE4334
      - WorksManApiDataDeleteWorkmanScheduleError5B56018A
      - WorksManApiDataDeleteWorkmanScheduleRespB5177876
      - WorksManApiDataerrorGetTestUserA11D278D
      - WorksManApiDataErrorpworksmanExperienceMethods5450D568
      - WorksManApiDataErrorpWorksmanTermsAndConditionsMethod4F14AF66
      - WorksManApiDatagetAllMobileNumberC109212D
      - WorksManApiDatagetAllMobileNumberError4D0ABC28
      - WorksManApiDataGetAllPostcodesError01848815
      - WorksManApiDataGetAllPostcodesRespC284E9C2
      - WorksManApiDataGetTestUserError4C4F7B37
      - WorksManApiDataGetTestUseResp4349886A
      - WorksManApiDataGetWorkmanDetailsErrorF24718E5
      - WorksManApiDataGetWorkmanDetailsuceesA9029941
      - WorksManApiDataGetWorksmanScheduleErrorEF48E235
      - WorksManApiDataGetWorksmanScheduleResp8357D0EC
      - WorksManApiDataPostWorksmnaScheduleErrorA4AC6A76
      - WorksManApiDataPostWorksmnaScheduleModel6D4F3CCC
      - WorksManApiDataPostWorksmnaScheduleRes77ECECA3
      - WorksManApiDataresGetTestUser4868458A
      - WorksManApiDataRespworksmanExperienceMethodsC9D92D79
      - WorksManApiDataRespWorksmanTermsAndConditionsMethodEE7AC91E
      - WorksManApiDataUpdateWorksmanDetailsError0153D940
      - WorksManApiDataUpdateWorksmanDetailsModel240BB643
      - WorksManApiDataUpdateWorksmanDetailsResF1CA14EE
      - WorksManApiDataUserModel2AB5FD4C
      - WorksManApiDataUserPostCodesError1F27D9BD
      - WorksManApiDataUserPostCodesModel920E55C5
      - WorksManApiDataUserPostCodesResponse67753657
      - WorksManApiDataWorkmanStatusErrorEAEB6BB0
      - WorksManApiDataWorkmanStatusSuccess3BADA740
      - WorksManApiDataworksmanExperienceModel3E8560AF
      - WorksManApiDataWorksmanTermsAndConditionsModel0CF2D71F
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Deployment/Resource
  WorksManApiDataDeploymentStagedev7693D7AD:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      DeploymentId:
        Ref: WorksManApiDataDeploymentAC486F79857f9103d2a022ff15f8a93e072ba5f6
      StageName: dev
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/DeploymentStage.dev/Resource
  WorksManApiDataOPTIONSD9BA1800:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/OPTIONS/Resource
  WorksManApiDataWorksmanTermsAndConditionsB5C92BD0:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: WorksmanTermsAndConditions
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/WorksmanTermsAndConditions/Resource
  WorksManApiDataWorksmanTermsAndConditionsOPTIONSA93E49B0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataWorksmanTermsAndConditionsB5C92BD0
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/WorksmanTermsAndConditions/OPTIONS/Resource
  WorksManApiDataWorksmanTermsAndConditionsPOSTApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3POSTWorksmanTermsAndConditions992AF9B8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /POST/WorksmanTermsAndConditions
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/WorksmanTermsAndConditions/POST/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.POST..WorksmanTermsAndConditions
  WorksManApiDataWorksmanTermsAndConditionsPOSTApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3POSTWorksmanTermsAndConditionsFCD825A8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/POST/WorksmanTermsAndConditions
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/WorksmanTermsAndConditions/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.POST..WorksmanTermsAndConditions
  WorksManApiDataWorksmanTermsAndConditionsPOST94491773:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiDataWorksmanTermsAndConditionsB5C92BD0
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManTermsAndCondition66F1F295
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataRespWorksmanTermsAndConditionsMethodEE7AC91E
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataErrorpWorksmanTermsAndConditionsMethod4F14AF66
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksManApiDataWorksmanTermsAndConditionsModel0CF2D71F
      RequestParameters:
        method.request.header.Authorization: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/WorksmanTermsAndConditions/POST/Resource
  WorksManApiDataworksmanExperienceapiF4CDC532:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: worksmanExperienceapi
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/worksmanExperienceapi/Resource
  WorksManApiDataworksmanExperienceapiOPTIONSE8412389:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataworksmanExperienceapiF4CDC532
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/worksmanExperienceapi/OPTIONS/Resource
  WorksManApiDataworksmanExperienceapiPOSTApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3POSTworksmanExperienceapi421EEC40:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /POST/worksmanExperienceapi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/worksmanExperienceapi/POST/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.POST..worksmanExperienceapi
  WorksManApiDataworksmanExperienceapiPOSTApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3POSTworksmanExperienceapiAA1333E3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/POST/worksmanExperienceapi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/worksmanExperienceapi/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.POST..worksmanExperienceapi
  WorksManApiDataworksmanExperienceapiPOSTB8A7E69A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiDataworksmanExperienceapiF4CDC532
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManExperienceAB1A1501
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataRespworksmanExperienceMethodsC9D92D79
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataErrorpworksmanExperienceMethods5450D568
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksManApiDataworksmanExperienceModel3E8560AF
      RequestParameters:
        method.request.header.Authorization: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/worksmanExperienceapi/POST/Resource
  WorksManApiDataPostTestUser420DFB68:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: PostTestUser
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/PostTestUser/Resource
  WorksManApiDataPostTestUserOPTIONS194AA231:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataPostTestUser420DFB68
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/PostTestUser/OPTIONS/Resource
  WorksManApiDataPostTestUserPOSTApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3POSTPostTestUser1BB52018:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PostTestUser4E6E6D03
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /POST/PostTestUser
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/PostTestUser/POST/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.POST..PostTestUser
  WorksManApiDataPostTestUserPOSTApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3POSTPostTestUser628287AA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PostTestUser4E6E6D03
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/POST/PostTestUser
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/PostTestUser/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.POST..PostTestUser
  WorksManApiDataPostTestUserPOST9A3F8A70:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiDataPostTestUser420DFB68
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
        RequestTemplates:
          application/json: '{"worksmanId":"$util.escapeJavaScript($input.body)"}'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - PostTestUser4E6E6D03
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataresGetTestUser4868458A
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataerrorGetTestUserA11D278D
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksManApiDataUserModel2AB5FD4C
      RequestParameters:
        method.request.header.Authorization: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/PostTestUser/POST/Resource
  WorksManApiDataUserPostCodesApiDB2EF3C9:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: UserPostCodesApi
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/UserPostCodesApi/Resource
  WorksManApiDataUserPostCodesApiOPTIONS8880C4BF:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataUserPostCodesApiDB2EF3C9
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/UserPostCodesApi/OPTIONS/Resource
  WorksManApiDataUserPostCodesApiPOSTApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3POSTUserPostCodesApi96F132FA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserPostCodesEC5B0AD7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /POST/UserPostCodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/UserPostCodesApi/POST/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.POST..UserPostCodesApi
  WorksManApiDataUserPostCodesApiPOSTApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3POSTUserPostCodesApi88198FB0:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserPostCodesEC5B0AD7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/POST/UserPostCodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/UserPostCodesApi/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.POST..UserPostCodesApi
  WorksManApiDataUserPostCodesApiPOST8A3776D7:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiDataUserPostCodesApiDB2EF3C9
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UserPostCodesEC5B0AD7
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataUserPostCodesResponse67753657
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataUserPostCodesError1F27D9BD
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksManApiDataUserPostCodesModel920E55C5
      RequestParameters:
        method.request.header.Authorization: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/UserPostCodesApi/POST/Resource
  WorksManApiDataPostWorksmnaScheduleApi68BED663:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: PostWorksmnaScheduleApi
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/PostWorksmnaScheduleApi/Resource
  WorksManApiDataPostWorksmnaScheduleApiOPTIONS90C05C3F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataPostWorksmnaScheduleApi68BED663
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/PostWorksmnaScheduleApi/OPTIONS/Resource
  WorksManApiDataPostWorksmnaScheduleApiPOSTApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3POSTPostWorksmnaScheduleApi8420F96E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksmnaScheduletcodes517FF821
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /POST/PostWorksmnaScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/PostWorksmnaScheduleApi/POST/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.POST..PostWorksmnaScheduleApi
  WorksManApiDataPostWorksmnaScheduleApiPOSTApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3POSTPostWorksmnaScheduleApi7B1395B8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksmnaScheduletcodes517FF821
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/POST/PostWorksmnaScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/PostWorksmnaScheduleApi/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.POST..PostWorksmnaScheduleApi
  WorksManApiDataPostWorksmnaScheduleApiPOST720CDB3B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiDataPostWorksmnaScheduleApi68BED663
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksmnaScheduletcodes517FF821
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataPostWorksmnaScheduleRes77ECECA3
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataPostWorksmnaScheduleErrorA4AC6A76
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksManApiDataPostWorksmnaScheduleModel6D4F3CCC
      RequestParameters:
        method.request.header.Authorization: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/PostWorksmnaScheduleApi/POST/Resource
  WorksManApiDataGetWorksmanAccountRegistartionStatusApiFB368639:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: GetWorksmanAccountRegistartionStatusApi
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorksmanAccountRegistartionStatusApi/Resource
  WorksManApiDataGetWorksmanAccountRegistartionStatusApiOPTIONSD75A27B7:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataGetWorksmanAccountRegistartionStatusApiFB368639
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorksmanAccountRegistartionStatusApi/OPTIONS/Resource
  WorksManApiDataGetWorksmanAccountRegistartionStatusApiGETApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3GETGetWorksmanAccountRegistartionStatusApi28DFD22E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusA28FB6DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /GET/GetWorksmanAccountRegistartionStatusApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorksmanAccountRegistartionStatusApi/GET/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..GetWorksmanAccountRegistartionStatusApi
  WorksManApiDataGetWorksmanAccountRegistartionStatusApiGETApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3GETGetWorksmanAccountRegistartionStatusApiB588939C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusA28FB6DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/GET/GetWorksmanAccountRegistartionStatusApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorksmanAccountRegistartionStatusApi/GET/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..GetWorksmanAccountRegistartionStatusApi
  WorksManApiDataGetWorksmanAccountRegistartionStatusApiGET068136E6:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksManApiDataGetWorksmanAccountRegistartionStatusApiFB368639
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksmanIdHeader: method.request.header.worksmanIdHeader
          integration.request.header.email: method.request.header.email
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksmanIdHeader\":\"$util.escapeJavaScript($input.params('worksmanIdHeader'))\",\"email\":\"$util.escapeJavaScript($input.params('email'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetWorksmanAccountRegistartionStatusA28FB6DA
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataWorkmanStatusSuccess3BADA740
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataWorkmanStatusErrorEAEB6BB0
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksmanIdHeader: true
        method.request.header.email: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorksmanAccountRegistartionStatusApi/GET/Resource
  WorksManApiDataGetTestUserE064854A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: GetTestUser
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetTestUser/Resource
  WorksManApiDataGetTestUserOPTIONSFB6E6F9D:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataGetTestUserE064854A
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetTestUser/OPTIONS/Resource
  WorksManApiDataGetTestUserGETApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3GETGetTestUser7A1C7B8A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetTestUser4654379B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /GET/GetTestUser
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetTestUser/GET/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..GetTestUser
  WorksManApiDataGetTestUserGETApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3GETGetTestUserFAB00132:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetTestUser4654379B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/GET/GetTestUser
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetTestUser/GET/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..GetTestUser
  WorksManApiDataGetTestUserGETCFAA42AE:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksManApiDataGetTestUserE064854A
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksmanIdHeader: method.request.header.worksmanIdHeader
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksmanIdHeader\":\"$util.escapeJavaScript($input.params('worksmanIdHeader'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetTestUser4654379B
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataGetTestUseResp4349886A
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataGetTestUserError4C4F7B37
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksmanIdHeader: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetTestUser/GET/Resource
  WorksManApiDatagetAllMobileNumbereApiGateway169D5891:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: getAllMobileNumbereApiGateway
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/getAllMobileNumbereApiGateway/Resource
  WorksManApiDatagetAllMobileNumbereApiGatewayOPTIONSE1947EE2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDatagetAllMobileNumbereApiGateway169D5891
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/getAllMobileNumbereApiGateway/OPTIONS/Resource
  WorksManApiDatagetAllMobileNumbereApiGatewayGETApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3GETgetAllMobileNumbereApiGateway87E15B26:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllMobileNumberCEE5681C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /GET/getAllMobileNumbereApiGateway
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/getAllMobileNumbereApiGateway/GET/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..getAllMobileNumbereApiGateway
  WorksManApiDatagetAllMobileNumbereApiGatewayGETApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3GETgetAllMobileNumbereApiGatewayC8050A23:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllMobileNumberCEE5681C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/GET/getAllMobileNumbereApiGateway
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/getAllMobileNumbereApiGateway/GET/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..getAllMobileNumbereApiGateway
  WorksManApiDatagetAllMobileNumbereApiGatewayGET6B652584:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksManApiDatagetAllMobileNumbereApiGateway169D5891
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getAllMobileNumberCEE5681C
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDatagetAllMobileNumberC109212D
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDatagetAllMobileNumberError4D0ABC28
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/getAllMobileNumbereApiGateway/GET/Resource
  WorksManApiDataGetWorkmanDetailsApi365DB7CE:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: GetWorkmanDetailsApi
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorkmanDetailsApi/Resource
  WorksManApiDataGetWorkmanDetailsApiOPTIONS5E2ACFE3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataGetWorkmanDetailsApi365DB7CE
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorkmanDetailsApi/OPTIONS/Resource
  WorksManApiDataGetWorkmanDetailsApiGETApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3GETGetWorkmanDetailsApiDCAA7C4A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorkmanDetails839D982B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /GET/GetWorkmanDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorkmanDetailsApi/GET/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..GetWorkmanDetailsApi
  WorksManApiDataGetWorkmanDetailsApiGETApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3GETGetWorkmanDetailsApi1B497D74:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorkmanDetails839D982B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/GET/GetWorkmanDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorkmanDetailsApi/GET/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..GetWorkmanDetailsApi
  WorksManApiDataGetWorkmanDetailsApiGETBAF02A03:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksManApiDataGetWorkmanDetailsApi365DB7CE
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksmanIdHeader: method.request.header.worksmanIdHeader
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksmanIdHeader\":\"$util.escapeJavaScript($input.params('worksmanIdHeader'))\",\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetWorkmanDetails839D982B
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataGetWorkmanDetailsuceesA9029941
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataGetWorkmanDetailsErrorF24718E5
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksmanIdHeader: true
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorkmanDetailsApi/GET/Resource
  WorksManApiDataGetAllPostcodesApiA94EB29D:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: GetAllPostcodesApi
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetAllPostcodesApi/Resource
  WorksManApiDataGetAllPostcodesApiOPTIONS622131C0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataGetAllPostcodesApiA94EB29D
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetAllPostcodesApi/OPTIONS/Resource
  WorksManApiDataGetAllPostcodesApiGETApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3GETGetAllPostcodesApi2FABA608:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllPostcodes029D20CC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /GET/GetAllPostcodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetAllPostcodesApi/GET/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..GetAllPostcodesApi
  WorksManApiDataGetAllPostcodesApiGETApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3GETGetAllPostcodesApi6AA2AD5C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllPostcodes029D20CC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/GET/GetAllPostcodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetAllPostcodesApi/GET/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..GetAllPostcodesApi
  WorksManApiDataGetAllPostcodesApiGET37E89989:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksManApiDataGetAllPostcodesApiA94EB29D
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.worksman_id: method.request.header.worksman_id
        RequestTemplates:
          application/json: "{\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetAllPostcodes029D20CC
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataGetAllPostcodesRespC284E9C2
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataGetAllPostcodesError01848815
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetAllPostcodesApi/GET/Resource
  WorksManApiDataGetWorksmanScheduleApi59465E9D:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: GetWorksmanScheduleApi
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorksmanScheduleApi/Resource
  WorksManApiDataGetWorksmanScheduleApiOPTIONSB25DC545:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataGetWorksmanScheduleApi59465E9D
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorksmanScheduleApi/OPTIONS/Resource
  WorksManApiDataGetWorksmanScheduleApiGETApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3GETGetWorksmanScheduleApiABA18EA2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanScheduleC62DDBF7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /GET/GetWorksmanScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorksmanScheduleApi/GET/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..GetWorksmanScheduleApi
  WorksManApiDataGetWorksmanScheduleApiGETApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3GETGetWorksmanScheduleApiC6407193:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanScheduleC62DDBF7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/GET/GetWorksmanScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorksmanScheduleApi/GET/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.GET..GetWorksmanScheduleApi
  WorksManApiDataGetWorksmanScheduleApiGET1B6A1C3D:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksManApiDataGetWorksmanScheduleApi59465E9D
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksman_id: method.request.header.worksman_id
          integration.request.header.schedule_day: method.request.header.schedule_day
          integration.request.header.schedule_time: method.request.header.schedule_time
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\",\"schedule_day\":\"$util.escapeJavaScript($input.params('schedule_day'))\",\"schedule_time\":\"$util.escapeJavaScript($input.params('schedule_time'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetWorksmanScheduleC62DDBF7
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataGetWorksmanScheduleResp8357D0EC
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataGetWorksmanScheduleErrorEF48E235
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksman_id: true
        method.request.header.schedule_day: true
        method.request.header.schedule_time: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/GetWorksmanScheduleApi/GET/Resource
  WorksManApiDataDeletePostcodesApi20B78D18:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: DeletePostcodesApi
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/DeletePostcodesApi/Resource
  WorksManApiDataDeletePostcodesApiOPTIONSF394B1EC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataDeletePostcodesApi20B78D18
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/DeletePostcodesApi/OPTIONS/Resource
  WorksManApiDataDeletePostcodesApiDELETEApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3DELETEDeletePostcodesApiE477CA41:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeletePostcodes16F8A0A6
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /DELETE/DeletePostcodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/DeletePostcodesApi/DELETE/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.DELETE..DeletePostcodesApi
  WorksManApiDataDeletePostcodesApiDELETEApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3DELETEDeletePostcodesApi39923A0D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeletePostcodes16F8A0A6
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/DELETE/DeletePostcodesApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/DeletePostcodesApi/DELETE/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.DELETE..DeletePostcodesApi
  WorksManApiDataDeletePostcodesApiDELETEC315F909:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: WorksManApiDataDeletePostcodesApi20B78D18
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksman_id: method.request.header.worksman_id
          integration.request.header.postcodes: method.request.header.postcodes
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"postcodes\":\"$util.escapeJavaScript($input.params('postcodes'))\",\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DeletePostcodes16F8A0A6
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataDeletePostcodesRespF5DE4334
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataDeletePostcodesError5FA3A976
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.postcodes: true
        method.request.header.worksman_id: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/DeletePostcodesApi/DELETE/Resource
  WorksManApiDataDeleteWorkmanScheduleApiA4ADFB3E:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: DeleteWorkmanScheduleApi
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/DeleteWorkmanScheduleApi/Resource
  WorksManApiDataDeleteWorkmanScheduleApiOPTIONS262E9DBC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataDeleteWorkmanScheduleApiA4ADFB3E
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/DeleteWorkmanScheduleApi/OPTIONS/Resource
  WorksManApiDataDeleteWorkmanScheduleApiDELETEApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3DELETEDeleteWorkmanScheduleApiA00E3793:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteWorkmanSchedule22944F3C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /DELETE/DeleteWorkmanScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/DeleteWorkmanScheduleApi/DELETE/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.DELETE..DeleteWorkmanScheduleApi
  WorksManApiDataDeleteWorkmanScheduleApiDELETEApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3DELETEDeleteWorkmanScheduleApi2DE1C76E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteWorkmanSchedule22944F3C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/DELETE/DeleteWorkmanScheduleApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/DeleteWorkmanScheduleApi/DELETE/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.DELETE..DeleteWorkmanScheduleApi
  WorksManApiDataDeleteWorkmanScheduleApiDELETEAC0CEE55:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: WorksManApiDataDeleteWorkmanScheduleApiA4ADFB3E
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksman_id: method.request.header.worksman_id
          integration.request.header.schedule_day: method.request.header.schedule_day
          integration.request.header.schedule_time: method.request.header.schedule_time
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksman_id\":\"$util.escapeJavaScript($input.params('worksman_id'))\",\"schedule_day\":\"$util.escapeJavaScript($input.params('schedule_day'))\",\"schedule_time\":\"$util.escapeJavaScript($input.params('schedule_time'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DeleteWorkmanSchedule22944F3C
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataDeleteWorkmanScheduleRespB5177876
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataDeleteWorkmanScheduleError5B56018A
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksman_id: true
        method.request.header.schedule_day: true
        method.request.header.schedule_time: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/DeleteWorkmanScheduleApi/DELETE/Resource
  WorksManApiDataUpdateWorksmanDetailsApi2C5D99F8:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApiData3DE65042
          - RootResourceId
      PathPart: UpdateWorksmanDetailsApi
      RestApiId:
        Ref: WorksManApiData3DE65042
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/UpdateWorksmanDetailsApi/Resource
  WorksManApiDataUpdateWorksmanDetailsApiOPTIONSB427D4F6:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiDataUpdateWorksmanDetailsApi2C5D99F8
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email,worksman_id,postcodes,schedule_day,schedule_time'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/UpdateWorksmanDetailsApi/OPTIONS/Resource
  WorksManApiDataUpdateWorksmanDetailsApiPUTApiPermissionVrishkarServicesDevStackWorksManApiDataA49ABDE3PUTUpdateWorksmanDetailsApi06FB4778:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UpdateWorksmanDetail764C9F8C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /
            - Ref: WorksManApiDataDeploymentStagedev7693D7AD
            - /PUT/UpdateWorksmanDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/UpdateWorksmanDetailsApi/PUT/ApiPermission.VrishkarServicesDevStackWorksManApiDataA49ABDE3.PUT..UpdateWorksmanDetailsApi
  WorksManApiDataUpdateWorksmanDetailsApiPUTApiPermissionTestVrishkarServicesDevStackWorksManApiDataA49ABDE3PUTUpdateWorksmanDetailsApiA2304648:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UpdateWorksmanDetail764C9F8C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApiData3DE65042
            - /test-invoke-stage/PUT/UpdateWorksmanDetailsApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/UpdateWorksmanDetailsApi/PUT/ApiPermission.Test.VrishkarServicesDevStackWorksManApiDataA49ABDE3.PUT..UpdateWorksmanDetailsApi
  WorksManApiDataUpdateWorksmanDetailsApiPUTE41D81A3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: WorksManApiDataUpdateWorksmanDetailsApi2C5D99F8
      RestApiId:
        Ref: WorksManApiData3DE65042
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UpdateWorksmanDetail764C9F8C
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataUpdateWorksmanDetailsResF1CA14EE
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiDataUpdateWorksmanDetailsError0153D940
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksManApiDataUpdateWorksmanDetailsModel240BB643
      RequestParameters:
        method.request.header.Authorization: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/Default/UpdateWorksmanDetailsApi/PUT/Resource
  WorksManApiDataWorksmanTermsAndConditionsModel0CF2D71F:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          isWatched_howVrishkar_Works:
            type: string
          isUnderstand_Worksman_Will_SelfEmployeed:
            type: string
          isUnderstand_Vrishkar_isnot_responsible:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/WorksmanTermsAndConditionsModel/Resource
  WorksManApiDataRespWorksmanTermsAndConditionsMethodEE7AC91E:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: RespWorksmanTermsAndConditionsMethod
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: RespWorksmanTermsAndConditionsMethod
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/RespWorksmanTermsAndConditionsMethod/Resource
  WorksManApiDataErrorpWorksmanTermsAndConditionsMethod4F14AF66:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: ErrorpWorksmanTermsAndConditionsMethod
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: ErrorpWorksmanTermsAndConditionsMethod
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/ErrorpWorksmanTermsAndConditionsMethod/Resource
  WorksManApiDataworksmanExperienceModel3E8560AF:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          years_of_cleaning_exp:
            type: string
          Have_house_cleaning_exp:
            type: string
          Have_deep_cleaning_exp:
            type: string
          Have_office_cleaning_exp:
            type: string
          Have_oven_cleaning_exp:
            type: string
          Have_gardening_exp:
            type: string
          Have_building_cleaning_exp:
            type: string
          Have_hotel_cleaning_exp:
            type: string
          Have_hospital_cleaning_exp:
            type: string
          Have_retail_cleaning_exp:
            type: string
          other_cleaning:
            type: string
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/worksmanExperienceModel/Resource
  WorksManApiDataRespworksmanExperienceMethodsC9D92D79:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: RespworksmanExperienceMethods
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: RespworksmanExperienceMethods
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/RespworksmanExperienceMethods/Resource
  WorksManApiDataErrorpworksmanExperienceMethods5450D568:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: ErrorpworksmanExperienceMethods
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: ErrorpworksmanExperienceMethods
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/ErrorpworksmanExperienceMethods/Resource
  WorksManApiDataUserModel2AB5FD4C:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Schema:
        type: object
        properties:
          userId:
            type: string
          name:
            type: string
        required:
          - userId
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/UserModel/Resource
  WorksManApiDataresGetTestUser4868458A:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: resGetTestUser
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: resGetTestUser
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/resGetTestUser/Resource
  WorksManApiDataerrorGetTestUserA11D278D:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: errorGetTestUser
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: errorGetTestUser
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/errorGetTestUser/Resource
  WorksManApiDataUserPostCodesModel920E55C5:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          postcodes:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/UserPostCodesModel/Resource
  WorksManApiDataUserPostCodesResponse67753657:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: UserPostCodesResponse
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: UserPostCodesResponse
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/UserPostCodesResponse/Resource
  WorksManApiDataUserPostCodesError1F27D9BD:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: UserPostCodesError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: UserPostCodesError
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/UserPostCodesError/Resource
  WorksManApiDataPostWorksmnaScheduleModel6D4F3CCC:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          schedule_day:
            type: string
          schedule_time:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/PostWorksmnaScheduleModel/Resource
  WorksManApiDataPostWorksmnaScheduleRes77ECECA3:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: PostWorksmnaScheduleRes
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: PostWorksmnaScheduleRes
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/PostWorksmnaScheduleRes/Resource
  WorksManApiDataPostWorksmnaScheduleErrorA4AC6A76:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: PostWorksmnaScheduleError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: PostWorksmnaScheduleError
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/PostWorksmnaScheduleError/Resource
  WorksManApiDataWorkmanStatusSuccess3BADA740:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: WorkmanStatusSuccess
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/WorkmanStatusSuccess/Resource
  WorksManApiDataWorkmanStatusErrorEAEB6BB0:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: WorkmanStatusError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/WorkmanStatusError/Resource
  WorksManApiDataGetTestUseResp4349886A:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: GetTestUseResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/GetTestUseResp/Resource
  WorksManApiDataGetTestUserError4C4F7B37:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: GetTestUserError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/GetTestUserError/Resource
  WorksManApiDatagetAllMobileNumberC109212D:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: getAllMobileNumber
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/getAllMobileNumber/Resource
  WorksManApiDatagetAllMobileNumberError4D0ABC28:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: getAllMobileNumberError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/getAllMobileNumberError/Resource
  WorksManApiDataGetWorkmanDetailsuceesA9029941:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: GetWorkmanDetailsucees
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/GetWorkmanDetailsucees/Resource
  WorksManApiDataGetWorkmanDetailsErrorF24718E5:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: GetWorkmanDetailsError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/GetWorkmanDetailsError/Resource
  WorksManApiDataGetAllPostcodesRespC284E9C2:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: GetAllPostcodesResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/GetAllPostcodesResp/Resource
  WorksManApiDataGetAllPostcodesError01848815:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: GetAllPostcodesError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/GetAllPostcodesError/Resource
  WorksManApiDataGetWorksmanScheduleResp8357D0EC:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: GetWorksmanScheduleResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/GetWorksmanScheduleResp/Resource
  WorksManApiDataGetWorksmanScheduleErrorEF48E235:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: GetWorksmanScheduleError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/GetWorksmanScheduleError/Resource
  WorksManApiDataDeletePostcodesRespF5DE4334:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: DeletePostcodesResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/DeletePostcodesResp/Resource
  WorksManApiDataDeletePostcodesError5FA3A976:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: DeletePostcodesError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/DeletePostcodesError/Resource
  WorksManApiDataDeleteWorkmanScheduleRespB5177876:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: DeleteWorkmanScheduleResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/DeleteWorkmanScheduleResp/Resource
  WorksManApiDataDeleteWorkmanScheduleError5B56018A:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: DeleteWorkmanScheduleError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/DeleteWorkmanScheduleError/Resource
  WorksManApiDataUpdateWorksmanDetailsModel240BB643:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          email:
            type: string
          phone:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/UpdateWorksmanDetailsModel/Resource
  WorksManApiDataUpdateWorksmanDetailsResF1CA14EE:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: UpdateWorksmanDetailsRes
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: UpdateWorksmanDetailsRes
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/UpdateWorksmanDetailsRes/Resource
  WorksManApiDataUpdateWorksmanDetailsError0153D940:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApiData3DE65042
      ContentType: application/json
      Name: UpdateWorksmanDetailsError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: UpdateWorksmanDetailsError
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApiData/UpdateWorksmanDetailsError/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02QwW7DIAyGn6V3Qhd12nlpp92qVdkTeOBlNAEibFZVEe8+oO2Ukz8b+/dvWtnunuXT5hUu1Cg9bhflA8rlk0GNoiNCzjgYN4iDd8QhKhaHb3eCABYZQ0k+Is+xlnskH4PCwrlfGzbeJVHElwnslwa5vEenSrn0rPmEwRqiOmDAyqX3UxUqMQnaNVDskKyuci73UY3IeyAUMJsBGC9wzXNI3M3m7ueBnVI+OhZvOE/+atFVw6us3Fn33eBxSpU/Iv94XR7vtD70n49e41SbCqSUhMsgz7T9bV/yR8t2cyZjmpB9GIuyv8U/N6tnroQBAAA=
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameterse3c7648613a21a2675349e6c459ba2c5db0f7b3a1c424494039d5ffd8f2c8875S3Bucket81DFAD9F:
    Type: String
    Description: S3 bucket for asset "e3c7648613a21a2675349e6c459ba2c5db0f7b3a1c424494039d5ffd8f2c8875"
  AssetParameterse3c7648613a21a2675349e6c459ba2c5db0f7b3a1c424494039d5ffd8f2c8875S3VersionKey8A7B787E:
    Type: String
    Description: S3 key for asset version "e3c7648613a21a2675349e6c459ba2c5db0f7b3a1c424494039d5ffd8f2c8875"
  AssetParameterse3c7648613a21a2675349e6c459ba2c5db0f7b3a1c424494039d5ffd8f2c8875ArtifactHashF3534763:
    Type: String
    Description: Artifact hash for asset "e3c7648613a21a2675349e6c459ba2c5db0f7b3a1c424494039d5ffd8f2c8875"
  AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efS3Bucket6B6E3E01:
    Type: String
    Description: S3 bucket for asset "f39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7ef"
  AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efS3VersionKeyCA650CCD:
    Type: String
    Description: S3 key for asset version "f39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7ef"
  AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efArtifactHashB2213832:
    Type: String
    Description: Artifact hash for asset "f39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7ef"
  AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eS3Bucket5084FBCF:
    Type: String
    Description: S3 bucket for asset "3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864e"
  AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eS3VersionKeyBD0D6315:
    Type: String
    Description: S3 key for asset version "3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864e"
  AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eArtifactHash8A67D209:
    Type: String
    Description: Artifact hash for asset "3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864e"
  AssetParameters3d10d72ea15766a6a9f120d8f12cf47876c8599c699b775a5d8ff45dcece2e8bS3Bucket28095C9C:
    Type: String
    Description: S3 bucket for asset "3d10d72ea15766a6a9f120d8f12cf47876c8599c699b775a5d8ff45dcece2e8b"
  AssetParameters3d10d72ea15766a6a9f120d8f12cf47876c8599c699b775a5d8ff45dcece2e8bS3VersionKey539D6D86:
    Type: String
    Description: S3 key for asset version "3d10d72ea15766a6a9f120d8f12cf47876c8599c699b775a5d8ff45dcece2e8b"
  AssetParameters3d10d72ea15766a6a9f120d8f12cf47876c8599c699b775a5d8ff45dcece2e8bArtifactHashBFA2FD49:
    Type: String
    Description: Artifact hash for asset "3d10d72ea15766a6a9f120d8f12cf47876c8599c699b775a5d8ff45dcece2e8b"
  AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0S3BucketFA52C3C7:
    Type: String
    Description: S3 bucket for asset "9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0"
  AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0S3VersionKey796ED790:
    Type: String
    Description: S3 key for asset version "9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0"
  AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0ArtifactHashB5871201:
    Type: String
    Description: Artifact hash for asset "9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0"
  AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8S3BucketA5D4ABCD:
    Type: String
    Description: S3 bucket for asset "380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8"
  AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8S3VersionKey71AC1508:
    Type: String
    Description: S3 key for asset version "380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8"
  AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8ArtifactHashCD8DD379:
    Type: String
    Description: Artifact hash for asset "380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8"
  AssetParametersa7960ad56c8b041965d08884b00c5922944b29996fcecb7ee6e05641743f188cS3BucketA0968CBA:
    Type: String
    Description: S3 bucket for asset "a7960ad56c8b041965d08884b00c5922944b29996fcecb7ee6e05641743f188c"
  AssetParametersa7960ad56c8b041965d08884b00c5922944b29996fcecb7ee6e05641743f188cS3VersionKey3A15AA59:
    Type: String
    Description: S3 key for asset version "a7960ad56c8b041965d08884b00c5922944b29996fcecb7ee6e05641743f188c"
  AssetParametersa7960ad56c8b041965d08884b00c5922944b29996fcecb7ee6e05641743f188cArtifactHash2BEDBD74:
    Type: String
    Description: Artifact hash for asset "a7960ad56c8b041965d08884b00c5922944b29996fcecb7ee6e05641743f188c"
  AssetParameters95f733485a56d8f94fce2a77baf2f9f649e0005c9d9dd1d9d8d9b1d8e610ab9fS3BucketDC5D7806:
    Type: String
    Description: S3 bucket for asset "95f733485a56d8f94fce2a77baf2f9f649e0005c9d9dd1d9d8d9b1d8e610ab9f"
  AssetParameters95f733485a56d8f94fce2a77baf2f9f649e0005c9d9dd1d9d8d9b1d8e610ab9fS3VersionKey8A633071:
    Type: String
    Description: S3 key for asset version "95f733485a56d8f94fce2a77baf2f9f649e0005c9d9dd1d9d8d9b1d8e610ab9f"
  AssetParameters95f733485a56d8f94fce2a77baf2f9f649e0005c9d9dd1d9d8d9b1d8e610ab9fArtifactHash82A76D26:
    Type: String
    Description: Artifact hash for asset "95f733485a56d8f94fce2a77baf2f9f649e0005c9d9dd1d9d8d9b1d8e610ab9f"
  AssetParameters454acb2c2c4e5e2f7931f9198cf7f9a8a8a6b70adb77b3f5fb6cd55a7af742a6S3BucketAAFB0949:
    Type: String
    Description: S3 bucket for asset "454acb2c2c4e5e2f7931f9198cf7f9a8a8a6b70adb77b3f5fb6cd55a7af742a6"
  AssetParameters454acb2c2c4e5e2f7931f9198cf7f9a8a8a6b70adb77b3f5fb6cd55a7af742a6S3VersionKeyFAC4B3F5:
    Type: String
    Description: S3 key for asset version "454acb2c2c4e5e2f7931f9198cf7f9a8a8a6b70adb77b3f5fb6cd55a7af742a6"
  AssetParameters454acb2c2c4e5e2f7931f9198cf7f9a8a8a6b70adb77b3f5fb6cd55a7af742a6ArtifactHashC6DB59D1:
    Type: String
    Description: Artifact hash for asset "454acb2c2c4e5e2f7931f9198cf7f9a8a8a6b70adb77b3f5fb6cd55a7af742a6"
  AssetParametersc0bb14776931887c948225196a70b9db1a68b53676ce76d75244652a3b6894abS3Bucket7B39277B:
    Type: String
    Description: S3 bucket for asset "c0bb14776931887c948225196a70b9db1a68b53676ce76d75244652a3b6894ab"
  AssetParametersc0bb14776931887c948225196a70b9db1a68b53676ce76d75244652a3b6894abS3VersionKeyF25C2A50:
    Type: String
    Description: S3 key for asset version "c0bb14776931887c948225196a70b9db1a68b53676ce76d75244652a3b6894ab"
  AssetParametersc0bb14776931887c948225196a70b9db1a68b53676ce76d75244652a3b6894abArtifactHash4AA01B84:
    Type: String
    Description: Artifact hash for asset "c0bb14776931887c948225196a70b9db1a68b53676ce76d75244652a3b6894ab"
  AssetParameters3e042ddc236430a0a4482f8387d7d911a65c50df8de2ac44d7e166e47cc66a3bS3Bucket878E03D5:
    Type: String
    Description: S3 bucket for asset "3e042ddc236430a0a4482f8387d7d911a65c50df8de2ac44d7e166e47cc66a3b"
  AssetParameters3e042ddc236430a0a4482f8387d7d911a65c50df8de2ac44d7e166e47cc66a3bS3VersionKeyAB2E6A27:
    Type: String
    Description: S3 key for asset version "3e042ddc236430a0a4482f8387d7d911a65c50df8de2ac44d7e166e47cc66a3b"
  AssetParameters3e042ddc236430a0a4482f8387d7d911a65c50df8de2ac44d7e166e47cc66a3bArtifactHash69C138A0:
    Type: String
    Description: Artifact hash for asset "3e042ddc236430a0a4482f8387d7d911a65c50df8de2ac44d7e166e47cc66a3b"
  AssetParameters1b07510780d2525dc2d91b302d26520257d7e238bd930841d328dc194c408ae2S3Bucket2F3C6E08:
    Type: String
    Description: S3 bucket for asset "1b07510780d2525dc2d91b302d26520257d7e238bd930841d328dc194c408ae2"
  AssetParameters1b07510780d2525dc2d91b302d26520257d7e238bd930841d328dc194c408ae2S3VersionKey2D4C545D:
    Type: String
    Description: S3 key for asset version "1b07510780d2525dc2d91b302d26520257d7e238bd930841d328dc194c408ae2"
  AssetParameters1b07510780d2525dc2d91b302d26520257d7e238bd930841d328dc194c408ae2ArtifactHash66121F7E:
    Type: String
    Description: Artifact hash for asset "1b07510780d2525dc2d91b302d26520257d7e238bd930841d328dc194c408ae2"
  AssetParameters431f69b42068d5627e0c99f8756694ad39ae4404e1c0b82a699be810539caac8S3Bucket89B57013:
    Type: String
    Description: S3 bucket for asset "431f69b42068d5627e0c99f8756694ad39ae4404e1c0b82a699be810539caac8"
  AssetParameters431f69b42068d5627e0c99f8756694ad39ae4404e1c0b82a699be810539caac8S3VersionKey5666C1E7:
    Type: String
    Description: S3 key for asset version "431f69b42068d5627e0c99f8756694ad39ae4404e1c0b82a699be810539caac8"
  AssetParameters431f69b42068d5627e0c99f8756694ad39ae4404e1c0b82a699be810539caac8ArtifactHash887196B1:
    Type: String
    Description: Artifact hash for asset "431f69b42068d5627e0c99f8756694ad39ae4404e1c0b82a699be810539caac8"
  AssetParametersacab4b8e882ff3ac0dd1a3c526fe55732a01b7195772e53fc92d460ba6041343S3Bucket7402D1B7:
    Type: String
    Description: S3 bucket for asset "acab4b8e882ff3ac0dd1a3c526fe55732a01b7195772e53fc92d460ba6041343"
  AssetParametersacab4b8e882ff3ac0dd1a3c526fe55732a01b7195772e53fc92d460ba6041343S3VersionKey392E3635:
    Type: String
    Description: S3 key for asset version "acab4b8e882ff3ac0dd1a3c526fe55732a01b7195772e53fc92d460ba6041343"
  AssetParametersacab4b8e882ff3ac0dd1a3c526fe55732a01b7195772e53fc92d460ba6041343ArtifactHash8AB33061:
    Type: String
    Description: Artifact hash for asset "acab4b8e882ff3ac0dd1a3c526fe55732a01b7195772e53fc92d460ba6041343"
  AssetParameters7eb5972c6602d3e38053c1222bd13e900c133c94dc624a6a7ce5bc6e85666fa0S3Bucket09261212:
    Type: String
    Description: S3 bucket for asset "7eb5972c6602d3e38053c1222bd13e900c133c94dc624a6a7ce5bc6e85666fa0"
  AssetParameters7eb5972c6602d3e38053c1222bd13e900c133c94dc624a6a7ce5bc6e85666fa0S3VersionKeyE41819F8:
    Type: String
    Description: S3 key for asset version "7eb5972c6602d3e38053c1222bd13e900c133c94dc624a6a7ce5bc6e85666fa0"
  AssetParameters7eb5972c6602d3e38053c1222bd13e900c133c94dc624a6a7ce5bc6e85666fa0ArtifactHashBD40D12F:
    Type: String
    Description: Artifact hash for asset "7eb5972c6602d3e38053c1222bd13e900c133c94dc624a6a7ce5bc6e85666fa0"
Outputs:
  WorksManApiDataEndpointBAA31DC4:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksManApiData3DE65042
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksManApiDataDeploymentStagedev7693D7AD
          - /
  apiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksManApiData3DE65042
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksManApiDataDeploymentStagedev7693D7AD
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

