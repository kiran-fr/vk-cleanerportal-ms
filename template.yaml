Resources:
  UserRegistrationServiceRoleBCB3F31D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UserRegistration/ServiceRole/Resource
  UserRegistration1E985772:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersb2d38513f5a0461e4ac25815dc1c5491484f440748bf2cec9750113f318321d4S3Bucket7C22BB7E
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb2d38513f5a0461e4ac25815dc1c5491484f440748bf2cec9750113f318321d4S3VersionKey3DC4908C
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb2d38513f5a0461e4ac25815dc1c5491484f440748bf2cec9750113f318321d4S3VersionKey3DC4908C
      Role:
        Fn::GetAtt:
          - UserRegistrationServiceRoleBCB3F31D
          - Arn
      FunctionName: UserRegistration
      Handler: index.UserRegistrationHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserRegistrationServiceRoleBCB3F31D
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UserRegistration/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManTermsAndConditionServiceRole06AE84AC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManTermsAndCondition/ServiceRole/Resource
  WorksManTermsAndCondition66F1F295:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efS3Bucket6B6E3E01
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efS3VersionKeyCA650CCD
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efS3VersionKeyCA650CCD
      Role:
        Fn::GetAtt:
          - WorksManTermsAndConditionServiceRole06AE84AC
          - Arn
      FunctionName: WorksManTermsAndCondition
      Handler: index.WorksManTermsAndConditionHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManTermsAndConditionServiceRole06AE84AC
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManTermsAndCondition/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManExperienceServiceRoleE9A759F2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManExperience/ServiceRole/Resource
  WorksManExperienceAB1A1501:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eS3Bucket5084FBCF
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eS3VersionKeyBD0D6315
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eS3VersionKeyBD0D6315
      Role:
        Fn::GetAtt:
          - WorksManExperienceServiceRoleE9A759F2
          - Arn
      FunctionName: WorksManExperience
      Handler: index.WorksManExperienceHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManExperienceServiceRoleE9A759F2
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManExperience/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetWorksmanAccountRegistartionStatus/ServiceRole/Resource
  GetWorksmanAccountRegistartionStatusA28FB6DA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters44245703dcc59e9c94cc2bc53c9e95cfe4a76c649f4f8c6438177dd52084cc95S3BucketCF83EF7F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters44245703dcc59e9c94cc2bc53c9e95cfe4a76c649f4f8c6438177dd52084cc95S3VersionKeyD60B3A01
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters44245703dcc59e9c94cc2bc53c9e95cfe4a76c649f4f8c6438177dd52084cc95S3VersionKeyD60B3A01
      Role:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2
          - Arn
      FunctionName: GetWorksmanAccountRegistartionStatus
      Handler: index.GetWorksmanAccountRegistartionStatusHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetWorksmanAccountRegistartionStatus/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanAccountRegistartionStatus
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanAccountRegistartionStatus
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetTestUserServiceRole01730EC6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetTestUser/ServiceRole/Resource
  GetTestUser4654379B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0S3BucketFA52C3C7
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0S3VersionKey796ED790
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0S3VersionKey796ED790
      Role:
        Fn::GetAtt:
          - GetTestUserServiceRole01730EC6
          - Arn
      FunctionName: GetTestUser
      Handler: index.handler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetTestUserServiceRole01730EC6
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetTestUser/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetTestUser
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetTestUser
      aws:asset:is-bundled: false
      aws:asset:property: Code
  PostTestUserServiceRoleC6DDD923:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/PostTestUser/ServiceRole/Resource
  PostTestUser4E6E6D03:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8S3BucketA5D4ABCD
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8S3VersionKey71AC1508
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8S3VersionKey71AC1508
      Role:
        Fn::GetAtt:
          - PostTestUserServiceRoleC6DDD923
          - Arn
      FunctionName: PostTestUser
      Handler: index.handler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - PostTestUserServiceRoleC6DDD923
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/PostTestUser/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetPostTestUser
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetPostTestUser
      aws:asset:is-bundled: false
      aws:asset:property: Code
  getAllMobileNumberServiceRoleD38739BC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/getAllMobileNumber/ServiceRole/Resource
  getAllMobileNumberCEE5681C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters1bb2a2cbc29488b3ac5b4c8ebfba7e27208c09a7977c208dd3e574f330f08d5aS3Bucket98DCCCDE
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1bb2a2cbc29488b3ac5b4c8ebfba7e27208c09a7977c208dd3e574f330f08d5aS3VersionKeyEFC7081F
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1bb2a2cbc29488b3ac5b4c8ebfba7e27208c09a7977c208dd3e574f330f08d5aS3VersionKeyEFC7081F
      Role:
        Fn::GetAtt:
          - getAllMobileNumberServiceRoleD38739BC
          - Arn
      FunctionName: getAllMobileNumbers
      Handler: index.getAllMobileNumbersHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - getAllMobileNumberServiceRoleD38739BC
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/getAllMobileNumber/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\userEmailError
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\userEmailError
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManApi8007FB09:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: User Registration api gateway
      Name: WorksManApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Resource
  WorksManApiCloudWatchRole56A20485:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/CloudWatchRole/Resource
  WorksManApiAccount378EFED6:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - WorksManApiCloudWatchRole56A20485
          - Arn
    DependsOn:
      - WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Account
  WorksManApiDeployment495969A9b616bf9ba59b79e45d6cb5ae48a27680:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      Description: Automatically created by the RestApi construct
    DependsOn:
      - WorksManApigetAllMobileNumbereApiGatewayGET425E3CF0
      - WorksManApigetAllMobileNumbereApiGatewayOPTIONSED5EDF1A
      - WorksManApigetAllMobileNumbereApiGatewayBD625C83
      - WorksManApiGetTestUserGET5306C5B2
      - WorksManApiGetTestUserOPTIONS8B16962F
      - WorksManApiGetTestUser4A9C3C0F
      - WorksManApiGetWorksmanAccountRegistartionStatusGET88BE1ED8
      - WorksManApiGetWorksmanAccountRegistartionStatusOPTIONSDC172552
      - WorksManApiGetWorksmanAccountRegistartionStatus10A258AF
      - WorksManApiOPTIONS0DEE16A2
      - WorksManApiPostTestUserOPTIONSC4203EC4
      - WorksManApiPostTestUserPOST1DFB6999
      - WorksManApiPostTestUserDDD680E2
      - WorksManApiworksmanExperienceapiOPTIONS510B6DDE
      - WorksManApiworksmanExperienceapiPOSTAAACC6BD
      - WorksManApiworksmanExperienceapiDEC4F2E2
      - WorksManApiWorksmanTermsAndConditionsOPTIONS7A4ACDF9
      - WorksManApiWorksmanTermsAndConditionsPOST661B87E2
      - WorksManApiWorksmanTermsAndConditionsE2AE3179
      - WorksManApierrorGetTestUser9D439F3F
      - WorksManApiErrorpworksmanExperienceMethodsA7975B29
      - WorksManApiErrorpWorksmanTermsAndConditionsMethod7293DFE1
      - WorksManApigetAllMobileNumberB2BB75B5
      - WorksManApigetAllMobileNumberErrorD8ACCB10
      - WorksManApiGetTestUserErrorAFFB91DF
      - WorksManApiGetTestUseResp2142FEFC
      - WorksManApiresGetTestUserAB036556
      - WorksManApiRespworksmanExperienceMethods5F78B1D6
      - WorksManApiRespWorksmanTermsAndConditionsMethod09A8EC4F
      - WorksManApiUserModelF7B9A289
      - WorksManApivalidator36FD7B86
      - WorksManApiWorkmanStatus50343F60
      - WorksManApiWorkmanStatusError5C163A96
      - WorksManApiworksmanExperienceModel152E2DE2
      - WorksManApiWorksmanTermsAndConditionsModel0BCAF9B4
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Deployment/Resource
  WorksManApiDeploymentStagedev92FAAB21:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      DeploymentId:
        Ref: WorksManApiDeployment495969A9b616bf9ba59b79e45d6cb5ae48a27680
      StageName: dev
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/DeploymentStage.dev/Resource
  WorksManApiOPTIONS0DEE16A2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/OPTIONS/Resource
  WorksManApiWorksmanTermsAndConditionsE2AE3179:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: WorksmanTermsAndConditions
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/Resource
  WorksManApiWorksmanTermsAndConditionsOPTIONS7A4ACDF9:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiWorksmanTermsAndConditionsE2AE3179
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/OPTIONS/Resource
  WorksManApiWorksmanTermsAndConditionsPOSTApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1POSTWorksmanTermsAndConditions5D26E080:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/WorksmanTermsAndConditions
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..WorksmanTermsAndConditions
  WorksManApiWorksmanTermsAndConditionsPOSTApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1POSTWorksmanTermsAndConditionsFEC34F37:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/WorksmanTermsAndConditions
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..WorksmanTermsAndConditions
  WorksManApiWorksmanTermsAndConditionsPOST661B87E2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiWorksmanTermsAndConditionsE2AE3179
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManTermsAndCondition66F1F295
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiRespWorksmanTermsAndConditionsMethod09A8EC4F
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiErrorpWorksmanTermsAndConditionsMethod7293DFE1
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksManApiWorksmanTermsAndConditionsModel0BCAF9B4
      RequestParameters:
        method.request.header.Authorization: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/Resource
  WorksManApiworksmanExperienceapiDEC4F2E2:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: worksmanExperienceapi
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperienceapi/Resource
  WorksManApiworksmanExperienceapiOPTIONS510B6DDE:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiworksmanExperienceapiDEC4F2E2
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperienceapi/OPTIONS/Resource
  WorksManApiworksmanExperienceapiPOSTApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1POSTworksmanExperienceapi3C8B95AC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/worksmanExperienceapi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperienceapi/POST/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..worksmanExperienceapi
  WorksManApiworksmanExperienceapiPOSTApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1POSTworksmanExperienceapi89DA9BEB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/worksmanExperienceapi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperienceapi/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..worksmanExperienceapi
  WorksManApiworksmanExperienceapiPOSTAAACC6BD:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiworksmanExperienceapiDEC4F2E2
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
        RequestTemplates:
          application/json: '"$util.escapeJavaScript($input.body)"'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManExperienceAB1A1501
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiRespworksmanExperienceMethods5F78B1D6
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiErrorpworksmanExperienceMethodsA7975B29
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksManApiworksmanExperienceModel152E2DE2
      RequestParameters:
        method.request.header.Authorization: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperienceapi/POST/Resource
  WorksManApiGetWorksmanAccountRegistartionStatus10A258AF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: GetWorksmanAccountRegistartionStatus
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetWorksmanAccountRegistartionStatus/Resource
  WorksManApiGetWorksmanAccountRegistartionStatusOPTIONSDC172552:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiGetWorksmanAccountRegistartionStatus10A258AF
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetWorksmanAccountRegistartionStatus/OPTIONS/Resource
  WorksManApiGetWorksmanAccountRegistartionStatusGETApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1GETGetWorksmanAccountRegistartionStatus8CB4BA12:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusA28FB6DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /GET/GetWorksmanAccountRegistartionStatus
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetWorksmanAccountRegistartionStatus/GET/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.GET..GetWorksmanAccountRegistartionStatus
  WorksManApiGetWorksmanAccountRegistartionStatusGETApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1GETGetWorksmanAccountRegistartionStatusC6E1D7E7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusA28FB6DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/GET/GetWorksmanAccountRegistartionStatus
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetWorksmanAccountRegistartionStatus/GET/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.GET..GetWorksmanAccountRegistartionStatus
  WorksManApiGetWorksmanAccountRegistartionStatusGET88BE1ED8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksManApiGetWorksmanAccountRegistartionStatus10A258AF
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksmanIdHeader: method.request.header.worksmanIdHeader
          integration.request.header.email: method.request.header.email
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksmanIdHeader\":\"$util.escapeJavaScript($input.params('worksmanIdHeader'))\",\"email\":\"$util.escapeJavaScript($input.params('email'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetWorksmanAccountRegistartionStatusA28FB6DA
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiWorkmanStatus50343F60
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiWorkmanStatusError5C163A96
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksmanIdHeader: true
        method.request.header.email: true
      RequestValidatorId:
        Ref: WorksManApivalidator36FD7B86
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetWorksmanAccountRegistartionStatus/GET/Resource
  WorksManApiGetTestUser4A9C3C0F:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: GetTestUser
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetTestUser/Resource
  WorksManApiGetTestUserOPTIONS8B16962F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiGetTestUser4A9C3C0F
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetTestUser/OPTIONS/Resource
  WorksManApiGetTestUserGETApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1GETGetTestUser95CA257C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetTestUser4654379B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /GET/GetTestUser
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetTestUser/GET/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.GET..GetTestUser
  WorksManApiGetTestUserGETApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1GETGetTestUser43B61FBD:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetTestUser4654379B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/GET/GetTestUser
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetTestUser/GET/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.GET..GetTestUser
  WorksManApiGetTestUserGET5306C5B2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksManApiGetTestUser4A9C3C0F
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksmanIdHeader: method.request.header.worksmanIdHeader
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksmanIdHeader\":\"$util.escapeJavaScript($input.params('worksmanIdHeader'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetTestUser4654379B
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiGetTestUseResp2142FEFC
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiGetTestUserErrorAFFB91DF
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksmanIdHeader: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetTestUser/GET/Resource
  WorksManApiPostTestUserDDD680E2:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: PostTestUser
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/PostTestUser/Resource
  WorksManApiPostTestUserOPTIONSC4203EC4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiPostTestUserDDD680E2
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/PostTestUser/OPTIONS/Resource
  WorksManApiPostTestUserPOSTApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1POSTPostTestUser0FA475F7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PostTestUser4E6E6D03
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/PostTestUser
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/PostTestUser/POST/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..PostTestUser
  WorksManApiPostTestUserPOSTApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1POSTPostTestUser8804355E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PostTestUser4E6E6D03
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/PostTestUser
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/PostTestUser/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..PostTestUser
  WorksManApiPostTestUserPOST1DFB6999:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiPostTestUserDDD680E2
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
        RequestTemplates:
          application/json: '{"worksmanId":"$util.escapeJavaScript($input.body)"}'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - PostTestUser4E6E6D03
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiresGetTestUserAB036556
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApierrorGetTestUser9D439F3F
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: WorksManApiUserModelF7B9A289
      RequestParameters:
        method.request.header.Authorization: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/PostTestUser/POST/Resource
  WorksManApigetAllMobileNumbereApiGatewayBD625C83:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: getAllMobileNumbereApiGateway
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/getAllMobileNumbereApiGateway/Resource
  WorksManApigetAllMobileNumbereApiGatewayOPTIONSED5EDF1A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApigetAllMobileNumbereApiGatewayBD625C83
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader,email'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/getAllMobileNumbereApiGateway/OPTIONS/Resource
  WorksManApigetAllMobileNumbereApiGatewayGETApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1GETgetAllMobileNumbereApiGatewayE93240D9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllMobileNumberCEE5681C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /GET/getAllMobileNumbereApiGateway
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/getAllMobileNumbereApiGateway/GET/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.GET..getAllMobileNumbereApiGateway
  WorksManApigetAllMobileNumbereApiGatewayGETApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1GETgetAllMobileNumbereApiGateway10A3035A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllMobileNumberCEE5681C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/GET/getAllMobileNumbereApiGateway
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/getAllMobileNumbereApiGateway/GET/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.GET..getAllMobileNumbereApiGateway
  WorksManApigetAllMobileNumbereApiGatewayGET425E3CF0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksManApigetAllMobileNumbereApiGatewayBD625C83
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksmanIdHeader: method.request.header.worksmanIdHeader
          integration.request.header.email: method.request.header.email
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksmanIdHeader\":\"$util.escapeJavaScript($input.params('worksmanIdHeader'))\",\"email\":\"$util.escapeJavaScript($input.params('email'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getAllMobileNumberCEE5681C
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApigetAllMobileNumberB2BB75B5
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApigetAllMobileNumberErrorD8ACCB10
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksmanIdHeader: true
        method.request.header.email: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/getAllMobileNumbereApiGateway/GET/Resource
  WorksManApiWorksmanTermsAndConditionsModel0BCAF9B4:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          isWatched_howVrishkar_Works:
            type: string
          isUnderstand_Worksman_Will_SelfEmployeed:
            type: string
          isUnderstand_Vrishkar_isnot_responsible:
            type: string
        required:
          - worksman_id
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/WorksmanTermsAndConditionsModel/Resource
  WorksManApiRespWorksmanTermsAndConditionsMethod09A8EC4F:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: RespWorksmanTermsAndConditionsMethod
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: RespWorksmanTermsAndConditionsMethod
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/RespWorksmanTermsAndConditionsMethod/Resource
  WorksManApiErrorpWorksmanTermsAndConditionsMethod7293DFE1:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: ErrorpWorksmanTermsAndConditionsMethod
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: ErrorpWorksmanTermsAndConditionsMethod
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/ErrorpWorksmanTermsAndConditionsMethod/Resource
  WorksManApiworksmanExperienceModel152E2DE2:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Schema:
        type: object
        properties:
          worksman_id:
            type: string
          years_of_cleaning_exp:
            type: string
          Have_house_cleaning_exp:
            type: string
          Have_deep_cleaning_exp:
            type: string
          Have_office_cleaning_exp:
            type: string
          Have_oven_cleaning_exp:
            type: string
          Have_gardening_exp:
            type: string
          Have_building_cleaning_exp:
            type: string
          Have_hotel_cleaning_exp:
            type: string
          Have_hospital_cleaning_exp:
            type: string
          Have_retail_cleaning_exp:
            type: string
          other_cleaning:
            type: string
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/worksmanExperienceModel/Resource
  WorksManApiRespworksmanExperienceMethods5F78B1D6:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: RespworksmanExperienceMethods
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: RespworksmanExperienceMethods
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/RespworksmanExperienceMethods/Resource
  WorksManApiErrorpworksmanExperienceMethodsA7975B29:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: ErrorpworksmanExperienceMethods
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: ErrorpworksmanExperienceMethods
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/ErrorpworksmanExperienceMethods/Resource
  WorksManApiWorkmanStatus50343F60:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: WorkmanStatus
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: pollResponse
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/WorkmanStatus/Resource
  WorksManApiWorkmanStatusError5C163A96:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: WorkmanStatusError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: errorResponse
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/WorkmanStatusError/Resource
  WorksManApivalidator36FD7B86:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      Name: parameters-validator
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/validator/Resource
  WorksManApiGetTestUseResp2142FEFC:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: GetTestUseResp
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: pollResponse
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/GetTestUseResp/Resource
  WorksManApiGetTestUserErrorAFFB91DF:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: GetTestUserError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: errorResponse
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/GetTestUserError/Resource
  WorksManApiUserModelF7B9A289:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Schema:
        type: object
        properties:
          userId:
            type: string
          name:
            type: string
        required:
          - userId
        $schema: http://json-schema.org/draft-04/schema#
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/UserModel/Resource
  WorksManApiresGetTestUserAB036556:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: resGetTestUser
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: resGetTestUser
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/resGetTestUser/Resource
  WorksManApierrorGetTestUser9D439F3F:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: errorGetTestUser
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: errorGetTestUser
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/errorGetTestUser/Resource
  WorksManApigetAllMobileNumberB2BB75B5:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: getAllMobileNumber
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: pollResponse
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/getAllMobileNumber/Resource
  WorksManApigetAllMobileNumberErrorD8ACCB10:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: getAllMobileNumberError
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: errorResponse
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/getAllMobileNumberError/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WRwU7DMAyGn2X3LKMa4kw3tNvEVCTuJjEla5OU2GGaqr47SbqhcvJn57f9W6lktX2UD6tnuNBa6W4zKh9Qjm8MqhM1EXLC1rhW7L0jDlGx2H+6EwSwyBhy8hp5iKXcIPkYFGZOem3YeDeJPHzswX5okOMhOpXLWbPkEwZriEqDASvHxvdlUI6ToO0ash2SxVXK5S6qDnkHhAIG0wLjBa6pD4nrwdz83LFWykfH4gWH3l8tumJ4keU7y74Z7qeU8UfkL6/z442Wh/7x0Wvsi6hAg98x7X+H3mhgH2bt/9o0TcIltTzT5qd6Sr8hq9WZjFmHZNZYlM0cfwEKNlvTqQEAAA==
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersb2d38513f5a0461e4ac25815dc1c5491484f440748bf2cec9750113f318321d4S3Bucket7C22BB7E:
    Type: String
    Description: S3 bucket for asset "b2d38513f5a0461e4ac25815dc1c5491484f440748bf2cec9750113f318321d4"
  AssetParametersb2d38513f5a0461e4ac25815dc1c5491484f440748bf2cec9750113f318321d4S3VersionKey3DC4908C:
    Type: String
    Description: S3 key for asset version "b2d38513f5a0461e4ac25815dc1c5491484f440748bf2cec9750113f318321d4"
  AssetParametersb2d38513f5a0461e4ac25815dc1c5491484f440748bf2cec9750113f318321d4ArtifactHash86028A58:
    Type: String
    Description: Artifact hash for asset "b2d38513f5a0461e4ac25815dc1c5491484f440748bf2cec9750113f318321d4"
  AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efS3Bucket6B6E3E01:
    Type: String
    Description: S3 bucket for asset "f39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7ef"
  AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efS3VersionKeyCA650CCD:
    Type: String
    Description: S3 key for asset version "f39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7ef"
  AssetParametersf39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7efArtifactHashB2213832:
    Type: String
    Description: Artifact hash for asset "f39de0c0495b0fe3f368b789feac80be04f04d4ebcbbc154d2632f9619e5c7ef"
  AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eS3Bucket5084FBCF:
    Type: String
    Description: S3 bucket for asset "3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864e"
  AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eS3VersionKeyBD0D6315:
    Type: String
    Description: S3 key for asset version "3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864e"
  AssetParameters3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864eArtifactHash8A67D209:
    Type: String
    Description: Artifact hash for asset "3e6aefaa1e2f2da3f0be171b40930f29f7843d3dfaf624ecf1775348f2d0864e"
  AssetParameters44245703dcc59e9c94cc2bc53c9e95cfe4a76c649f4f8c6438177dd52084cc95S3BucketCF83EF7F:
    Type: String
    Description: S3 bucket for asset "44245703dcc59e9c94cc2bc53c9e95cfe4a76c649f4f8c6438177dd52084cc95"
  AssetParameters44245703dcc59e9c94cc2bc53c9e95cfe4a76c649f4f8c6438177dd52084cc95S3VersionKeyD60B3A01:
    Type: String
    Description: S3 key for asset version "44245703dcc59e9c94cc2bc53c9e95cfe4a76c649f4f8c6438177dd52084cc95"
  AssetParameters44245703dcc59e9c94cc2bc53c9e95cfe4a76c649f4f8c6438177dd52084cc95ArtifactHashBC0A7A2A:
    Type: String
    Description: Artifact hash for asset "44245703dcc59e9c94cc2bc53c9e95cfe4a76c649f4f8c6438177dd52084cc95"
  AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0S3BucketFA52C3C7:
    Type: String
    Description: S3 bucket for asset "9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0"
  AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0S3VersionKey796ED790:
    Type: String
    Description: S3 key for asset version "9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0"
  AssetParameters9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0ArtifactHashB5871201:
    Type: String
    Description: Artifact hash for asset "9cb30c2e9f898e5f6a50b07d5ae5d7edbcb4ff6075ef881b6c10b92509c1e2f0"
  AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8S3BucketA5D4ABCD:
    Type: String
    Description: S3 bucket for asset "380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8"
  AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8S3VersionKey71AC1508:
    Type: String
    Description: S3 key for asset version "380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8"
  AssetParameters380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8ArtifactHashCD8DD379:
    Type: String
    Description: Artifact hash for asset "380251841887a864fc089aa778767c205dbb1064ae01de0a989e9d9ce4171af8"
  AssetParameters1bb2a2cbc29488b3ac5b4c8ebfba7e27208c09a7977c208dd3e574f330f08d5aS3Bucket98DCCCDE:
    Type: String
    Description: S3 bucket for asset "1bb2a2cbc29488b3ac5b4c8ebfba7e27208c09a7977c208dd3e574f330f08d5a"
  AssetParameters1bb2a2cbc29488b3ac5b4c8ebfba7e27208c09a7977c208dd3e574f330f08d5aS3VersionKeyEFC7081F:
    Type: String
    Description: S3 key for asset version "1bb2a2cbc29488b3ac5b4c8ebfba7e27208c09a7977c208dd3e574f330f08d5a"
  AssetParameters1bb2a2cbc29488b3ac5b4c8ebfba7e27208c09a7977c208dd3e574f330f08d5aArtifactHashF0E10762:
    Type: String
    Description: Artifact hash for asset "1bb2a2cbc29488b3ac5b4c8ebfba7e27208c09a7977c208dd3e574f330f08d5a"
Outputs:
  WorksManApiEndpoint06A24561:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksManApi8007FB09
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksManApiDeploymentStagedev92FAAB21
          - /
  apiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksManApi8007FB09
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksManApiDeploymentStagedev92FAAB21
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

