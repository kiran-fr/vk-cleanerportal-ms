Resources:
  UserRegistrationServiceRoleBCB3F31D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistration/ServiceRole/Resource
  UserRegistration1E985772:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters7433cc8c7156422be203c172470535c1a4b9a8acdaccca5bb31fb4f2364a4e12S3BucketC6DEEC9B
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7433cc8c7156422be203c172470535c1a4b9a8acdaccca5bb31fb4f2364a4e12S3VersionKeyC33653AC
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7433cc8c7156422be203c172470535c1a4b9a8acdaccca5bb31fb4f2364a4e12S3VersionKeyC33653AC
      Role:
        Fn::GetAtt:
          - UserRegistrationServiceRoleBCB3F31D
          - Arn
      FunctionName: UserRegistration
      Handler: index.UserRegistrationHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserRegistrationServiceRoleBCB3F31D
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistration/Resource
      aws:asset:path: /Users/ramya/Desktop/vrishkarprojects/vk-cleanerportal-ms/functions/UserRegistration
      aws:asset:original-path: /Users/ramya/Desktop/vrishkarprojects/vk-cleanerportal-ms/functions/UserRegistration
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UserEmailConfirmServiceRole1A79C4F4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/UserEmailConfirm/ServiceRole/Resource
  UserEmailConfirmB609801E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters796a3d705d0a990ba91998208e86445c8761761172df4e7e60127c312f1376b0S3BucketAF4AEBCF
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters796a3d705d0a990ba91998208e86445c8761761172df4e7e60127c312f1376b0S3VersionKey2E8654B4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters796a3d705d0a990ba91998208e86445c8761761172df4e7e60127c312f1376b0S3VersionKey2E8654B4
      Role:
        Fn::GetAtt:
          - UserEmailConfirmServiceRole1A79C4F4
          - Arn
      FunctionName: userEmail
      Handler: index.handler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserEmailConfirmServiceRole1A79C4F4
    Metadata:
      aws:cdk:path: CdkExampleStack/UserEmailConfirm/Resource
      aws:asset:path: /Users/ramya/Desktop/vrishkarprojects/vk-cleanerportal-ms/functions/UserEmailConfirm
      aws:asset:original-path: /Users/ramya/Desktop/vrishkarprojects/vk-cleanerportal-ms/functions/UserEmailConfirm
      aws:asset:is-bundled: false
      aws:asset:property: Code
  StateMachineRoleB840431D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkExampleStack/StateMachine/Role/Resource
  StateMachineRoleDefaultPolicyDF1E6607:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - UserRegistration1E985772
                - Arn
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - UserEmailConfirmB609801E
                - Arn
        Version: "2012-10-17"
      PolicyName: StateMachineRoleDefaultPolicyDF1E6607
      Roles:
        - Ref: StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: CdkExampleStack/StateMachine/Role/DefaultPolicy/Resource
  StateMachine2E01A3A5:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - StateMachineRoleB840431D
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"User Registration","States":{"User Registration":{"Next":"User Email Confirm","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - UserRegistration1E985772
                - Arn
            - '","Payload.$":"$"}},"User Email Confirm":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - UserEmailConfirmB609801E
                - Arn
            - '","Payload.$":"$"}}}}'
    DependsOn:
      - StateMachineRoleDefaultPolicyDF1E6607
      - StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: CdkExampleStack/StateMachine/Resource
  UserRegistrationApi52CD672A:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: User Registration api gateway
      Name: UserRegistrationApi
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/Resource
  UserRegistrationApiCloudWatchRole56544654:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/CloudWatchRole/Resource
  UserRegistrationApiAccount1E623429:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - UserRegistrationApiCloudWatchRole56544654
          - Arn
    DependsOn:
      - UserRegistrationApi52CD672A
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/Account
  UserRegistrationApiDeploymentD48ADAF45c124892f5adb98a0e22f8b58fbcdc96:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: UserRegistrationApi52CD672A
      Description: Automatically created by the RestApi construct
    DependsOn:
      - UserRegistrationApicustomerGETC97BA723
      - UserRegistrationApicustomerOPTIONS0F5BA4F9
      - UserRegistrationApicustomer5350E6EF
      - UserRegistrationApiOPTIONSBE213390
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/Deployment/Resource
  UserRegistrationApiDeploymentStagedevB2F98C70:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: UserRegistrationApi52CD672A
      DeploymentId:
        Ref: UserRegistrationApiDeploymentD48ADAF45c124892f5adb98a0e22f8b58fbcdc96
      StageName: dev
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/DeploymentStage.dev/Resource
  UserRegistrationApiOPTIONSBE213390:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - UserRegistrationApi52CD672A
          - RootResourceId
      RestApiId:
        Ref: UserRegistrationApi52CD672A
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/Default/OPTIONS/Resource
  UserRegistrationApicustomer5350E6EF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - UserRegistrationApi52CD672A
          - RootResourceId
      PathPart: customer
      RestApiId:
        Ref: UserRegistrationApi52CD672A
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/Default/customer/Resource
  UserRegistrationApicustomerOPTIONS0F5BA4F9:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: UserRegistrationApicustomer5350E6EF
      RestApiId:
        Ref: UserRegistrationApi52CD672A
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/Default/customer/OPTIONS/Resource
  UserRegistrationApicustomerGETApiPermissionCdkExampleStackUserRegistrationApi614ED873GETcustomerF72BC6BC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserEmailConfirmB609801E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: UserRegistrationApi52CD672A
            - /
            - Ref: UserRegistrationApiDeploymentStagedevB2F98C70
            - /GET/customer
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/Default/customer/GET/ApiPermission.CdkExampleStackUserRegistrationApi614ED873.GET..customer
  UserRegistrationApicustomerGETApiPermissionTestCdkExampleStackUserRegistrationApi614ED873GETcustomerD4438310:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserEmailConfirmB609801E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: UserRegistrationApi52CD672A
            - /test-invoke-stage/GET/customer
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/Default/customer/GET/ApiPermission.Test.CdkExampleStackUserRegistrationApi614ED873.GET..customer
  UserRegistrationApicustomerGETC97BA723:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: UserRegistrationApicustomer5350E6EF
      RestApiId:
        Ref: UserRegistrationApi52CD672A
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UserEmailConfirmB609801E
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistrationApi/Default/customer/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11Q0WrDMAz8lr477kLLnpd2FAYrC9kXeI7aqknsYMktIeTfZ3sJhD3pTpZPp8tlvtvLl82belKm62Y7autAjt+sdCMKIuAAr2iu4mgNsfOaxfFiSuVUBwwuki/PvU/tCsh6pyHiMF8jozWTiOJjq7qfWsnx5I2O7TizxiW4DonSB1SdHCvbJqFUS9uiHtJcQpOgXaaiP5LJZuDy4HUDfFAEghj6y6xOGStqSH4mBx/mYZt/A+lghrPSNzRp6ZqHA3q8Bv5UQ7AFxEWP87kLLLS23rB4h761Qwcm5bFiMcZFOYAlqWT2DHyzdXyc0TrHBU/TJIytQd5p+8j3Mn+V+eZOiJkLi7EDWf3VX7NRfA/UAQAA
    Metadata:
      aws:cdk:path: CdkExampleStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters7433cc8c7156422be203c172470535c1a4b9a8acdaccca5bb31fb4f2364a4e12S3BucketC6DEEC9B:
    Type: String
    Description: S3 bucket for asset "7433cc8c7156422be203c172470535c1a4b9a8acdaccca5bb31fb4f2364a4e12"
  AssetParameters7433cc8c7156422be203c172470535c1a4b9a8acdaccca5bb31fb4f2364a4e12S3VersionKeyC33653AC:
    Type: String
    Description: S3 key for asset version "7433cc8c7156422be203c172470535c1a4b9a8acdaccca5bb31fb4f2364a4e12"
  AssetParameters7433cc8c7156422be203c172470535c1a4b9a8acdaccca5bb31fb4f2364a4e12ArtifactHash7A115427:
    Type: String
    Description: Artifact hash for asset "7433cc8c7156422be203c172470535c1a4b9a8acdaccca5bb31fb4f2364a4e12"
  AssetParameters796a3d705d0a990ba91998208e86445c8761761172df4e7e60127c312f1376b0S3BucketAF4AEBCF:
    Type: String
    Description: S3 bucket for asset "796a3d705d0a990ba91998208e86445c8761761172df4e7e60127c312f1376b0"
  AssetParameters796a3d705d0a990ba91998208e86445c8761761172df4e7e60127c312f1376b0S3VersionKey2E8654B4:
    Type: String
    Description: S3 key for asset version "796a3d705d0a990ba91998208e86445c8761761172df4e7e60127c312f1376b0"
  AssetParameters796a3d705d0a990ba91998208e86445c8761761172df4e7e60127c312f1376b0ArtifactHash65DABEEF:
    Type: String
    Description: Artifact hash for asset "796a3d705d0a990ba91998208e86445c8761761172df4e7e60127c312f1376b0"
Outputs:
  UserRegistrationApiEndpoint80341E45:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: UserRegistrationApi52CD672A
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: UserRegistrationApiDeploymentStagedevB2F98C70
          - /
  apiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: UserRegistrationApi52CD672A
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: UserRegistrationApiDeploymentStagedevB2F98C70
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

