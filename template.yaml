Resources:
  UserRegistrationServiceRoleBCB3F31D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UserRegistration/ServiceRole/Resource
  UserRegistration1E985772:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters2789f92025f80178b6fb47e710cfced3200d85aab7498bbdb24e2efd1151f86fS3Bucket32C2ACD8
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2789f92025f80178b6fb47e710cfced3200d85aab7498bbdb24e2efd1151f86fS3VersionKey6E75333D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2789f92025f80178b6fb47e710cfced3200d85aab7498bbdb24e2efd1151f86fS3VersionKey6E75333D
      Role:
        Fn::GetAtt:
          - UserRegistrationServiceRoleBCB3F31D
          - Arn
      FunctionName: UserRegistration
      Handler: index.UserRegistrationHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserRegistrationServiceRoleBCB3F31D
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UserRegistration/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManTermsAndConditionServiceRole06AE84AC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManTermsAndCondition/ServiceRole/Resource
  WorksManTermsAndCondition66F1F295:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersae145f265ffe5cd251c3700309f41fbed927ac6733b864f8091429e245ba2a4aS3BucketBADB3B56
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersae145f265ffe5cd251c3700309f41fbed927ac6733b864f8091429e245ba2a4aS3VersionKeyA318D8D3
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersae145f265ffe5cd251c3700309f41fbed927ac6733b864f8091429e245ba2a4aS3VersionKeyA318D8D3
      Role:
        Fn::GetAtt:
          - WorksManTermsAndConditionServiceRole06AE84AC
          - Arn
      FunctionName: WorksManTermsAndCondition
      Handler: index.WorksManTermsAndConditionHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManTermsAndConditionServiceRole06AE84AC
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManTermsAndCondition/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManExperienceServiceRoleE9A759F2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManExperience/ServiceRole/Resource
  WorksManExperienceAB1A1501:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersad1db58075b38c2cfadd0532fbad2792efa7fe7858e8b0e125942ed54a52bda2S3Bucket213E0D03
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersad1db58075b38c2cfadd0532fbad2792efa7fe7858e8b0e125942ed54a52bda2S3VersionKeyF64C0041
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersad1db58075b38c2cfadd0532fbad2792efa7fe7858e8b0e125942ed54a52bda2S3VersionKeyF64C0041
      Role:
        Fn::GetAtt:
          - WorksManExperienceServiceRoleE9A759F2
          - Arn
      FunctionName: WorksManExperience
      Handler: index.WorksManExperienceHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManExperienceServiceRoleE9A759F2
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManExperience/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:is-bundled: false
      aws:asset:property: Code
  StateMachineRoleB840431D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/StateMachine/Role/Resource
  StateMachineRoleDefaultPolicyDF1E6607:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - UserRegistration1E985772
                - Arn
        Version: "2012-10-17"
      PolicyName: StateMachineRoleDefaultPolicyDF1E6607
      Roles:
        - Ref: StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/StateMachine/Role/DefaultPolicy/Resource
  StateMachine2E01A3A5:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - StateMachineRoleB840431D
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"User Registration","States":{"User Registration":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - UserRegistration1E985772
                - Arn
            - '","Payload.$":"$"}}}}'
    DependsOn:
      - StateMachineRoleDefaultPolicyDF1E6607
      - StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/StateMachine/Resource
  WorksManApi8007FB09:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: User Registration api gateway
      Name: WorksManApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Resource
  WorksManApiCloudWatchRole56A20485:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/CloudWatchRole/Resource
  WorksManApiAccount378EFED6:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - WorksManApiCloudWatchRole56A20485
          - Arn
    DependsOn:
      - WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Account
  WorksManApiDeployment495969A9b463405ce22daff1b3b78f932fb2d459:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      Description: Automatically created by the RestApi construct
    DependsOn:
      - WorksManApiOPTIONS0DEE16A2
      - WorksManApiworksmanExperienceOPTIONSB18854EB
      - WorksManApiworksmanExperiencePOST6823FA26
      - WorksManApiworksmanExperience3919F320
      - WorksManApiWorksmanTermsAndConditionsOPTIONS7A4ACDF9
      - WorksManApiWorksmanTermsAndConditionsPOST661B87E2
      - WorksManApiWorksmanTermsAndConditionsE2AE3179
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Deployment/Resource
  WorksManApiDeploymentStagedev92FAAB21:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      DeploymentId:
        Ref: WorksManApiDeployment495969A9b463405ce22daff1b3b78f932fb2d459
      StageName: dev
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/DeploymentStage.dev/Resource
  WorksManApiOPTIONS0DEE16A2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/OPTIONS/Resource
  WorksManApiWorksmanTermsAndConditionsE2AE3179:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: WorksmanTermsAndConditions
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/Resource
  WorksManApiWorksmanTermsAndConditionsOPTIONS7A4ACDF9:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiWorksmanTermsAndConditionsE2AE3179
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/OPTIONS/Resource
  WorksManApiWorksmanTermsAndConditionsPOSTApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1POSTWorksmanTermsAndConditions5D26E080:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/WorksmanTermsAndConditions
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..WorksmanTermsAndConditions
  WorksManApiWorksmanTermsAndConditionsPOSTApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1POSTWorksmanTermsAndConditionsFEC34F37:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/WorksmanTermsAndConditions
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..WorksmanTermsAndConditions
  WorksManApiWorksmanTermsAndConditionsPOST661B87E2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiWorksmanTermsAndConditionsE2AE3179
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            StatusCode: "200"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManTermsAndCondition66F1F295
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/Resource
  WorksManApiworksmanExperience3919F320:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: worksmanExperience
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperience/Resource
  WorksManApiworksmanExperienceOPTIONSB18854EB:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiworksmanExperience3919F320
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperience/OPTIONS/Resource
  WorksManApiworksmanExperiencePOSTApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1POSTworksmanExperience7748F5FE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/worksmanExperience
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperience/POST/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..worksmanExperience
  WorksManApiworksmanExperiencePOSTApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1POSTworksmanExperience1C3399F8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/worksmanExperience
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperience/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..worksmanExperience
  WorksManApiworksmanExperiencePOST6823FA26:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiworksmanExperience3919F320
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            StatusCode: "200"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManExperienceAB1A1501
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperience/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11R0W6DMAz8lr6HdKjTnkc7TZq0aoh9gRdcmgIJip1WCPHvSzKQ0J5y51zOZyeX+eFZPu1e4UGZqtv9pKxDOX0zqFYURMgBNto04mQNsfOKxeliSnDQI6OL5Mvz4FO5QrLeKYw46GvN2ppZRPOpg/6nBjm9e6NiOWq2uETXa6L0QEMvp8p2ySidpe20GpMuoVnQIYOYj2SKGbg8etUiH4FQEONwWdwpY6CW5GdK8GHutv0nSAMznkFdtUlNtzwMMOgm8AeMIRYSF4Nexl1hoZT1hsUbDp0dezRpHxsW17g6B7BuKoU9I19tHS8XtN3jiud5FsbWKG+0v+cv4eNkvruR1pkLjXWPsvo7fwFJnEc61AEAAA==
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters2789f92025f80178b6fb47e710cfced3200d85aab7498bbdb24e2efd1151f86fS3Bucket32C2ACD8:
    Type: String
    Description: S3 bucket for asset "2789f92025f80178b6fb47e710cfced3200d85aab7498bbdb24e2efd1151f86f"
  AssetParameters2789f92025f80178b6fb47e710cfced3200d85aab7498bbdb24e2efd1151f86fS3VersionKey6E75333D:
    Type: String
    Description: S3 key for asset version "2789f92025f80178b6fb47e710cfced3200d85aab7498bbdb24e2efd1151f86f"
  AssetParameters2789f92025f80178b6fb47e710cfced3200d85aab7498bbdb24e2efd1151f86fArtifactHash9483CEF9:
    Type: String
    Description: Artifact hash for asset "2789f92025f80178b6fb47e710cfced3200d85aab7498bbdb24e2efd1151f86f"
  AssetParametersae145f265ffe5cd251c3700309f41fbed927ac6733b864f8091429e245ba2a4aS3BucketBADB3B56:
    Type: String
    Description: S3 bucket for asset "ae145f265ffe5cd251c3700309f41fbed927ac6733b864f8091429e245ba2a4a"
  AssetParametersae145f265ffe5cd251c3700309f41fbed927ac6733b864f8091429e245ba2a4aS3VersionKeyA318D8D3:
    Type: String
    Description: S3 key for asset version "ae145f265ffe5cd251c3700309f41fbed927ac6733b864f8091429e245ba2a4a"
  AssetParametersae145f265ffe5cd251c3700309f41fbed927ac6733b864f8091429e245ba2a4aArtifactHashB0DF51D8:
    Type: String
    Description: Artifact hash for asset "ae145f265ffe5cd251c3700309f41fbed927ac6733b864f8091429e245ba2a4a"
  AssetParametersad1db58075b38c2cfadd0532fbad2792efa7fe7858e8b0e125942ed54a52bda2S3Bucket213E0D03:
    Type: String
    Description: S3 bucket for asset "ad1db58075b38c2cfadd0532fbad2792efa7fe7858e8b0e125942ed54a52bda2"
  AssetParametersad1db58075b38c2cfadd0532fbad2792efa7fe7858e8b0e125942ed54a52bda2S3VersionKeyF64C0041:
    Type: String
    Description: S3 key for asset version "ad1db58075b38c2cfadd0532fbad2792efa7fe7858e8b0e125942ed54a52bda2"
  AssetParametersad1db58075b38c2cfadd0532fbad2792efa7fe7858e8b0e125942ed54a52bda2ArtifactHash29FA5A95:
    Type: String
    Description: Artifact hash for asset "ad1db58075b38c2cfadd0532fbad2792efa7fe7858e8b0e125942ed54a52bda2"
Outputs:
  WorksManApiEndpoint06A24561:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksManApi8007FB09
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksManApiDeploymentStagedev92FAAB21
          - /
  apiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksManApi8007FB09
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksManApiDeploymentStagedev92FAAB21
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

