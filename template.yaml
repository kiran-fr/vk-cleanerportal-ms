Resources:
  UserRegistrationServiceRoleBCB3F31D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistration/ServiceRole/Resource
  UserRegistration1E985772:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efS3Bucket4A27C73C
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efS3VersionKeyD556C9CF
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efS3VersionKeyD556C9CF
      Role:
        Fn::GetAtt:
          - UserRegistrationServiceRoleBCB3F31D
          - Arn
      FunctionName: UserRegistration
      Handler: index.UserRegistrationHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserRegistrationServiceRoleBCB3F31D
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistration/Resource
      aws:asset:path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:original-path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UserEmailConfirmServiceRole1A79C4F4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/UserEmailConfirm/ServiceRole/Resource
  UserEmailConfirmB609801E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eS3Bucket154DDC2C
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eS3VersionKey9ABE9969
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eS3VersionKey9ABE9969
      Role:
        Fn::GetAtt:
          - UserEmailConfirmServiceRole1A79C4F4
          - Arn
      FunctionName: userEmail
      Handler: index.handler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserEmailConfirmServiceRole1A79C4F4
    Metadata:
      aws:cdk:path: CdkExampleStack/UserEmailConfirm/Resource
      aws:asset:path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\UserEmailConfirm
      aws:asset:original-path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\UserEmailConfirm
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManTermsAndConditionServiceRole06AE84AC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManTermsAndCondition/ServiceRole/Resource
  WorksManTermsAndCondition66F1F295:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersbd19f9f57db0bc3b26f4906ca8a3efd22333be529c040a88b3f6162d110ba8d1S3Bucket026ACC0E
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbd19f9f57db0bc3b26f4906ca8a3efd22333be529c040a88b3f6162d110ba8d1S3VersionKey4713341D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbd19f9f57db0bc3b26f4906ca8a3efd22333be529c040a88b3f6162d110ba8d1S3VersionKey4713341D
      Role:
        Fn::GetAtt:
          - WorksManTermsAndConditionServiceRole06AE84AC
          - Arn
      FunctionName: WorksManTermsAndCondition
      Handler: index.WorksManTermsAndConditionHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManTermsAndConditionServiceRole06AE84AC
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManTermsAndCondition/Resource
      aws:asset:path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:original-path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManExperienceServiceRoleE9A759F2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManExperience/ServiceRole/Resource
  WorksManExperienceAB1A1501:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters99644ae7ce4a3ff1d05971104e51cdfccf838252114957aa5a1621e1133d6cedS3BucketACD407A0
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters99644ae7ce4a3ff1d05971104e51cdfccf838252114957aa5a1621e1133d6cedS3VersionKeyF7EBA989
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters99644ae7ce4a3ff1d05971104e51cdfccf838252114957aa5a1621e1133d6cedS3VersionKeyF7EBA989
      Role:
        Fn::GetAtt:
          - WorksManExperienceServiceRoleE9A759F2
          - Arn
      FunctionName: WorksManExperience
      Handler: index.WorksManExperienceHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManExperienceServiceRoleE9A759F2
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManExperience/Resource
      aws:asset:path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:original-path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:is-bundled: false
      aws:asset:property: Code
  apiC8550315:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: User Registration api gateway
      Name: api
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Resource
  apiCloudWatchRoleAC81D93E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CdkExampleStack/api/CloudWatchRole/Resource
  apiAccount57E28B43:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - apiCloudWatchRoleAC81D93E
          - Arn
    DependsOn:
      - apiC8550315
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Account
  apiDeployment149F129457d92b0520422a0c0c8e94bbb31478d0:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: apiC8550315
      Description: Automatically created by the RestApi construct
    DependsOn:
      - apigetcustomerGET75334DFB
      - apigetcustomerOPTIONSB5D5924C
      - apigetcustomer403C984C
      - apiOPTIONS5A1027A6
      - apiworkmanDataStoreOPTIONS1C1DD283
      - apiworkmanDataStorePOST9951C08A
      - apiworkmanDataStore761673B7
      - apiWorksManExperienceOPTIONSA266274E
      - apiWorksManExperiencePOST6CF900C5
      - apiWorksManExperienceA18E26F7
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Deployment/Resource
  apiDeploymentStagedev96712F43:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: apiC8550315
      DeploymentId:
        Ref: apiDeployment149F129457d92b0520422a0c0c8e94bbb31478d0
      StageName: dev
    Metadata:
      aws:cdk:path: CdkExampleStack/api/DeploymentStage.dev/Resource
  apiOPTIONS5A1027A6:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - apiC8550315
          - RootResourceId
      RestApiId:
        Ref: apiC8550315
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/OPTIONS/Resource
  apiworkmanDataStore761673B7:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - apiC8550315
          - RootResourceId
      PathPart: workmanDataStore
      RestApiId:
        Ref: apiC8550315
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/workmanDataStore/Resource
  apiworkmanDataStoreOPTIONS1C1DD283:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: apiworkmanDataStore761673B7
      RestApiId:
        Ref: apiC8550315
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/workmanDataStore/OPTIONS/Resource
  apiworkmanDataStorePOSTApiPermissionCdkExampleStackapi8668C509POSTworkmanDataStore22D43BDB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserRegistration1E985772
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apiC8550315
            - /
            - Ref: apiDeploymentStagedev96712F43
            - /POST/workmanDataStore
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/workmanDataStore/POST/ApiPermission.CdkExampleStackapi8668C509.POST..workmanDataStore
  apiworkmanDataStorePOSTApiPermissionTestCdkExampleStackapi8668C509POSTworkmanDataStoreC3A05F5E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserRegistration1E985772
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apiC8550315
            - /test-invoke-stage/POST/workmanDataStore
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/workmanDataStore/POST/ApiPermission.Test.CdkExampleStackapi8668C509.POST..workmanDataStore
  apiworkmanDataStorePOST9951C08A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: apiworkmanDataStore761673B7
      RestApiId:
        Ref: apiC8550315
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UserRegistration1E985772
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/workmanDataStore/POST/Resource
  apigetcustomer403C984C:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - apiC8550315
          - RootResourceId
      PathPart: getcustomer
      RestApiId:
        Ref: apiC8550315
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/getcustomer/Resource
  apigetcustomerOPTIONSB5D5924C:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: apigetcustomer403C984C
      RestApiId:
        Ref: apiC8550315
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/getcustomer/OPTIONS/Resource
  apigetcustomerGETApiPermissionCdkExampleStackapi8668C509GETgetcustomerB66D659C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserEmailConfirmB609801E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apiC8550315
            - /
            - Ref: apiDeploymentStagedev96712F43
            - /GET/getcustomer
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/getcustomer/GET/ApiPermission.CdkExampleStackapi8668C509.GET..getcustomer
  apigetcustomerGETApiPermissionTestCdkExampleStackapi8668C509GETgetcustomer6EE8F565:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserEmailConfirmB609801E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apiC8550315
            - /test-invoke-stage/GET/getcustomer
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/getcustomer/GET/ApiPermission.Test.CdkExampleStackapi8668C509.GET..getcustomer
  apigetcustomerGET75334DFB:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: apigetcustomer403C984C
      RestApiId:
        Ref: apiC8550315
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UserEmailConfirmB609801E
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/getcustomer/GET/Resource
  apiWorksManExperienceA18E26F7:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - apiC8550315
          - RootResourceId
      PathPart: WorksManExperience
      RestApiId:
        Ref: apiC8550315
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/WorksManExperience/Resource
  apiWorksManExperienceOPTIONSA266274E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: apiWorksManExperienceA18E26F7
      RestApiId:
        Ref: apiC8550315
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/WorksManExperience/OPTIONS/Resource
  apiWorksManExperiencePOSTApiPermissionCdkExampleStackapi8668C509POSTWorksManExperience2DC17D9F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apiC8550315
            - /
            - Ref: apiDeploymentStagedev96712F43
            - /POST/WorksManExperience
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/WorksManExperience/POST/ApiPermission.CdkExampleStackapi8668C509.POST..WorksManExperience
  apiWorksManExperiencePOSTApiPermissionTestCdkExampleStackapi8668C509POSTWorksManExperience337162E0:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apiC8550315
            - /test-invoke-stage/POST/WorksManExperience
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/WorksManExperience/POST/ApiPermission.Test.CdkExampleStackapi8668C509.POST..WorksManExperience
  apiWorksManExperiencePOST6CF900C5:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: apiWorksManExperienceA18E26F7
      RestApiId:
        Ref: apiC8550315
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManExperienceAB1A1501
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CdkExampleStack/api/Default/WorksManExperience/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02QwW7DIAyGn6V3Qhd12nlpp92mVdkTeOBlNAEibFZVEe8+oI2Ukz8b+/dvWtkenuXT7hWu1Cg97hflA8rli0GNoiNCzjgYN4iTd8QhKhanH3eGABYZQ0k+I8+xlnskH4PCwrlfGzbeJVHElwnstwa5vEenSrn0bPmMwRqiOmDAyqX3UxUqMQk6NFDskKyuci6PUY3IRyAUMJsBGK9wy3NI3M3m4WfFTikfHYs3nCd/s+iq4U1W7qz77rCeUuU/kH+9Lo8P2h66ckpJOK9RXmj/177kn5Xt7kLGNCEvNhZlf4//wrssAXUBAAA=
    Metadata:
      aws:cdk:path: CdkExampleStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efS3Bucket4A27C73C:
    Type: String
    Description: S3 bucket for asset "6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3ef"
  AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efS3VersionKeyD556C9CF:
    Type: String
    Description: S3 key for asset version "6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3ef"
  AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efArtifactHashA0680F71:
    Type: String
    Description: Artifact hash for asset "6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3ef"
  AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eS3Bucket154DDC2C:
    Type: String
    Description: S3 bucket for asset "00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459e"
  AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eS3VersionKey9ABE9969:
    Type: String
    Description: S3 key for asset version "00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459e"
  AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eArtifactHashE2C17498:
    Type: String
    Description: Artifact hash for asset "00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459e"
  AssetParametersbd19f9f57db0bc3b26f4906ca8a3efd22333be529c040a88b3f6162d110ba8d1S3Bucket026ACC0E:
    Type: String
    Description: S3 bucket for asset "bd19f9f57db0bc3b26f4906ca8a3efd22333be529c040a88b3f6162d110ba8d1"
  AssetParametersbd19f9f57db0bc3b26f4906ca8a3efd22333be529c040a88b3f6162d110ba8d1S3VersionKey4713341D:
    Type: String
    Description: S3 key for asset version "bd19f9f57db0bc3b26f4906ca8a3efd22333be529c040a88b3f6162d110ba8d1"
  AssetParametersbd19f9f57db0bc3b26f4906ca8a3efd22333be529c040a88b3f6162d110ba8d1ArtifactHashDE151D91:
    Type: String
    Description: Artifact hash for asset "bd19f9f57db0bc3b26f4906ca8a3efd22333be529c040a88b3f6162d110ba8d1"
  AssetParameters99644ae7ce4a3ff1d05971104e51cdfccf838252114957aa5a1621e1133d6cedS3BucketACD407A0:
    Type: String
    Description: S3 bucket for asset "99644ae7ce4a3ff1d05971104e51cdfccf838252114957aa5a1621e1133d6ced"
  AssetParameters99644ae7ce4a3ff1d05971104e51cdfccf838252114957aa5a1621e1133d6cedS3VersionKeyF7EBA989:
    Type: String
    Description: S3 key for asset version "99644ae7ce4a3ff1d05971104e51cdfccf838252114957aa5a1621e1133d6ced"
  AssetParameters99644ae7ce4a3ff1d05971104e51cdfccf838252114957aa5a1621e1133d6cedArtifactHashE73AE3B8:
    Type: String
    Description: Artifact hash for asset "99644ae7ce4a3ff1d05971104e51cdfccf838252114957aa5a1621e1133d6ced"
Outputs:
  apiEndpoint9349E63C:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: apiC8550315
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: apiDeploymentStagedev96712F43
          - /
  apiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: apiC8550315
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: apiDeploymentStagedev96712F43
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

