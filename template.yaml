Resources:
  UserRegistrationServiceRoleBCB3F31D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistration/ServiceRole/Resource
  UserRegistration1E985772:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efS3Bucket4A27C73C
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efS3VersionKeyD556C9CF
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efS3VersionKeyD556C9CF
      Role:
        Fn::GetAtt:
          - UserRegistrationServiceRoleBCB3F31D
          - Arn
      FunctionName: UserRegistration
      Handler: index.UserRegistrationHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserRegistrationServiceRoleBCB3F31D
    Metadata:
      aws:cdk:path: CdkExampleStack/UserRegistration/Resource
      aws:asset:path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:original-path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UserEmailConfirmServiceRole1A79C4F4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/UserEmailConfirm/ServiceRole/Resource
  UserEmailConfirmB609801E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eS3Bucket154DDC2C
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eS3VersionKey9ABE9969
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eS3VersionKey9ABE9969
      Role:
        Fn::GetAtt:
          - UserEmailConfirmServiceRole1A79C4F4
          - Arn
      FunctionName: userEmail
      Handler: index.handler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserEmailConfirmServiceRole1A79C4F4
    Metadata:
      aws:cdk:path: CdkExampleStack/UserEmailConfirm/Resource
      aws:asset:path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\UserEmailConfirm
      aws:asset:original-path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\UserEmailConfirm
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManTermsAndConditionServiceRole06AE84AC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManTermsAndCondition/ServiceRole/Resource
  WorksManTermsAndCondition66F1F295:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterse9dafdbf831f372c7bc722616535b265081f1ce282323f0bc4a831fa880fa3c9S3Bucket2368B197
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse9dafdbf831f372c7bc722616535b265081f1ce282323f0bc4a831fa880fa3c9S3VersionKey6473F752
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse9dafdbf831f372c7bc722616535b265081f1ce282323f0bc4a831fa880fa3c9S3VersionKey6473F752
      Role:
        Fn::GetAtt:
          - WorksManTermsAndConditionServiceRole06AE84AC
          - Arn
      FunctionName: WorksManTermsAndCondition
      Handler: index.WorksManTermsAndConditionHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManTermsAndConditionServiceRole06AE84AC
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManTermsAndCondition/Resource
      aws:asset:path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:original-path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManExperienceServiceRoleE9A759F2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManExperience/ServiceRole/Resource
  WorksManExperienceAB1A1501:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters707c154691e672584a4c13350756f3c733b5b75fa9fe9f47ef6b6be45cb4bc8fS3Bucket4E185CDA
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters707c154691e672584a4c13350756f3c733b5b75fa9fe9f47ef6b6be45cb4bc8fS3VersionKeyB9B72EE2
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters707c154691e672584a4c13350756f3c733b5b75fa9fe9f47ef6b6be45cb4bc8fS3VersionKeyB9B72EE2
      Role:
        Fn::GetAtt:
          - WorksManExperienceServiceRoleE9A759F2
          - Arn
      FunctionName: WorksManExperience
      Handler: index.WorksManExperienceHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManExperienceServiceRoleE9A759F2
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManExperience/Resource
      aws:asset:path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:original-path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksmanEligibilityServiceRole7623CAF7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksmanEligibility/ServiceRole/Resource
  WorksmanEligibilityC084A00B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters1e9a70a2b6b9ef61e9c3af8967dab0425e49d5f3981299a04d8bee00e669e5a3S3Bucket9250D5F0
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1e9a70a2b6b9ef61e9c3af8967dab0425e49d5f3981299a04d8bee00e669e5a3S3VersionKeyC11D67C2
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1e9a70a2b6b9ef61e9c3af8967dab0425e49d5f3981299a04d8bee00e669e5a3S3VersionKeyC11D67C2
      Role:
        Fn::GetAtt:
          - WorksmanEligibilityServiceRole7623CAF7
          - Arn
      FunctionName: WorksmanEligibility
      Handler: index.WorksmanEligibilityHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksmanEligibilityServiceRole7623CAF7
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksmanEligibility/Resource
      aws:asset:path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksmanEligibility
      aws:asset:original-path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksmanEligibility
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManAddressServiceRole6AF7BDDA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManAddress/ServiceRole/Resource
  WorksManAddressD46FC54C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfa08be9ff10f22d0b0e87d5a1a2a393b407a4015ed0e006a26891a7717932e99S3BucketA99E2AF9
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa08be9ff10f22d0b0e87d5a1a2a393b407a4015ed0e006a26891a7717932e99S3VersionKey751A01C2
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa08be9ff10f22d0b0e87d5a1a2a393b407a4015ed0e006a26891a7717932e99S3VersionKey751A01C2
      Role:
        Fn::GetAtt:
          - WorksManAddressServiceRole6AF7BDDA
          - Arn
      FunctionName: WorksManAddress
      Handler: index.WorksManAddressHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManAddressServiceRole6AF7BDDA
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManAddress/Resource
      aws:asset:path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksManAddress
      aws:asset:original-path: C:\Users\kiran\vrishkar\vk-cleanerportal-ms\functions\WorksManAddress
      aws:asset:is-bundled: false
      aws:asset:property: Code
  StateMachineRoleB840431D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkExampleStack/StateMachine/Role/Resource
  StateMachineRoleDefaultPolicyDF1E6607:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - UserRegistration1E985772
                - Arn
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - UserEmailConfirmB609801E
                - Arn
        Version: "2012-10-17"
      PolicyName: StateMachineRoleDefaultPolicyDF1E6607
      Roles:
        - Ref: StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: CdkExampleStack/StateMachine/Role/DefaultPolicy/Resource
  StateMachine2E01A3A5:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - StateMachineRoleB840431D
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"User Registration","States":{"User Registration":{"Next":"User Email Confirm","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - UserRegistration1E985772
                - Arn
            - '","Payload.$":"$"}},"User Email Confirm":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - UserEmailConfirmB609801E
                - Arn
            - '","Payload.$":"$"}}}}'
    DependsOn:
      - StateMachineRoleDefaultPolicyDF1E6607
      - StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: CdkExampleStack/StateMachine/Resource
  WorksManApi8007FB09:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: User Registration api gateway
      Name: WorksManApi
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Resource
  WorksManApiCloudWatchRole56A20485:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/CloudWatchRole/Resource
  WorksManApiAccount378EFED6:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - WorksManApiCloudWatchRole56A20485
          - Arn
    DependsOn:
      - WorksManApi8007FB09
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Account
  WorksManApiDeployment495969A922755bbaf4de9c5333a205d5d497a06c:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      Description: Automatically created by the RestApi construct
    DependsOn:
      - WorksManApiOPTIONS0DEE16A2
      - WorksManApiWorksmanAddressOPTIONS649D572D
      - WorksManApiWorksmanAddressPOSTD36E61CE
      - WorksManApiWorksmanAddress07F01678
      - WorksManApiworksmanEligibilityOPTIONSA6BEAEA7
      - WorksManApiworksmanEligibilityPOST20A814B3
      - WorksManApiworksmanEligibilityEC278318
      - WorksManApiworksmanExperienceOPTIONSB18854EB
      - WorksManApiworksmanExperiencePOST6823FA26
      - WorksManApiworksmanExperience3919F320
      - WorksManApiWorksmanTermsAndConditionsOPTIONS7A4ACDF9
      - WorksManApiWorksmanTermsAndConditionsPOST661B87E2
      - WorksManApiWorksmanTermsAndConditionsE2AE3179
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Deployment/Resource
  WorksManApiDeploymentStagedev92FAAB21:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      DeploymentId:
        Ref: WorksManApiDeployment495969A922755bbaf4de9c5333a205d5d497a06c
      StageName: dev
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/DeploymentStage.dev/Resource
  WorksManApiOPTIONS0DEE16A2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/OPTIONS/Resource
  WorksManApiWorksmanTermsAndConditionsE2AE3179:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: WorksmanTermsAndConditions
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/WorksmanTermsAndConditions/Resource
  WorksManApiWorksmanTermsAndConditionsOPTIONS7A4ACDF9:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiWorksmanTermsAndConditionsE2AE3179
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/WorksmanTermsAndConditions/OPTIONS/Resource
  WorksManApiWorksmanTermsAndConditionsPOSTApiPermissionCdkExampleStackWorksManApiE5FB0580POSTWorksmanTermsAndConditions4B5910B6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/WorksmanTermsAndConditions
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/ApiPermission.CdkExampleStackWorksManApiE5FB0580.POST..WorksmanTermsAndConditions
  WorksManApiWorksmanTermsAndConditionsPOSTApiPermissionTestCdkExampleStackWorksManApiE5FB0580POSTWorksmanTermsAndConditionsCC36B06C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/WorksmanTermsAndConditions
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/ApiPermission.Test.CdkExampleStackWorksManApiE5FB0580.POST..WorksmanTermsAndConditions
  WorksManApiWorksmanTermsAndConditionsPOST661B87E2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiWorksmanTermsAndConditionsE2AE3179
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: '{"message":"$util.parseJson($input.body)","state":"ok"}'
            StatusCode: "200"
        RequestTemplates:
          application/json: '{"body":"$input.body"}'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManTermsAndCondition66F1F295
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/Resource
  WorksManApiworksmanExperience3919F320:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: worksmanExperience
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/worksmanExperience/Resource
  WorksManApiworksmanExperienceOPTIONSB18854EB:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiworksmanExperience3919F320
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/worksmanExperience/OPTIONS/Resource
  WorksManApiworksmanExperiencePOSTApiPermissionCdkExampleStackWorksManApiE5FB0580POSTworksmanExperienceC0A721D9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/worksmanExperience
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/worksmanExperience/POST/ApiPermission.CdkExampleStackWorksManApiE5FB0580.POST..worksmanExperience
  WorksManApiworksmanExperiencePOSTApiPermissionTestCdkExampleStackWorksManApiE5FB0580POSTworksmanExperienceC9E8D4F8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/worksmanExperience
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/worksmanExperience/POST/ApiPermission.Test.CdkExampleStackWorksManApiE5FB0580.POST..worksmanExperience
  WorksManApiworksmanExperiencePOST6823FA26:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiworksmanExperience3919F320
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: '{"message":"$util.parseJson($input.body)","state":"ok"}'
            StatusCode: "200"
        RequestTemplates:
          application/json: '{"body":"$input.body"}'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManExperienceAB1A1501
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/worksmanExperience/POST/Resource
  WorksManApiworksmanEligibilityEC278318:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: worksmanEligibility
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/worksmanEligibility/Resource
  WorksManApiworksmanEligibilityOPTIONSA6BEAEA7:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiworksmanEligibilityEC278318
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/worksmanEligibility/OPTIONS/Resource
  WorksManApiworksmanEligibilityPOSTApiPermissionCdkExampleStackWorksManApiE5FB0580POSTworksmanEligibilityC4F32EC3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksmanEligibilityC084A00B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/worksmanEligibility
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/worksmanEligibility/POST/ApiPermission.CdkExampleStackWorksManApiE5FB0580.POST..worksmanEligibility
  WorksManApiworksmanEligibilityPOSTApiPermissionTestCdkExampleStackWorksManApiE5FB0580POSTworksmanEligibility09813104:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksmanEligibilityC084A00B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/worksmanEligibility
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/worksmanEligibility/POST/ApiPermission.Test.CdkExampleStackWorksManApiE5FB0580.POST..worksmanEligibility
  WorksManApiworksmanEligibilityPOST20A814B3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiworksmanEligibilityEC278318
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: '{"message":"$util.parseJson($input.body)","state":"ok"}'
            StatusCode: "200"
        RequestTemplates:
          application/json: '{"body":"$input.body"}'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksmanEligibilityC084A00B
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/worksmanEligibility/POST/Resource
  WorksManApiWorksmanAddress07F01678:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: WorksmanAddress
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/WorksmanAddress/Resource
  WorksManApiWorksmanAddressOPTIONS649D572D:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiWorksmanAddress07F01678
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Vary: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Vary: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/WorksmanAddress/OPTIONS/Resource
  WorksManApiWorksmanAddressPOSTApiPermissionCdkExampleStackWorksManApiE5FB0580POSTWorksmanAddress4E7B61DC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManAddressD46FC54C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/WorksmanAddress
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/WorksmanAddress/POST/ApiPermission.CdkExampleStackWorksManApiE5FB0580.POST..WorksmanAddress
  WorksManApiWorksmanAddressPOSTApiPermissionTestCdkExampleStackWorksManApiE5FB0580POSTWorksmanAddressD15299DF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManAddressD46FC54C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/WorksmanAddress
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/WorksmanAddress/POST/ApiPermission.Test.CdkExampleStackWorksManApiE5FB0580.POST..WorksmanAddress
  WorksManApiWorksmanAddressPOSTD36E61CE:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiWorksmanAddress07F01678
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: '{"message":"$util.parseJson($input.body)","state":"ok"}'
            StatusCode: "200"
        RequestTemplates:
          application/json: '{"body":"$input.body"}'
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManAddressD46FC54C
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: CdkExampleStack/WorksManApi/Default/WorksmanAddress/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11R0W6DMAz8lr6HdKjTnkc7TZq0aoh9gRdcmgIJip1WCPHvSzKQ0J5y51zOZyeX+eFZPu1e4UGZqtv9pKxDOX0zqFYURMgBNto04mQNsfOKxeliSnDQI6OL5Mvz4FO5QrLeKYw46GvN2ppZRPOpg/6nBjm9e6NiOWq2uETXa6L0QEMvp8p2ySidpe20GpMuoVnQIYOYj2SKGbg8etUiH4FQEONwWdwpY6CW5GdK8GHutv0nSAMznkFdtUlNtzwMMOgm8AeMIRYSF4Nexl1hoZT1hsUbDp0dezRpHxsW17g6B7BuKoU9I19tHS8XtN3jiud5FsbWKG+0v+cv4eNkvruR1pkLjXWPsvo7fwFJnEc61AEAAA==
    Metadata:
      aws:cdk:path: CdkExampleStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efS3Bucket4A27C73C:
    Type: String
    Description: S3 bucket for asset "6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3ef"
  AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efS3VersionKeyD556C9CF:
    Type: String
    Description: S3 key for asset version "6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3ef"
  AssetParameters6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3efArtifactHashA0680F71:
    Type: String
    Description: Artifact hash for asset "6a90508b1d0f00c0e08edb3204f6418ecefc0b194e927115086625e263e3c3ef"
  AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eS3Bucket154DDC2C:
    Type: String
    Description: S3 bucket for asset "00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459e"
  AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eS3VersionKey9ABE9969:
    Type: String
    Description: S3 key for asset version "00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459e"
  AssetParameters00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459eArtifactHashE2C17498:
    Type: String
    Description: Artifact hash for asset "00b1cc23bd7b5e2aab5f5dab78fb80ff42f837c583cdb5728c83237b5302459e"
  AssetParameterse9dafdbf831f372c7bc722616535b265081f1ce282323f0bc4a831fa880fa3c9S3Bucket2368B197:
    Type: String
    Description: S3 bucket for asset "e9dafdbf831f372c7bc722616535b265081f1ce282323f0bc4a831fa880fa3c9"
  AssetParameterse9dafdbf831f372c7bc722616535b265081f1ce282323f0bc4a831fa880fa3c9S3VersionKey6473F752:
    Type: String
    Description: S3 key for asset version "e9dafdbf831f372c7bc722616535b265081f1ce282323f0bc4a831fa880fa3c9"
  AssetParameterse9dafdbf831f372c7bc722616535b265081f1ce282323f0bc4a831fa880fa3c9ArtifactHashEC3ACDD2:
    Type: String
    Description: Artifact hash for asset "e9dafdbf831f372c7bc722616535b265081f1ce282323f0bc4a831fa880fa3c9"
  AssetParameters707c154691e672584a4c13350756f3c733b5b75fa9fe9f47ef6b6be45cb4bc8fS3Bucket4E185CDA:
    Type: String
    Description: S3 bucket for asset "707c154691e672584a4c13350756f3c733b5b75fa9fe9f47ef6b6be45cb4bc8f"
  AssetParameters707c154691e672584a4c13350756f3c733b5b75fa9fe9f47ef6b6be45cb4bc8fS3VersionKeyB9B72EE2:
    Type: String
    Description: S3 key for asset version "707c154691e672584a4c13350756f3c733b5b75fa9fe9f47ef6b6be45cb4bc8f"
  AssetParameters707c154691e672584a4c13350756f3c733b5b75fa9fe9f47ef6b6be45cb4bc8fArtifactHashDC361B1A:
    Type: String
    Description: Artifact hash for asset "707c154691e672584a4c13350756f3c733b5b75fa9fe9f47ef6b6be45cb4bc8f"
  AssetParameters1e9a70a2b6b9ef61e9c3af8967dab0425e49d5f3981299a04d8bee00e669e5a3S3Bucket9250D5F0:
    Type: String
    Description: S3 bucket for asset "1e9a70a2b6b9ef61e9c3af8967dab0425e49d5f3981299a04d8bee00e669e5a3"
  AssetParameters1e9a70a2b6b9ef61e9c3af8967dab0425e49d5f3981299a04d8bee00e669e5a3S3VersionKeyC11D67C2:
    Type: String
    Description: S3 key for asset version "1e9a70a2b6b9ef61e9c3af8967dab0425e49d5f3981299a04d8bee00e669e5a3"
  AssetParameters1e9a70a2b6b9ef61e9c3af8967dab0425e49d5f3981299a04d8bee00e669e5a3ArtifactHash186BA704:
    Type: String
    Description: Artifact hash for asset "1e9a70a2b6b9ef61e9c3af8967dab0425e49d5f3981299a04d8bee00e669e5a3"
  AssetParametersfa08be9ff10f22d0b0e87d5a1a2a393b407a4015ed0e006a26891a7717932e99S3BucketA99E2AF9:
    Type: String
    Description: S3 bucket for asset "fa08be9ff10f22d0b0e87d5a1a2a393b407a4015ed0e006a26891a7717932e99"
  AssetParametersfa08be9ff10f22d0b0e87d5a1a2a393b407a4015ed0e006a26891a7717932e99S3VersionKey751A01C2:
    Type: String
    Description: S3 key for asset version "fa08be9ff10f22d0b0e87d5a1a2a393b407a4015ed0e006a26891a7717932e99"
  AssetParametersfa08be9ff10f22d0b0e87d5a1a2a393b407a4015ed0e006a26891a7717932e99ArtifactHash1E1EDBBF:
    Type: String
    Description: Artifact hash for asset "fa08be9ff10f22d0b0e87d5a1a2a393b407a4015ed0e006a26891a7717932e99"
Outputs:
  WorksManApiEndpoint06A24561:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksManApi8007FB09
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksManApiDeploymentStagedev92FAAB21
          - /
  apiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksManApi8007FB09
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksManApiDeploymentStagedev92FAAB21
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

