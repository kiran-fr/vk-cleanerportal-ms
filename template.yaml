Resources:
  UserRegistrationServiceRoleBCB3F31D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UserRegistration/ServiceRole/Resource
  UserRegistration1E985772:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters0a0427e814379955e6117178f60aec1c17af514d409affa955127c6bfc2a0f42S3Bucket6EE0F7E6
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0a0427e814379955e6117178f60aec1c17af514d409affa955127c6bfc2a0f42S3VersionKeyBCB9686A
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0a0427e814379955e6117178f60aec1c17af514d409affa955127c6bfc2a0f42S3VersionKeyBCB9686A
      Role:
        Fn::GetAtt:
          - UserRegistrationServiceRoleBCB3F31D
          - Arn
      FunctionName: UserRegistration
      Handler: index.UserRegistrationHanlder
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - UserRegistrationServiceRoleBCB3F31D
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/UserRegistration/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\UserRegistration
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManTermsAndConditionServiceRole06AE84AC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManTermsAndCondition/ServiceRole/Resource
  WorksManTermsAndCondition66F1F295:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersed6ab09e487e78c2c2403f2289a9af5af53cd25bd4d565afee63ff97cd3c04ccS3BucketE5823A65
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersed6ab09e487e78c2c2403f2289a9af5af53cd25bd4d565afee63ff97cd3c04ccS3VersionKeyD24C8684
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersed6ab09e487e78c2c2403f2289a9af5af53cd25bd4d565afee63ff97cd3c04ccS3VersionKeyD24C8684
      Role:
        Fn::GetAtt:
          - WorksManTermsAndConditionServiceRole06AE84AC
          - Arn
      FunctionName: WorksManTermsAndCondition
      Handler: index.WorksManTermsAndConditionHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManTermsAndConditionServiceRole06AE84AC
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManTermsAndCondition/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManTermsAndCondition
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManExperienceServiceRoleE9A759F2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManExperience/ServiceRole/Resource
  WorksManExperienceAB1A1501:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters2f4ca60710fddb8324d3bc88bae5d05acd9b52d82af23c9ce337239fb0570250S3Bucket64045F88
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2f4ca60710fddb8324d3bc88bae5d05acd9b52d82af23c9ce337239fb0570250S3VersionKeyDE1FE1CB
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2f4ca60710fddb8324d3bc88bae5d05acd9b52d82af23c9ce337239fb0570250S3VersionKeyDE1FE1CB
      Role:
        Fn::GetAtt:
          - WorksManExperienceServiceRoleE9A759F2
          - Arn
      FunctionName: WorksManExperience
      Handler: index.WorksManExperienceHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - WorksManExperienceServiceRoleE9A759F2
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManExperience/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\WorksManExperience
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetWorksmanAccountRegistartionStatus/ServiceRole/Resource
  GetWorksmanAccountRegistartionStatusA28FB6DA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters96e2ef54e907327d535ea36eae66494af1f93d8a9a5da75f7846d8cb2af94ffcS3Bucket33F82CB6
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters96e2ef54e907327d535ea36eae66494af1f93d8a9a5da75f7846d8cb2af94ffcS3VersionKeyF3F5A7E3
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters96e2ef54e907327d535ea36eae66494af1f93d8a9a5da75f7846d8cb2af94ffcS3VersionKeyF3F5A7E3
      Role:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2
          - Arn
      FunctionName: GetWorksmanAccountRegistartionStatus
      Handler: index.GetWorksmanAccountRegistartionStatusHandler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 35
    DependsOn:
      - GetWorksmanAccountRegistartionStatusServiceRole6BD0E8C2
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/GetWorksmanAccountRegistartionStatus/Resource
      aws:asset:path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanAccountRegistartionStatus
      aws:asset:original-path: C:\Users\Lenovo\vrishkar\vk-cleanerportal-ms\functions\GetWorksmanAccountRegistartionStatus
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorksManApi8007FB09:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: User Registration api gateway
      Name: WorksManApi
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Resource
  WorksManApiCloudWatchRole56A20485:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/CloudWatchRole/Resource
  WorksManApiAccount378EFED6:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - WorksManApiCloudWatchRole56A20485
          - Arn
    DependsOn:
      - WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Account
  WorksManApiDeployment495969A97f030b29b489cb73cb8d26b1fbc28d81:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      Description: Automatically created by the RestApi construct
    DependsOn:
      - WorksManApiGetWorksmanAccountRegistartionStatusGET88BE1ED8
      - WorksManApiGetWorksmanAccountRegistartionStatusOPTIONSDC172552
      - WorksManApiGetWorksmanAccountRegistartionStatus10A258AF
      - WorksManApiOPTIONS0DEE16A2
      - WorksManApiworksmanExperienceOPTIONSB18854EB
      - WorksManApiworksmanExperiencePOST6823FA26
      - WorksManApiworksmanExperience3919F320
      - WorksManApiWorksmanTermsAndConditionsOPTIONS7A4ACDF9
      - WorksManApiWorksmanTermsAndConditionsPOST661B87E2
      - WorksManApiWorksmanTermsAndConditionsE2AE3179
      - WorksManApiErrorResponseModelB8540664
      - WorksManApiResponseModelAA7D6EB5
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Deployment/Resource
  WorksManApiDeploymentStagedev92FAAB21:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      DeploymentId:
        Ref: WorksManApiDeployment495969A97f030b29b489cb73cb8d26b1fbc28d81
      StageName: dev
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/DeploymentStage.dev/Resource
  WorksManApiOPTIONS0DEE16A2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/OPTIONS/Resource
  WorksManApiWorksmanTermsAndConditionsE2AE3179:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: WorksmanTermsAndConditions
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/Resource
  WorksManApiWorksmanTermsAndConditionsOPTIONS7A4ACDF9:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiWorksmanTermsAndConditionsE2AE3179
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/OPTIONS/Resource
  WorksManApiWorksmanTermsAndConditionsPOSTApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1POSTWorksmanTermsAndConditions5D26E080:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/WorksmanTermsAndConditions
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..WorksmanTermsAndConditions
  WorksManApiWorksmanTermsAndConditionsPOSTApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1POSTWorksmanTermsAndConditionsFEC34F37:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManTermsAndCondition66F1F295
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/WorksmanTermsAndConditions
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..WorksmanTermsAndConditions
  WorksManApiWorksmanTermsAndConditionsPOST661B87E2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiWorksmanTermsAndConditionsE2AE3179
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            StatusCode: "200"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManTermsAndCondition66F1F295
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/WorksmanTermsAndConditions/POST/Resource
  WorksManApiworksmanExperience3919F320:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: worksmanExperience
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperience/Resource
  WorksManApiworksmanExperienceOPTIONSB18854EB:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiworksmanExperience3919F320
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperience/OPTIONS/Resource
  WorksManApiworksmanExperiencePOSTApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1POSTworksmanExperience7748F5FE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /POST/worksmanExperience
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperience/POST/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..worksmanExperience
  WorksManApiworksmanExperiencePOSTApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1POSTworksmanExperience1C3399F8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorksManExperienceAB1A1501
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/POST/worksmanExperience
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperience/POST/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.POST..worksmanExperience
  WorksManApiworksmanExperiencePOST6823FA26:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: WorksManApiworksmanExperience3919F320
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            StatusCode: "200"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorksManExperienceAB1A1501
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/worksmanExperience/POST/Resource
  WorksManApiGetWorksmanAccountRegistartionStatus10A258AF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WorksManApi8007FB09
          - RootResourceId
      PathPart: GetWorksmanAccountRegistartionStatus
      RestApiId:
        Ref: WorksManApi8007FB09
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetWorksmanAccountRegistartionStatus/Resource
  WorksManApiGetWorksmanAccountRegistartionStatusOPTIONSDC172552:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: WorksManApiGetWorksmanAccountRegistartionStatus10A258AF
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,worksmanIdHeader'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetWorksmanAccountRegistartionStatus/OPTIONS/Resource
  WorksManApiGetWorksmanAccountRegistartionStatusGETApiPermissionVrishkarServicesDevStackWorksManApi5F03F3C1GETGetWorksmanAccountRegistartionStatus8CB4BA12:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusA28FB6DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /
            - Ref: WorksManApiDeploymentStagedev92FAAB21
            - /GET/GetWorksmanAccountRegistartionStatus
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetWorksmanAccountRegistartionStatus/GET/ApiPermission.VrishkarServicesDevStackWorksManApi5F03F3C1.GET..GetWorksmanAccountRegistartionStatus
  WorksManApiGetWorksmanAccountRegistartionStatusGETApiPermissionTestVrishkarServicesDevStackWorksManApi5F03F3C1GETGetWorksmanAccountRegistartionStatusC6E1D7E7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetWorksmanAccountRegistartionStatusA28FB6DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WorksManApi8007FB09
            - /test-invoke-stage/GET/GetWorksmanAccountRegistartionStatus
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetWorksmanAccountRegistartionStatus/GET/ApiPermission.Test.VrishkarServicesDevStackWorksManApi5F03F3C1.GET..GetWorksmanAccountRegistartionStatus
  WorksManApiGetWorksmanAccountRegistartionStatusGET88BE1ED8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: WorksManApiGetWorksmanAccountRegistartionStatus10A258AF
      RestApiId:
        Ref: WorksManApi8007FB09
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: '{"state":"ok","data":"$util.escapeJavaScript($input.body)"}'
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: |-
              (
              |.)+
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.worksmanId: method.request.querystring.worksmanId
          integration.request.header.worksmanIdHeader: method.request.header.worksmanIdHeader
        RequestTemplates:
          application/json: "{\"worksmanId\":\"$util.escapeJavaScript($input.params('worksmanId'))\",\"worksmanIdHeader\":\"$util.escapeJavaScript($input.params('worksmanIdHeader'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetWorksmanAccountRegistartionStatusA28FB6DA
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: WorksManApiResponseModelAA7D6EB5
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseModels:
            application/json:
              Ref: WorksManApiErrorResponseModelB8540664
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.worksmanId: true
        method.request.header.worksmanIdHeader: true
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/Default/GetWorksmanAccountRegistartionStatus/GET/Resource
  WorksManApiResponseModelAA7D6EB5:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: ResponseModel
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: pollResponse
        type: object
        properties:
          state:
            type: string
          greeting:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/ResponseModel/Resource
  WorksManApiErrorResponseModelB8540664:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: WorksManApi8007FB09
      ContentType: application/json
      Name: ErrorResponseModel
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: errorResponse
        type: object
        properties:
          state:
            type: string
          message:
            type: string
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/WorksManApi/ErrorResponseModel/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02QwW7DIAyGn6V3Qhd12nlpp92qVdkTeOBlNAEibFZVEe8+oO2Ukz8b+/dvWtnunuXT5hUu1Cg9bhflA8rlk0GNoiNCzjgYN4iDd8QhKhaHb3eCABYZQ0k+Is+xlnskH4PCwrlfGzbeJVHElwnslwa5vEenSrn0rPmEwRqiOmDAyqX3UxUqMQnaNVDskKyuci73UY3IeyAUMJsBGC9wzXNI3M3m7ueBnVI+OhZvOE/+atFVw6us3Fn33eBxSpU/Iv94XR7vtD70n49e41SbCqSUhMsgz7T9bV/yR8t2cyZjmpB9GIuyv8U/N6tnroQBAAA=
    Metadata:
      aws:cdk:path: VrishkarServicesDevStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters0a0427e814379955e6117178f60aec1c17af514d409affa955127c6bfc2a0f42S3Bucket6EE0F7E6:
    Type: String
    Description: S3 bucket for asset "0a0427e814379955e6117178f60aec1c17af514d409affa955127c6bfc2a0f42"
  AssetParameters0a0427e814379955e6117178f60aec1c17af514d409affa955127c6bfc2a0f42S3VersionKeyBCB9686A:
    Type: String
    Description: S3 key for asset version "0a0427e814379955e6117178f60aec1c17af514d409affa955127c6bfc2a0f42"
  AssetParameters0a0427e814379955e6117178f60aec1c17af514d409affa955127c6bfc2a0f42ArtifactHash1F236BC8:
    Type: String
    Description: Artifact hash for asset "0a0427e814379955e6117178f60aec1c17af514d409affa955127c6bfc2a0f42"
  AssetParametersed6ab09e487e78c2c2403f2289a9af5af53cd25bd4d565afee63ff97cd3c04ccS3BucketE5823A65:
    Type: String
    Description: S3 bucket for asset "ed6ab09e487e78c2c2403f2289a9af5af53cd25bd4d565afee63ff97cd3c04cc"
  AssetParametersed6ab09e487e78c2c2403f2289a9af5af53cd25bd4d565afee63ff97cd3c04ccS3VersionKeyD24C8684:
    Type: String
    Description: S3 key for asset version "ed6ab09e487e78c2c2403f2289a9af5af53cd25bd4d565afee63ff97cd3c04cc"
  AssetParametersed6ab09e487e78c2c2403f2289a9af5af53cd25bd4d565afee63ff97cd3c04ccArtifactHash5D02EC78:
    Type: String
    Description: Artifact hash for asset "ed6ab09e487e78c2c2403f2289a9af5af53cd25bd4d565afee63ff97cd3c04cc"
  AssetParameters2f4ca60710fddb8324d3bc88bae5d05acd9b52d82af23c9ce337239fb0570250S3Bucket64045F88:
    Type: String
    Description: S3 bucket for asset "2f4ca60710fddb8324d3bc88bae5d05acd9b52d82af23c9ce337239fb0570250"
  AssetParameters2f4ca60710fddb8324d3bc88bae5d05acd9b52d82af23c9ce337239fb0570250S3VersionKeyDE1FE1CB:
    Type: String
    Description: S3 key for asset version "2f4ca60710fddb8324d3bc88bae5d05acd9b52d82af23c9ce337239fb0570250"
  AssetParameters2f4ca60710fddb8324d3bc88bae5d05acd9b52d82af23c9ce337239fb0570250ArtifactHash18681DDD:
    Type: String
    Description: Artifact hash for asset "2f4ca60710fddb8324d3bc88bae5d05acd9b52d82af23c9ce337239fb0570250"
  AssetParameters96e2ef54e907327d535ea36eae66494af1f93d8a9a5da75f7846d8cb2af94ffcS3Bucket33F82CB6:
    Type: String
    Description: S3 bucket for asset "96e2ef54e907327d535ea36eae66494af1f93d8a9a5da75f7846d8cb2af94ffc"
  AssetParameters96e2ef54e907327d535ea36eae66494af1f93d8a9a5da75f7846d8cb2af94ffcS3VersionKeyF3F5A7E3:
    Type: String
    Description: S3 key for asset version "96e2ef54e907327d535ea36eae66494af1f93d8a9a5da75f7846d8cb2af94ffc"
  AssetParameters96e2ef54e907327d535ea36eae66494af1f93d8a9a5da75f7846d8cb2af94ffcArtifactHash6040F836:
    Type: String
    Description: Artifact hash for asset "96e2ef54e907327d535ea36eae66494af1f93d8a9a5da75f7846d8cb2af94ffc"
Outputs:
  WorksManApiEndpoint06A24561:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksManApi8007FB09
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksManApiDeploymentStagedev92FAAB21
          - /
  apiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WorksManApi8007FB09
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WorksManApiDeploymentStagedev92FAAB21
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

