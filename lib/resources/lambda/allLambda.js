"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetWorksmanjobsLambda = exports.WorksmanjobsCreateLambda = exports.GetWorksmanSchedulesLambda = exports.DeleteWorkmanScheduleLambda = exports.WorksmnaScheduleLambda = exports.DeletePostcodesLambda = exports.GetAllPostcodesLambda = exports.UserPostCodesLambda = exports.UpdateWorksmanDetailsLambda = exports.GetWorkmanDetailsLambda = exports.getAllMobileNumberLambda = exports.PostTestUserLambda = exports.GetTestUserLambda = exports.GetWorksmanAccountRegistartionStatusLambda = exports.WorksManExperienceLambda = exports.WorksManTermsAndConditionLambda = exports.UserRegistrationLambda = void 0;
const cdk = require("@aws-cdk/core");
const lambda = require("@aws-cdk/aws-lambda");
exports.UserRegistrationLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/UserRegistration'),
        functionName: 'UserRegistration',
        handler: 'index.UserRegistrationHanlder',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(15)
    };
};
exports.WorksManTermsAndConditionLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/WorksManTermsAndCondition'),
        functionName: 'WorksManTermsAndCondition',
        handler: 'index.WorksManTermsAndConditionHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(15)
    };
};
exports.WorksManExperienceLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/WorksManExperience'),
        functionName: 'WorksManExperience',
        handler: 'index.WorksManExperienceHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(15)
    };
};
exports.GetWorksmanAccountRegistartionStatusLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/GetWorksmanAccountRegistartionStatus'),
        functionName: 'GetWorksmanAccountRegistartionStatus',
        handler: 'index.GetWorksmanAccountRegistartionStatusHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.GetTestUserLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/GetTestUser'),
        functionName: 'GetTestUser',
        handler: 'index.handler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.PostTestUserLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/GetPostTestUser'),
        functionName: 'PostTestUser',
        handler: 'index.handler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.getAllMobileNumberLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/userEmailError'),
        functionName: 'getAllMobileNumbers',
        handler: 'index.getAllMobileNumbersHanlder',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.GetWorkmanDetailsLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/GetWorksmanDetails'),
        functionName: 'GetWorkmanDetailsFun',
        handler: 'index.GetWorksmanDetailsHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.UpdateWorksmanDetailsLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/UpdateWorksmanDetails'),
        functionName: 'UpdateWorksmanDetailsFun',
        handler: 'index.UpdateWorksmanDetailsHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.UserPostCodesLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/UserPostCodes'),
        functionName: 'UserPostCodesFun',
        handler: 'index.UserPostCodesHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.GetAllPostcodesLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/GetAllPostcodes'),
        functionName: 'GetAllPostcodesFun',
        handler: 'index.GetAllPostcodesHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.DeletePostcodesLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/DeletePostcodes'),
        functionName: 'DeletePostcodesFun',
        handler: 'index.DeletePostcodesHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.WorksmnaScheduleLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/WorksmnaSchedule'),
        functionName: 'WorksmnaScheduleFun',
        handler: 'index.WorksmnaScheduleHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.DeleteWorkmanScheduleLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/DeleteWorkmanSchedule'),
        functionName: 'DeleteWorkmanScheduleFun',
        handler: 'index.DeleteWorkmanScheduleHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.GetWorksmanSchedulesLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/GetWorksmanSchedules'),
        functionName: 'GetWorksmanSchedulesFun',
        handler: 'index.GetWorksmanSchedulesHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.WorksmanjobsCreateLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/WorksmanjobsCreate'),
        functionName: 'WorksmanjobsCreateFun',
        handler: 'index.WorksmanjobsCreateHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
exports.GetWorksmanjobsLambda = () => {
    return {
        code: lambda.Code.fromAsset('./functions/GetWorksmanjobs'),
        functionName: 'GetWorksmanjobsFun',
        handler: 'index.GetWorksmanjobsHandler',
        memorySize: 1024,
        runtime: lambda.Runtime.NODEJS_14_X,
        timeout: cdk.Duration.seconds(35)
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxsTGFtYmRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYWxsTGFtYmRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHFDQUFxQztBQUNyQyw4Q0FBOEM7QUFFakMsUUFBQSxzQkFBc0IsR0FBRyxHQUFHLEVBQUU7SUFDekMsT0FBTztRQUNMLElBQUksRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyw4QkFBOEIsQ0FBQztRQUMzRCxZQUFZLEVBQUUsa0JBQWtCO1FBQ2hDLE9BQU8sRUFBRSwrQkFBK0I7UUFDeEMsVUFBVSxFQUFFLElBQUk7UUFDaEIsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVztRQUNuQyxPQUFPLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO0tBQ2xDLENBQUE7QUFDSCxDQUFDLENBQUE7QUFFWSxRQUFBLCtCQUErQixHQUFHLEdBQUcsRUFBRTtJQUNsRCxPQUFPO1FBQ0wsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLHVDQUF1QyxDQUFDO1FBQ3BFLFlBQVksRUFBRSwyQkFBMkI7UUFDekMsT0FBTyxFQUFFLHdDQUF3QztRQUNqRCxVQUFVLEVBQUUsSUFBSTtRQUNoQixPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXO1FBQ25DLE9BQU8sRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7S0FDbEMsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUVZLFFBQUEsd0JBQXdCLEdBQUcsR0FBRyxFQUFFO0lBQzNDLE9BQU87UUFDTCxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsZ0NBQWdDLENBQUM7UUFDN0QsWUFBWSxFQUFFLG9CQUFvQjtRQUNsQyxPQUFPLEVBQUUsaUNBQWlDO1FBQzFDLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVc7UUFDbkMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztLQUNsQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBRVksUUFBQSwwQ0FBMEMsR0FBRyxHQUFHLEVBQUU7SUFDN0QsT0FBTztRQUNMLElBQUksRUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrREFBa0QsQ0FBQztRQUM5RSxZQUFZLEVBQUMsc0NBQXNDO1FBQ25ELE9BQU8sRUFBQyxtREFBbUQ7UUFDM0QsVUFBVSxFQUFFLElBQUk7UUFDaEIsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVztRQUNuQyxPQUFPLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO0tBQ2xDLENBQUE7QUFDSCxDQUFDLENBQUE7QUFHWSxRQUFBLGlCQUFpQixHQUFHLEdBQUcsRUFBRTtJQUNwQyxPQUFPO1FBQ0wsSUFBSSxFQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLHlCQUF5QixDQUFDO1FBQ3JELFlBQVksRUFBQyxhQUFhO1FBQzFCLE9BQU8sRUFBQyxlQUFlO1FBQ3ZCLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVc7UUFDbkMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztLQUNsQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBRVksUUFBQSxrQkFBa0IsR0FBRyxHQUFHLEVBQUU7SUFDckMsT0FBTztRQUNMLElBQUksRUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyw2QkFBNkIsQ0FBQztRQUN6RCxZQUFZLEVBQUMsY0FBYztRQUMzQixPQUFPLEVBQUMsZUFBZTtRQUN2QixVQUFVLEVBQUUsSUFBSTtRQUNoQixPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXO1FBQ25DLE9BQU8sRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7S0FDbEMsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUdZLFFBQUEsd0JBQXdCLEdBQUcsR0FBRyxFQUFFO0lBQzNDLE9BQU87UUFDTCxJQUFJLEVBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsNEJBQTRCLENBQUM7UUFDeEQsWUFBWSxFQUFDLHFCQUFxQjtRQUNsQyxPQUFPLEVBQUMsa0NBQWtDO1FBQzFDLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVc7UUFDbkMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztLQUNsQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBRVksUUFBQSx1QkFBdUIsR0FBRyxHQUFHLEVBQUU7SUFDMUMsT0FBTztRQUNMLElBQUksRUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQ0FBZ0MsQ0FBQztRQUM1RCxZQUFZLEVBQUMsc0JBQXNCO1FBQ25DLE9BQU8sRUFBQyxpQ0FBaUM7UUFDekMsVUFBVSxFQUFFLElBQUk7UUFDaEIsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVztRQUNuQyxPQUFPLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO0tBQ2xDLENBQUE7QUFDSCxDQUFDLENBQUE7QUFDWSxRQUFBLDJCQUEyQixHQUFHLEdBQUcsRUFBRTtJQUM5QyxPQUFPO1FBQ0wsSUFBSSxFQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLG1DQUFtQyxDQUFDO1FBQy9ELFlBQVksRUFBQywwQkFBMEI7UUFDdkMsT0FBTyxFQUFDLG9DQUFvQztRQUM1QyxVQUFVLEVBQUUsSUFBSTtRQUNoQixPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXO1FBQ25DLE9BQU8sRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7S0FDbEMsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUNZLFFBQUEsbUJBQW1CLEdBQUcsR0FBRyxFQUFFO0lBQ3RDLE9BQU87UUFDTCxJQUFJLEVBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsMkJBQTJCLENBQUM7UUFDdkQsWUFBWSxFQUFDLGtCQUFrQjtRQUMvQixPQUFPLEVBQUMsNEJBQTRCO1FBQ3BDLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVc7UUFDbkMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztLQUNsQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBQ1ksUUFBQSxxQkFBcUIsR0FBRyxHQUFHLEVBQUU7SUFDeEMsT0FBTztRQUNMLElBQUksRUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyw2QkFBNkIsQ0FBQztRQUN6RCxZQUFZLEVBQUMsb0JBQW9CO1FBQ2pDLE9BQU8sRUFBQyw4QkFBOEI7UUFDdEMsVUFBVSxFQUFFLElBQUk7UUFDaEIsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVztRQUNuQyxPQUFPLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO0tBQ2xDLENBQUE7QUFDSCxDQUFDLENBQUE7QUFDWSxRQUFBLHFCQUFxQixHQUFHLEdBQUcsRUFBRTtJQUN4QyxPQUFPO1FBQ0wsSUFBSSxFQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLDZCQUE2QixDQUFDO1FBQ3pELFlBQVksRUFBQyxvQkFBb0I7UUFDakMsT0FBTyxFQUFDLDhCQUE4QjtRQUN0QyxVQUFVLEVBQUUsSUFBSTtRQUNoQixPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXO1FBQ25DLE9BQU8sRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7S0FDbEMsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUNZLFFBQUEsc0JBQXNCLEdBQUcsR0FBRyxFQUFFO0lBQ3pDLE9BQU87UUFDTCxJQUFJLEVBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsOEJBQThCLENBQUM7UUFDMUQsWUFBWSxFQUFDLHFCQUFxQjtRQUNsQyxPQUFPLEVBQUMsK0JBQStCO1FBQ3ZDLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVc7UUFDbkMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztLQUNsQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBQ1ksUUFBQSwyQkFBMkIsR0FBRyxHQUFHLEVBQUU7SUFDOUMsT0FBTztRQUNMLElBQUksRUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxtQ0FBbUMsQ0FBQztRQUMvRCxZQUFZLEVBQUMsMEJBQTBCO1FBQ3ZDLE9BQU8sRUFBQyxvQ0FBb0M7UUFDNUMsVUFBVSxFQUFFLElBQUk7UUFDaEIsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVztRQUNuQyxPQUFPLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO0tBQ2xDLENBQUE7QUFDSCxDQUFDLENBQUE7QUFDWSxRQUFBLDBCQUEwQixHQUFHLEdBQUcsRUFBRTtJQUM3QyxPQUFPO1FBQ0wsSUFBSSxFQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGtDQUFrQyxDQUFDO1FBQzlELFlBQVksRUFBQyx5QkFBeUI7UUFDdEMsT0FBTyxFQUFDLG1DQUFtQztRQUMzQyxVQUFVLEVBQUUsSUFBSTtRQUNoQixPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXO1FBQ25DLE9BQU8sRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7S0FDbEMsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUNZLFFBQUEsd0JBQXdCLEdBQUcsR0FBRyxFQUFFO0lBQzNDLE9BQU87UUFDTCxJQUFJLEVBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsZ0NBQWdDLENBQUM7UUFDNUQsWUFBWSxFQUFDLHVCQUF1QjtRQUNwQyxPQUFPLEVBQUMsaUNBQWlDO1FBQ3pDLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVc7UUFDbkMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztLQUNsQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBQ1ksUUFBQSxxQkFBcUIsR0FBRyxHQUFHLEVBQUU7SUFDeEMsT0FBTztRQUNMLElBQUksRUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyw2QkFBNkIsQ0FBQztRQUN6RCxZQUFZLEVBQUMsb0JBQW9CO1FBQ2pDLE9BQU8sRUFBQyw4QkFBOEI7UUFDdEMsVUFBVSxFQUFFLElBQUk7UUFDaEIsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVztRQUNuQyxPQUFPLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO0tBQ2xDLENBQUE7QUFDSCxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjZGsgZnJvbSAnQGF3cy1jZGsvY29yZSc7XHJcbmltcG9ydCAqIGFzIGxhbWJkYSBmcm9tICdAYXdzLWNkay9hd3MtbGFtYmRhJztcclxuXHJcbmV4cG9ydCBjb25zdCBVc2VyUmVnaXN0cmF0aW9uTGFtYmRhID0gKCkgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBjb2RlOiBsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL1VzZXJSZWdpc3RyYXRpb24nKSxcclxuICAgIGZ1bmN0aW9uTmFtZTogJ1VzZXJSZWdpc3RyYXRpb24nLFxyXG4gICAgaGFuZGxlcjogJ2luZGV4LlVzZXJSZWdpc3RyYXRpb25IYW5sZGVyJyxcclxuICAgIG1lbW9yeVNpemU6IDEwMjQsXHJcbiAgICBydW50aW1lOiBsYW1iZGEuUnVudGltZS5OT0RFSlNfMTRfWCxcclxuICAgIHRpbWVvdXQ6IGNkay5EdXJhdGlvbi5zZWNvbmRzKDE1KVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFdvcmtzTWFuVGVybXNBbmRDb25kaXRpb25MYW1iZGEgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIGNvZGU6IGxhbWJkYS5Db2RlLmZyb21Bc3NldCgnLi9mdW5jdGlvbnMvV29ya3NNYW5UZXJtc0FuZENvbmRpdGlvbicpLFxyXG4gICAgZnVuY3Rpb25OYW1lOiAnV29ya3NNYW5UZXJtc0FuZENvbmRpdGlvbicsXHJcbiAgICBoYW5kbGVyOiAnaW5kZXguV29ya3NNYW5UZXJtc0FuZENvbmRpdGlvbkhhbmRsZXInLFxyXG4gICAgbWVtb3J5U2l6ZTogMTAyNCxcclxuICAgIHJ1bnRpbWU6IGxhbWJkYS5SdW50aW1lLk5PREVKU18xNF9YLFxyXG4gICAgdGltZW91dDogY2RrLkR1cmF0aW9uLnNlY29uZHMoMTUpXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgV29ya3NNYW5FeHBlcmllbmNlTGFtYmRhID0gKCkgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBjb2RlOiBsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL1dvcmtzTWFuRXhwZXJpZW5jZScpLFxyXG4gICAgZnVuY3Rpb25OYW1lOiAnV29ya3NNYW5FeHBlcmllbmNlJyxcclxuICAgIGhhbmRsZXI6ICdpbmRleC5Xb3Jrc01hbkV4cGVyaWVuY2VIYW5kbGVyJyxcclxuICAgIG1lbW9yeVNpemU6IDEwMjQsXHJcbiAgICBydW50aW1lOiBsYW1iZGEuUnVudGltZS5OT0RFSlNfMTRfWCxcclxuICAgIHRpbWVvdXQ6IGNkay5EdXJhdGlvbi5zZWNvbmRzKDE1KVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEdldFdvcmtzbWFuQWNjb3VudFJlZ2lzdGFydGlvblN0YXR1c0xhbWJkYSA9ICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgY29kZTpsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL0dldFdvcmtzbWFuQWNjb3VudFJlZ2lzdGFydGlvblN0YXR1cycpLFxyXG4gICAgZnVuY3Rpb25OYW1lOidHZXRXb3Jrc21hbkFjY291bnRSZWdpc3RhcnRpb25TdGF0dXMnLFxyXG4gICAgaGFuZGxlcjonaW5kZXguR2V0V29ya3NtYW5BY2NvdW50UmVnaXN0YXJ0aW9uU3RhdHVzSGFuZGxlcicsXHJcbiAgICBtZW1vcnlTaXplOiAxMDI0LFxyXG4gICAgcnVudGltZTogbGFtYmRhLlJ1bnRpbWUuTk9ERUpTXzE0X1gsXHJcbiAgICB0aW1lb3V0OiBjZGsuRHVyYXRpb24uc2Vjb25kcygzNSlcclxuICB9XHJcbn1cclxuXHJcblxyXG5leHBvcnQgY29uc3QgR2V0VGVzdFVzZXJMYW1iZGEgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIGNvZGU6bGFtYmRhLkNvZGUuZnJvbUFzc2V0KCcuL2Z1bmN0aW9ucy9HZXRUZXN0VXNlcicpLFxyXG4gICAgZnVuY3Rpb25OYW1lOidHZXRUZXN0VXNlcicsXHJcbiAgICBoYW5kbGVyOidpbmRleC5oYW5kbGVyJyxcclxuICAgIG1lbW9yeVNpemU6IDEwMjQsXHJcbiAgICBydW50aW1lOiBsYW1iZGEuUnVudGltZS5OT0RFSlNfMTRfWCxcclxuICAgIHRpbWVvdXQ6IGNkay5EdXJhdGlvbi5zZWNvbmRzKDM1KVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFBvc3RUZXN0VXNlckxhbWJkYSA9ICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgY29kZTpsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL0dldFBvc3RUZXN0VXNlcicpLFxyXG4gICAgZnVuY3Rpb25OYW1lOidQb3N0VGVzdFVzZXInLFxyXG4gICAgaGFuZGxlcjonaW5kZXguaGFuZGxlcicsXHJcbiAgICBtZW1vcnlTaXplOiAxMDI0LFxyXG4gICAgcnVudGltZTogbGFtYmRhLlJ1bnRpbWUuTk9ERUpTXzE0X1gsXHJcbiAgICB0aW1lb3V0OiBjZGsuRHVyYXRpb24uc2Vjb25kcygzNSlcclxuICB9XHJcbn1cclxuXHJcblxyXG5leHBvcnQgY29uc3QgZ2V0QWxsTW9iaWxlTnVtYmVyTGFtYmRhID0gKCkgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBjb2RlOmxhbWJkYS5Db2RlLmZyb21Bc3NldCgnLi9mdW5jdGlvbnMvdXNlckVtYWlsRXJyb3InKSxcclxuICAgIGZ1bmN0aW9uTmFtZTonZ2V0QWxsTW9iaWxlTnVtYmVycycsXHJcbiAgICBoYW5kbGVyOidpbmRleC5nZXRBbGxNb2JpbGVOdW1iZXJzSGFubGRlcicsXHJcbiAgICBtZW1vcnlTaXplOiAxMDI0LFxyXG4gICAgcnVudGltZTogbGFtYmRhLlJ1bnRpbWUuTk9ERUpTXzE0X1gsXHJcbiAgICB0aW1lb3V0OiBjZGsuRHVyYXRpb24uc2Vjb25kcygzNSlcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBHZXRXb3JrbWFuRGV0YWlsc0xhbWJkYSA9ICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgY29kZTpsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL0dldFdvcmtzbWFuRGV0YWlscycpLFxyXG4gICAgZnVuY3Rpb25OYW1lOidHZXRXb3JrbWFuRGV0YWlsc0Z1bicsXHJcbiAgICBoYW5kbGVyOidpbmRleC5HZXRXb3Jrc21hbkRldGFpbHNIYW5kbGVyJyxcclxuICAgIG1lbW9yeVNpemU6IDEwMjQsXHJcbiAgICBydW50aW1lOiBsYW1iZGEuUnVudGltZS5OT0RFSlNfMTRfWCxcclxuICAgIHRpbWVvdXQ6IGNkay5EdXJhdGlvbi5zZWNvbmRzKDM1KVxyXG4gIH1cclxufVxyXG5leHBvcnQgY29uc3QgVXBkYXRlV29ya3NtYW5EZXRhaWxzTGFtYmRhID0gKCkgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBjb2RlOmxhbWJkYS5Db2RlLmZyb21Bc3NldCgnLi9mdW5jdGlvbnMvVXBkYXRlV29ya3NtYW5EZXRhaWxzJyksXHJcbiAgICBmdW5jdGlvbk5hbWU6J1VwZGF0ZVdvcmtzbWFuRGV0YWlsc0Z1bicsXHJcbiAgICBoYW5kbGVyOidpbmRleC5VcGRhdGVXb3Jrc21hbkRldGFpbHNIYW5kbGVyJyxcclxuICAgIG1lbW9yeVNpemU6IDEwMjQsXHJcbiAgICBydW50aW1lOiBsYW1iZGEuUnVudGltZS5OT0RFSlNfMTRfWCxcclxuICAgIHRpbWVvdXQ6IGNkay5EdXJhdGlvbi5zZWNvbmRzKDM1KVxyXG4gIH1cclxufVxyXG5leHBvcnQgY29uc3QgVXNlclBvc3RDb2Rlc0xhbWJkYSA9ICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgY29kZTpsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL1VzZXJQb3N0Q29kZXMnKSxcclxuICAgIGZ1bmN0aW9uTmFtZTonVXNlclBvc3RDb2Rlc0Z1bicsXHJcbiAgICBoYW5kbGVyOidpbmRleC5Vc2VyUG9zdENvZGVzSGFuZGxlcicsXHJcbiAgICBtZW1vcnlTaXplOiAxMDI0LFxyXG4gICAgcnVudGltZTogbGFtYmRhLlJ1bnRpbWUuTk9ERUpTXzE0X1gsXHJcbiAgICB0aW1lb3V0OiBjZGsuRHVyYXRpb24uc2Vjb25kcygzNSlcclxuICB9XHJcbn1cclxuZXhwb3J0IGNvbnN0IEdldEFsbFBvc3Rjb2Rlc0xhbWJkYSA9ICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgY29kZTpsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL0dldEFsbFBvc3Rjb2RlcycpLFxyXG4gICAgZnVuY3Rpb25OYW1lOidHZXRBbGxQb3N0Y29kZXNGdW4nLFxyXG4gICAgaGFuZGxlcjonaW5kZXguR2V0QWxsUG9zdGNvZGVzSGFuZGxlcicsXHJcbiAgICBtZW1vcnlTaXplOiAxMDI0LFxyXG4gICAgcnVudGltZTogbGFtYmRhLlJ1bnRpbWUuTk9ERUpTXzE0X1gsXHJcbiAgICB0aW1lb3V0OiBjZGsuRHVyYXRpb24uc2Vjb25kcygzNSlcclxuICB9XHJcbn1cclxuZXhwb3J0IGNvbnN0IERlbGV0ZVBvc3Rjb2Rlc0xhbWJkYSA9ICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgY29kZTpsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL0RlbGV0ZVBvc3Rjb2RlcycpLFxyXG4gICAgZnVuY3Rpb25OYW1lOidEZWxldGVQb3N0Y29kZXNGdW4nLFxyXG4gICAgaGFuZGxlcjonaW5kZXguRGVsZXRlUG9zdGNvZGVzSGFuZGxlcicsXHJcbiAgICBtZW1vcnlTaXplOiAxMDI0LFxyXG4gICAgcnVudGltZTogbGFtYmRhLlJ1bnRpbWUuTk9ERUpTXzE0X1gsXHJcbiAgICB0aW1lb3V0OiBjZGsuRHVyYXRpb24uc2Vjb25kcygzNSlcclxuICB9XHJcbn1cclxuZXhwb3J0IGNvbnN0IFdvcmtzbW5hU2NoZWR1bGVMYW1iZGEgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIGNvZGU6bGFtYmRhLkNvZGUuZnJvbUFzc2V0KCcuL2Z1bmN0aW9ucy9Xb3Jrc21uYVNjaGVkdWxlJyksXHJcbiAgICBmdW5jdGlvbk5hbWU6J1dvcmtzbW5hU2NoZWR1bGVGdW4nLFxyXG4gICAgaGFuZGxlcjonaW5kZXguV29ya3NtbmFTY2hlZHVsZUhhbmRsZXInLFxyXG4gICAgbWVtb3J5U2l6ZTogMTAyNCxcclxuICAgIHJ1bnRpbWU6IGxhbWJkYS5SdW50aW1lLk5PREVKU18xNF9YLFxyXG4gICAgdGltZW91dDogY2RrLkR1cmF0aW9uLnNlY29uZHMoMzUpXHJcbiAgfVxyXG59XHJcbmV4cG9ydCBjb25zdCBEZWxldGVXb3JrbWFuU2NoZWR1bGVMYW1iZGEgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIGNvZGU6bGFtYmRhLkNvZGUuZnJvbUFzc2V0KCcuL2Z1bmN0aW9ucy9EZWxldGVXb3JrbWFuU2NoZWR1bGUnKSxcclxuICAgIGZ1bmN0aW9uTmFtZTonRGVsZXRlV29ya21hblNjaGVkdWxlRnVuJyxcclxuICAgIGhhbmRsZXI6J2luZGV4LkRlbGV0ZVdvcmttYW5TY2hlZHVsZUhhbmRsZXInLFxyXG4gICAgbWVtb3J5U2l6ZTogMTAyNCxcclxuICAgIHJ1bnRpbWU6IGxhbWJkYS5SdW50aW1lLk5PREVKU18xNF9YLFxyXG4gICAgdGltZW91dDogY2RrLkR1cmF0aW9uLnNlY29uZHMoMzUpXHJcbiAgfVxyXG59XHJcbmV4cG9ydCBjb25zdCBHZXRXb3Jrc21hblNjaGVkdWxlc0xhbWJkYSA9ICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgY29kZTpsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL0dldFdvcmtzbWFuU2NoZWR1bGVzJyksXHJcbiAgICBmdW5jdGlvbk5hbWU6J0dldFdvcmtzbWFuU2NoZWR1bGVzRnVuJyxcclxuICAgIGhhbmRsZXI6J2luZGV4LkdldFdvcmtzbWFuU2NoZWR1bGVzSGFuZGxlcicsXHJcbiAgICBtZW1vcnlTaXplOiAxMDI0LFxyXG4gICAgcnVudGltZTogbGFtYmRhLlJ1bnRpbWUuTk9ERUpTXzE0X1gsXHJcbiAgICB0aW1lb3V0OiBjZGsuRHVyYXRpb24uc2Vjb25kcygzNSlcclxuICB9XHJcbn1cclxuZXhwb3J0IGNvbnN0IFdvcmtzbWFuam9ic0NyZWF0ZUxhbWJkYSA9ICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgY29kZTpsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL1dvcmtzbWFuam9ic0NyZWF0ZScpLFxyXG4gICAgZnVuY3Rpb25OYW1lOidXb3Jrc21hbmpvYnNDcmVhdGVGdW4nLFxyXG4gICAgaGFuZGxlcjonaW5kZXguV29ya3NtYW5qb2JzQ3JlYXRlSGFuZGxlcicsXHJcbiAgICBtZW1vcnlTaXplOiAxMDI0LFxyXG4gICAgcnVudGltZTogbGFtYmRhLlJ1bnRpbWUuTk9ERUpTXzE0X1gsXHJcbiAgICB0aW1lb3V0OiBjZGsuRHVyYXRpb24uc2Vjb25kcygzNSlcclxuICB9XHJcbn1cclxuZXhwb3J0IGNvbnN0IEdldFdvcmtzbWFuam9ic0xhbWJkYSA9ICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgY29kZTpsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZnVuY3Rpb25zL0dldFdvcmtzbWFuam9icycpLFxyXG4gICAgZnVuY3Rpb25OYW1lOidHZXRXb3Jrc21hbmpvYnNGdW4nLFxyXG4gICAgaGFuZGxlcjonaW5kZXguR2V0V29ya3NtYW5qb2JzSGFuZGxlcicsXHJcbiAgICBtZW1vcnlTaXplOiAxMDI0LFxyXG4gICAgcnVudGltZTogbGFtYmRhLlJ1bnRpbWUuTk9ERUpTXzE0X1gsXHJcbiAgICB0aW1lb3V0OiBjZGsuRHVyYXRpb24uc2Vjb25kcygzNSlcclxuICB9XHJcbn0iXX0=